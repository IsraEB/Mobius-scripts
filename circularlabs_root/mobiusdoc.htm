<html>
<head>
<title>Mobius</title>
<style type='text/css'>
<!-- 
div.constraint,div.issue,div.note,div.notice     { margin-left: 2em; }dt.label       { display: run-in; }li           { margin-top: 0.3em; margin-bottom: 0.3em; }p           { margin-top: 0.6em; margin-bottom: 0.6em; }.diff-chg	{ background-color: orange; }.diff-del	{ background-color: red; text-decoration: line-through;}.diff-add	{ background-color: lime; }table          { empty-cells: show; }div.exampleInner { margin-left: 1em;                       margin-top: 0em; margin-bottom: 0em}div.exampleOuter {border: 4px double gray;                  margin: 0em; padding: 0em}div.exampleInner { background-color: #d5dee3;                   border-top-width: 4px;                   border-top-style: double;                   border-top-color: #d3d3d3;                   border-bottom-width: 4px;                   border-bottom-style: double;                   border-bottom-color: #d3d3d3;                   padding: 4px; margin: 0em }div.exampleWrapper { margin: 4px }div.exampleHeader { font-weight: bold; margin: 4px}body {  padding: 2em 1em 2em 70px;  margin: 0;  font-family: sans-serif;  color: black;  background: white;  background-position: top left;  background-attachment: fixed;  background-repeat: no-repeat;}:link { color: #00C; background: transparent }:visited { color: #609; background: transparent }a:active { color: #C00; background: transparent }a:link img, a:visited img { border-style: none } /* no border on img links */a img { color: white; }        /* trick to hide the border in Netscape 4 */@media all {                   /* hide the next rule from Netscape 4 */  a img { color: inherit; }    /* undo the color change above */}th, td { /* ns 4 */  font-family: sans-serif;}h1, h2, h3, h4, h5, h6 { text-align: left }/* background should be transparent, but WebTV has a bug */h1, h2, h3 { color: #005A9C; background: white }h1 { font: 170% sans-serif }h2 { font: 140% sans-serif }h3 { font: 120% sans-serif }h4 { font: bold 100% sans-serif }h5 { font: italic 100% sans-serif }h6 { font: small-caps 100% sans-serif }.hide { display: none }div.head { margin-bottom: 1em }div.head h1 { margin-top: 2em; clear: both }div.head table { margin-left: 2em; margin-top: 2em }p.copyright { font-size: small }p.copyright small { font-size: small }@media screen {  /* hide from IE3 */a[href]:hover { background: #ffa }}dd { margin-bottom: 0.3em }dt { margin-top: 0; margin-bottom: 0 } /* opera 3.50 */dt { font-weight: bold }pre, code { font-family:monospace; font-size: medium }ul.toc {  list-style: disc;		/* Mac NS has problem with 'none' */  list-style: none;}-->
</style>
</head>
<body>
<h1>Mobius</h1>
<h2>Version 1.29</h2>
<h2>July, 2006</h2>
<br>
<hr>
<h2>Contents</h2>
<table>
<tr align=left><td>1</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Introduction'>Introduction</a></td>
<tr align=left><td>2</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#What's New'>What's New</a></td>
<tr align=left><td>2.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.29'>Release 1.29</a></td>
<tr align=left><td>2.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.28'>Release 1.28</a></td>
<tr align=left><td>2.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.27'>Release 1.27</a></td>
<tr align=left><td>2.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.26'>Release 1.26</a></td>
<tr align=left><td>2.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.25'>Release 1.25</a></td>
<tr align=left><td>2.5.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Bugs Fixed'>Bugs Fixed</a></td>
<tr align=left><td>2.5.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#New Parameters'>New Parameters</a></td>
<tr align=left><td>2.5.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#New Display Components'>New Display Components</a></td>
<tr align=left><td>2.5.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#New Script Variables'>New Script Variables</a></td>
<tr align=left><td>2.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.24'>Release 1.24</a></td>
<tr align=left><td>2.7</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.23'>Release 1.23</a></td>
<tr align=left><td>2.8</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.22'>Release 1.22</a></td>
<tr align=left><td>2.9</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Release 1.19'>Release 1.19</a></td>
<tr align=left><td>3</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Upgrading'>Upgrading</a></td>
<tr align=left><td>3.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Upgrading to 1.24'>Upgrading to 1.24</a></td>
<tr align=left><td>3.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Upgrading 1.16 (or earlier) to 1.18'>Upgrading 1.16 (or earlier) to 1.18</a></td>
<tr align=left><td>4</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Getting Started'>Getting Started</a></td>
<tr align=left><td>4.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Mobius VST Plugin'>Mobius VST Plugin</a></td>
<tr align=left><td>4.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#MIDI Devices'>MIDI Devices</a></td>
<tr align=left><td>5</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Concepts'>Concepts</a></td>
<tr align=left><td>6</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#User Interface'>User Interface</a></td>
<tr align=left><td>6.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Using Buttons'>Using Buttons</a></td>
<tr align=left><td>6.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Using The Keyboard'>Using The Keyboard</a></td>
<tr align=left><td>6.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Using Tracks'>Using Tracks</a></td>
<tr align=left><td>6.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#The Status Area'>The Status Area</a></td>
<tr align=left><td>6.4.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Configuring the Status Area'>Configuring the Status Area</a></td>
<tr align=left><td>6.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Using Presets'>Using Presets</a></td>
<tr align=left><td>6.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Using Setups'>Using Setups</a></td>
<tr align=left><td>6.7</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a></td>
<tr align=left><td>7</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Global Parameters'>Global Parameters</a></td>
<tr align=left><td>8</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a></td>
<tr align=left><td>8.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Individual Loops'>Individual Loops</a></td>
<tr align=left><td>8.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Quick Save'>Quick Save</a></td>
<tr align=left><td>8.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Projects'>Projects</a></td>
<tr align=left><td>9</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Functions'>Functions</a></td>
<tr align=left><td>9.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Unimplemented EDP Functions'>Unimplemented EDP Functions</a></td>
<tr align=left><td>9.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Supported EDP Functions'>Supported EDP Functions</a></td>
<tr align=left><td>9.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Mobius Functions'>Mobius Functions</a></td>
<tr align=left><td>9.3.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Slip Functions'>Slip Functions</a></td>
<tr align=left><td>10</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Parameters'>Parameters</a></td>
<tr align=left><td>10.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Unimplemented EDP Parameters'>Unimplemented EDP Parameters</a></td>
<tr align=left><td>10.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Supported EDP Parameters'>Supported EDP Parameters</a></td>
<tr align=left><td>10.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Mobius Parameters'>Mobius Parameters</a></td>
<tr align=left><td>10.3.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Mute Cancel'>Mute Cancel</a></td>
<tr align=left><td>10.3.1.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Function Classes'>Function Classes</a></td>
<tr align=left><td>11</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Controlling Tracks'>Controlling Tracks</a></td>
<tr align=left><td>11.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Focus Lock'>Focus Lock</a></td>
<tr align=left><td>11.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Track Groups'>Track Groups</a></td>
<tr align=left><td>11.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Track Binding Scope'>Track Binding Scope</a></td>
<tr align=left><td>11.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Group Binding Scope'>Group Binding Scope</a></td>
<tr align=left><td>12</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Controlling Feedback'>Controlling Feedback</a></td>
<tr align=left><td>13</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Rate Shifting'>Rate Shifting</a></td>
<tr align=left><td>14</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Pitch Shifting'>Pitch Shifting</a></td>
<tr align=left><td>15</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Bounce Recording'>Bounce Recording</a></td>
<tr align=left><td>16</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Synchronization'>Synchronization</a></td>
<tr align=left><td>16.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Drift Retrigger'>Drift Retrigger</a></td>
<tr align=left><td>16.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=Out'>Sync=Out</a></td>
<tr align=left><td>16.2.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Speed Sync Adjust'>Speed Sync Adjust</a></td>
<tr align=left><td>16.2.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Unrounded Sync Adjust'>Unrounded Sync Adjust</a></td>
<tr align=left><td>16.2.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Controlling Host Tempo'>Controlling Host Tempo</a></td>
<tr align=left><td>16.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=Out User Start'>Sync=Out User Start</a></td>
<tr align=left><td>16.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=In'>Sync=In</a></td>
<tr align=left><td>16.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=MIDI Bar'>Sync=MIDI Bar</a></td>
<tr align=left><td>16.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=MIDI Beat'>Sync=MIDI Beat</a></td>
<tr align=left><td>16.7</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=Host Beat'>Sync=Host Beat</a></td>
<tr align=left><td>16.8</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Sync=Host Bar'>Sync=Host Bar</a></td>
<tr align=left><td>16.9</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Track Synchronization'>Track Synchronization</a></td>
<tr align=left><td>16.10</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Missing Synchronization Features'>Missing Synchronization Features</a></td>
<tr align=left><td>16.10.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Auto Start Point'>Auto Start Point</a></td>
<tr align=left><td>16.10.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#MIDI Sync Indicators'>MIDI Sync Indicators</a></td>
<tr align=left><td>16.10.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Stop Sync'>Stop Sync</a></td>
<tr align=left><td>16.10.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Tempo Select'>Tempo Select</a></td>
<tr align=left><td>16.11</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Synchronization Bugs'>Synchronization Bugs</a></td>
<tr align=left><td>17</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Interface Modes'>Interface Modes</a></td>
<tr align=left><td>17.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Loop'>InterfaceMode=Loop</a></td>
<tr align=left><td>17.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=In'>InterfaceMode=In</a></td>
<tr align=left><td>17.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Out'>InterfaceMode=Out</a></td>
<tr align=left><td>17.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Stutter'>InterfaceMode=Stutter</a></td>
<tr align=left><td>17.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Expert'>InterfaceMode=Expert</a></td>
<tr align=left><td>17.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Flip'>InterfaceMode=Flip</a></td>
<tr align=left><td>17.7</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Replace'>InterfaceMode=Replace</a></td>
<tr align=left><td>17.8</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#InterfaceMode=Delay'>InterfaceMode=Delay</a></td>
<tr align=left><td>18</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Advanced Features'>Advanced Features</a></td>
<tr align=left><td>18.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Latency Calibration'>Latency Calibration</a></td>
<tr align=left><td>18.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Samples'>Samples</a></td>
<tr align=left><td>18.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Scripts'>Scripts</a></td>
<tr align=left><td>18.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#XML Files'>XML Files</a></td>
<tr align=left><td>18.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#External EDP Control'>External EDP Control</a></td>
<tr align=left><td>18.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Trace'>Trace</a></td>
<tr align=left><td>19</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Menu Reference'>Menu Reference</a></td>
<tr align=left><td>19.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#File Menu'>File Menu</a></td>
<tr align=left><td>19.1.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Open Project'>Open Project</a></td>
<tr align=left><td>19.1.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Open Loop'>Open Loop</a></td>
<tr align=left><td>19.1.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Save Project'>Save Project</a></td>
<tr align=left><td>19.1.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Save Project Template'>Save Project Template</a></td>
<tr align=left><td>19.1.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Save Loop'>Save Loop</a></td>
<tr align=left><td>19.1.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Save Quick'>Save Quick</a></td>
<tr align=left><td>19.1.7</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Exit'>Exit</a></td>
<tr align=left><td>19.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Presets Menu'>Presets Menu</a></td>
<tr align=left><td>19.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Configuration Menu'>Configuration Menu</a></td>
<tr align=left><td>19.3.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Presets'>Presets</a></td>
<tr align=left><td>19.3.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Track Setups'>Track Setups</a></td>
<tr align=left><td>19.3.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a></td>
<tr align=left><td>19.3.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Keyboard Control'>Keyboard Control</a></td>
<tr align=left><td>19.3.5</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Buttons'>Buttons</a></td>
<tr align=left><td>19.3.6</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Scripts'>Scripts</a></td>
<tr align=left><td>19.3.7</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Samples'>Samples</a></td>
<tr align=left><td>19.3.8</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#MIDI Devices'>MIDI Devices</a></td>
<tr align=left><td>19.3.9</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Audio Devices'>Audio Devices</a></td>
<tr align=left><td>19.3.10</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Global Parameters '>Global Parameters </a></td>
<tr align=left><td>19.3.11</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Display Components'>Display Components</a></td>
<tr align=left><td>19.3.12</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Palette'>Palette</a></td>
<tr align=left><td>19.3.13</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#External EDP'>External EDP</a></td>
<tr align=left><td>19.4</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Help Menu'>Help Menu</a></td>
<tr align=left><td>19.4.1</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#Key Bindings'>Key Bindings</a></td>
<tr align=left><td>19.4.2</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#MIDI Bindings'>MIDI Bindings</a></td>
<tr align=left><td>19.4.3</td><td>&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='mobiusdoc.htm#About'>About</a></td>
<tr align=left><td>20</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#The Future'>The Future</a></td>
<tr align=left><td>21</td><td>&nbsp;&nbsp;</td><td><a href='mobiusdoc.htm#Acknowledgments'>Acknowledgments</a></td>
</table>
<hr>
<a name='Introduction'>
<div class=div1><h2>1 Introduction</h2>
</a>
<p>Welcome to Mobius!  Mobius is a tool for the real-time creation and&#xA;manipulation of audio loops.  It was inspired by the venerable Gibson&#xA;Echoplex Digital Pro (EDP) with Loop IV software.  Mobius implements&#xA;much of the Loop IV functionality, removes some limitations, and adds&#xA;many new features.  Because the EDP is an extremely complex&#xA;device, I do not have the resources at this time to write a&#xA;comprehensive user's manual.  Instead, I will focus on those aspects&#xA;of Mobius that are different from the EDP.  It is <b>strongly</b>&#xA;recommended that you either already be familiar with the EDP, or that&#xA;you study the EDP manual to fully understand what Mobius does.</p>
<p>The EDP manual is available <a href='http://www.gibson.com/products/strings/echoplex/EchoplexPlusManual12.pdf'>here</a>.</p>
<p>If you are new to looping, <a href='http://www.loopers-delight.com'>Loopers&#xA;Delight</a> is the best place to explore and learn.</p>
<p>If you find problems, I kindly ask that you report them.  The best&#xA;place to report bugs is the &#xA;<a href='http://groups.yahoo.com/group/zonemobius'>Yahoo discussion group</a>.&#xA;  You can also email me bug reports at&#xA;<b>jeff@zonemobius.com</b>.  Even if you don't find any problems feel&#xA;free to send me a note letting me know what you liked or didn't&#xA;like.</p>
<p>If you are a new user, proceed directly to the <a href='mobiusdoc.htm#Getting Started'>Getting Started</a>&#xA;section.</p>
<p>Thank you for helping me make Mobius better!  I hope you enjoy&#xA;it as much as I do.</p>
</div>
<a name='What's New'>
<div class=div1><h2>2 What's New</h2>
</a>
<p>This section is intended for users that already have experience &#xA;with an earlier release of Mobius.  If you are a new user, proceed&#xA;directly to the <a href='mobiusdoc.htm#Getting Started'>Getting Started</a> section.</p>
<a name='Release 1.29'>
<div class=div2><h3>2.1 Release 1.29</h3>
</a>
<p>The major new features in this release are support for multi-channel&#xA;audio interfaces, and more options for canceling mute mode.</p>
<p>The standalone version of Mobius can now use all of the channels&#xA;available on the selected audio interface, previous releases could&#xA;only use the first two channels as a stereo pair.  Channels are&#xA;grouped into stereo pairs called "ports".  For example, if an audio&#xA;interface has 8 input and output jacks, there will be 4 stereo input&#xA;and output ports.</p>
<p>Ports are selected in the <i>Track Setup</i> dialog.  The &#xA;selectors labeled <i>ASIO Input Port</i> and <i>ASIO Output Port</i>&#xA;are used to select the port numbers, each track may have a different&#xA;input and output port.  See the <a href='mobiusdoc.htm#Using Setups'>Using Setups</a> for more&#xA;information.</p>
<p>The <i>Mute Cancel</i> feature first introduced in release 1.26 has&#xA;been significantly enhanced.  Several new cancel modes are now available&#xA;including <i>Never</i> and <i>Custom</i>.  See the section&#xA;<a href='mobiusdoc.htm#Mute Cancel'>Mute Cancel</a> for more information.</p>
<p>The <i>Slip Forward</i> and <i>Slip Backward</i> can be used&#xA;to cause the playback position to immediately jump forward or&#xA;backward by a selectable interval.  See the <a href='mobiusdoc.htm#Slip Functions'>Slip Functions</a>&#xA;section for more information.</p>
<p>In addition the following bugs have been fixed:</p>
<ul>
<li>Changing a track's Mono mode would not take effect until Mobius restarted</li>
<li>Preset alert popup cannot be disabled</li>
<li>Audio blip when doing a Retrigger with an immediate Mute</li>
<li>Selecting a Setup doesn't immediately change the Presets</li>
<li>Occasional crash running scripts that don't end with a Wait statement</li>
</ul>
</div>
<a name='Release 1.28'>
<div class=div2><h3>2.2 Release 1.28</h3>
</a>
<p>The major new features for this release are <i>concurrent scripts</i>, &#xA;<i>mono tracks</i>, <i>improved pitch shifting</i>.</p>
<p>Concurrent scripts means that you can have more than one script&#xA;running in a track at the same time.  Previously if you attempted to&#xA;use a script when there was another one waiting for an event, the&#xA;first script would be canceled.  This will make scripts behave more&#xA;like built-in functions, and should resolve a number of reported problems&#xA;related to scripting.</p>
<p>Most of the clicking noises during pitch shifting have been eliminated, &#xA;though you may still hear some if you are using a keyboard controller and&#xA;are changing pitches very rapidly (about 16th notes at 120 BPM).  There is still&#xA;however a significant amount of latency added by the pitch shifter, changes&#xA;in pitch will sound as if they are delayed by about 1/10 second.</p>
<p>Mono track mode allows a track to have a single mono input channel&#xA;that is then panned in a stereo output field.  This is useful for&#xA;instruments that are inheriently mono, such as accoustic instruments&#xA;that are not passed through a stereo effects device.  Previously such&#xA;devices would be panned hard left or hard right and could not be moved.&#xA;See the <a href='mobiusdoc.htm#Using Setups'>Using Setups</a> section for more.</p>
<p>MIDI bindings to select Setups, Presets, and MIDI Configurations have&#xA;been simplified and now work like bindings for functions and controls.  &#xA;Bindings for all configuration objects are now done in the <i>MIDI Control</i>&#xA;dialog.  A third panel labled <i>Configuration</i> contains the names of&#xA;each configuration object, prefixed by the type of that object (<i>Preset</i>,&#xA;<i>Setup</i>, or <i>MIDI</i>).  This allows you to use MIDI note and control&#xA;change events to select configuration objects, previously you were limited&#xA;to using program change events.</p>
<p>To help position display components in the UI, when the shift key is&#xA;helf down, the components will be erased and only their borders will be drawn.&#xA;This is especially helpful for components that are often invisible such&#xA;as the Tempo Display or the Message Area.</p>
<p>The <i>Preset Alert</i> display component has replaced with the&#xA;<i>Messages</i> component.  The preset alert formerly would popup a&#xA;window whenever the preset changed, because this window would&#xA;temporarily take keyboard focus, the keyboard would appear to freeze.&#xA;Presets changes are now displayed in a normal UI component in the main&#xA;Mobius window, keyboard focus does not change.  The component is&#xA;called <i>Messages</i> and may be selected in the <i>Dispaly&#xA;Components</i> dialog.</p>
<p>The <i>Restore on Reset</i> parameter has been added to the Track&#xA;Setups.  This parameter lets you define which track parameters will be&#xA;changed to the values defined in the setup whenever the Reset function&#xA;is used.  If no parameters are selected, the track will stay in its&#xA;current state after a reset (though all audio content will be lost).</p>
<p>In addition the following bugs have been fixed:</p>
<ul>
<li>Crash opening the main window when running under Usine</li>
<li>Keyboard freeze and occasional crash when selecting tracks with the keyboard</li>
<li>When using Setups, a Reset after recording a loop without changing any controls resets to the default state rather than the state in the Setup</li>
</ul>
</div>
<a name='Release 1.27'>
<div class=div2><h3>2.3 Release 1.27</h3>
</a>
<p>The major new feature in this release is <i>Setups</i>.  Setups&#xA;provide a mechanism to set the initial operating parameters for all&#xA;tracks including controls like output level and pan, as well as&#xA;assignments like presets and groups.  You can think of it like a&#xA;"global preset" for quickly configuring the tracks for a particular&#xA;performance.  See <a href='mobiusdoc.htm#Using Setups'>Using Setups</a> for details.</p>
<p><b>NOTE:</b> The <i>default project template</i> concept used&#xA;in previous releases to assign VST ports and other track parameters&#xA;is no longer supported.  When you upgrade to 1.27 the default&#xA;project will be converted into a setup with the name "Default Setup".&#xA;After this conversion the default project will not be used, and you&#xA;may delete the file "init.mob" in the Mobius installation directory.</p>
<p>Release 1.26 changed the behavior of the functions that control&#xA;playback direction, rate and pitch so that they do not cancel Mute&#xA;mode.  There were a few users however that preferred the old behavior&#xA;where these functions will always cancel Mute mode.  This behavior&#xA;may now be controlled with the <i>Mute Cancel</i> parameter.  When&#xA;this parameter is set to <i>Major Modes</i> only functions that&#xA;change the mode will cancel Mute (the 1.26 behavior).  If this&#xA;is set to <i>Always</i> any function that modifies the loop will&#xA;cancel mute mode, including the Reverse, Speed, Rate, and Pitch functions&#xA;(pre 1.26 behavior).</p>
<p>In addition the following bugs have been fixed:</p>
<ul>
<li>Crash when binding keys to the UI functions related to parameter&#xA;control (NextParameter, PrevParameter, IncParameter, DecParameter)</li>
<li>Main track controls snapping back to original values after changing&#xA;tracks using the keyboard</li>
<li>GlobalPause not working</li>
</ul>
</div>
<a name='Release 1.26'>
<div class=div2><h3>2.4 Release 1.26</h3>
</a>
<p>This release includes a number of changes related to the scheduling&#xA;of functions that affect how the loop is played: <i>Reverse</i>, &#xA;<i>Half Speed</i>, <i>Rate Shift</i>, and <i>Pitch Shift</i>.</p>
<p>When quantizing, these functions&#xA;(along with Overdub) may now be stacked on the same quantization point, &#xA;previously they would be scheduled on successive quantization points.  &#xA;For example, this allows you to enter Reverse and Half Speed mode at&#xA;exactly the same time by using quantization and calling both functions &#xA;before the quantization point.</p>
<p>When using the Pitch Shift and Rate Shift functions, we will first&#xA;look for an existing function event of that type scheduled at the next &#xA;quantization point.  If we find one, we modify the pitch or rate value&#xA;accordingly rather than scheduling another event.  This can be used&#xA;with the incremental functions like Rate Up and Rate Down to scroll &#xA;to any desired rate.  The last rate selected before the quantization&#xA;point will be used.</p>
<p>Reverse, Half Speed, Rate Shift, and Pitch Shift functions will&#xA;now no longer take you out of Mute mode.  This can be used to &#xA;make dramatic changes to the way the loop is played without each&#xA;change being individually audible.</p>
<p>Finally, the Reverse, Rate, and Pitch functions now have&#xA;<i>transfer modes</i> in the preset.  These modes control how the&#xA;pitch, rate, and direction are carried forward into the next loop when&#xA;using one of the loop switching functions.  The transfer modes for each&#xA;function type have the following values:</p>
<ul>
<li><b>Off</b> - the mode is unconditionally turned off</li>
<li><b>Follow</b> - the current mode is continued</li>
<li><b>Remember</b> - the mode in effect when the next loop was last playing is restored</li>
</ul>
<p>Until now, Mobius has operated as if the transfer mode was <i>Follow</i>&#xA;for all function types.</p>
<p>The following new functions have been added:</p>
<ul>
<li><b>Pause</b> - halt playback then resume from the same location</li>
<li><b>Clear</b> - erase the current loop contents leaving an empty loop&#xA;of the same size</li>
<li><b>Instant Multiply 2</b> - immediately multiply the loop by 2</li>
<li><b>Instant Multiply 3</b> - immediately multiply the loop by 3</li>
<li><b>Instant Multiply 4</b> - immediately multiply the loop by 4</li>
</ul>
<p>In addition the features described in this section, see the <i>README</i>&#xA;file for more information on the bugs fixed in this release.</p>
</div>
<a name='Release 1.25'>
<div class=div2><h3>2.5 Release 1.25</h3>
</a>
<a name='Bugs Fixed'>
<div class=div3><h4>2.5.1 Bugs Fixed</h4>
</a>
<ul>
<li>Crash deleting the plugin in many hosts when MIDI devices are selected</li>
<li>Loop switch functions can now operate as mode ending events for Multiply and Insert mode</li>
</ul>
</div>
<a name='New Parameters'>
<div class=div3><h4>2.5.2 New Parameters</h4>
</a>
<dl>
<dt><a name='Overdub Transfer'>Overdub Transfer</a></dt>
<dd>A preset parameter that controls how overdub mode is carried forward&#xA;when switching loops.  If set to <i>Off</i> overdub mode is always off&#xA;after switchign loops.  If set to <i>Follow</i> the overdub mode in the&#xA;current loop is carried forward to the next.  If set to <i>Remember</i>&#xA;the overdub mode of a loop is remembered when leaving the loop, and&#xA;restored when returning to it.</dd>
<dt><a name='Modes Ignoring Secondary Feedback'>Modes Ignoring Secondary Feedback</a></dt>
<dd>A global parameter that lets you select loop modes during which&#xA;the Secondary Feedback control will not be active.  This is an advanced&#xA;parameter that is used when the <i>Interface Mode</i> parameter is&#xA;set to <i>Expert</i> or <i>Stutter</i>.  Normally all recording modes&#xA;are subject to Secondary Feedback when using these interface modes.</dd>
</dl>
</div>
<a name='New Display Components'>
<div class=div3><h4>2.5.3 New Display Components</h4>
</a>
<dl>
<dt><a name='Loop Number'>Loop Number</a></dt>
<dd>A large number that may be displayed in the track strip to make it&#xA;easier to identify loops from a distance.  The number also functions&#xA;as the <i>focus lock</i> indiciator, you can click on it to activate or&#xA;deactivate focus lock, and it will change color when focus lock is active.&#xA;This is easier to see than the small focus lock button.</dd>
<dt><a name='Loop Radar'>Loop Radar</a></dt>
<dd>An alternative to the horizontal "thermometer" that displays the&#xA;current playback position in the loop using a graphic that resembles&#xA;a pie chart or radar screen.  This makes it easier to determine&#xA;the position in the loop from a distance.</dd>
</dl>
</div>
<a name='New Script Variables'>
<div class=div3><h4>2.5.4 New Script Variables</h4>
</a>
<dl>
<dt><a name='globalMute'>globalMute</a></dt>
<dd>Set to "true" if we are in global mute mode, and the current track&#xA;will be restored to play mode when the global mute is canceled.</dd>
<dt><a name='solo'>solo</a></dt>
<dd>Set to "true" if this track is currently being soloed.</dd>
<dt><a name='nextLoop'>nextLoop</a></dt>
<dd>Set to the number of the next loop if we are currently in&#xA;a quantized loop switch.</dd>
</dl>
</div>
</div>
<a name='Release 1.24'>
<div class=div2><h3>2.6 Release 1.24</h3>
</a>
<p>The most significant new function is <a href='mobiusdoc.htm#Bounce Recording'>Bounce Recording</a> which&#xA;allows you to capture the output of several tracks, mix them together,&#xA;and copy the result into an empty track which can then be triggered&#xA;and manipulated like any other loop.</p>
<p>The new <b>Solo</b> function behaves similar to a solo button&#xA;on a mixing console.  When first used all tracks other than the active&#xA;track are unmuted.  When used a second time, the mute state of all &#xA;tracks is restored to what it was before the first Solo.</p>
<p>The new <b>Global Mute</b> function mutes all tracks that are&#xA;currently playing, but does not unmute any tracks that are currently&#xA;muted.  If you use Global Mute a second time, it will restore the&#xA;previous track mutes, unmuting only those tracks that were&#xA;playing previously.  If you do a Global Mute, then start changing&#xA;the mute state of tracks manually, global mute mode is canceled.</p>
<p>MIDI control has also been improved.  You are now able to &#xA;store the MIDI channel with a function or controller binding rather than&#xA;requiring that function events all come in on the same channel.  Further,&#xA;there are now <i>binding scopes</i> for each track and group allowing&#xA;you to make a MIDI binding to any function or control, and have that&#xA;binding performed in only one track or group of tracks.  See&#xA;the <a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a> section for more details.</p>
<p>MIDI device selection has been improved.  You may now&#xA;select any number of input and output devices, and you may select&#xA;one device to be used a "MIDI through".  This allows Mobius to respond&#xA;to commands sent by different devices that are not connected&#xA;in a MIDI through chain, and send MIDI synchronization messages to more&#xA;than one device.  If a MIDI through device is selected, all events&#xA;received from the MIDI input devices will be echoed immediately to the&#xA;through device.  See the <a href='mobiusdoc.htm#MIDI Devices'>MIDI Devices</a> section for more.</p>
<p>Finally a "technology preview" of the <a href='mobiusdoc.htm#Pitch Shifting'>Pitch Shifting</a> &#xA;function is available for the curious.  Note though that this is&#xA;still in development and it has many problems.  It is provided only&#xA;to give you and idea for how pitch shifting will eventually work&#xA;within Mobius.</p>
</div>
<a name='Release 1.23'>
<div class=div2><h3>2.7 Release 1.23</h3>
</a>
<p>The major new feature in this release is <i>Rate Shifting</i>.&#xA;This allows you to change the playback and recording rate of the&#xA;loop, similar to the original Half Speed function, but with a full&#xA;range of rates that correspond to the notes of the chromatic scale.</p>
<p>See the <a href='mobiusdoc.htm#Rate Shifting'>Rate Shifting</a> section for more information.</p>
</div>
<a name='Release 1.22'>
<div class=div2><h3>2.8 Release 1.22</h3>
</a>
<p>The major new feature in this release is <i>track groups</i>.&#xA;Track groups are similar to the existing <i>focus lock</i> feature but&#xA;more powerful.  When tracks are assigned to groups, a function&#xA;performed in one track can automatically be performed in all other&#xA;tracks in the same group.  MIDI continous controllers may also be&#xA;bound to a new set of track group controls so that the output level,&#xA;feedback, and pan of all tracks in a group may be set at the same&#xA;time.</p>
<p>The way MIDI continuous controllers are assigned has been&#xA;redesigned and a new concept called <i>Controls</i> has been&#xA;introduced.  A Control is a mobius parameter that may have a large&#xA;range of values.  Controls are bound to MIDI events in the <i>MIDI&#xA;Control</i> dialog similar to the way functions are bound.  All MIDI&#xA;binding is now done in the MIDI Control dialog and stored in the&#xA;mobius.xml file, there is no more <i>Tracks</i> dialog that stored&#xA;MIDI bindings in the project files which was a source of&#xA;confusion.</p>
<p>If you had previously assigned track controllers in the initial&#xA;project, these will be automaticaly converted to the new format, but&#xA;<b>only</b> for the default project.  If you have created your own&#xA;named projects that contain track controller bindings, these cannot be&#xA;converted to the new format.  Send me mail if you need help with the&#xA;conversion.</p>
<p>A new global parameter named <i>Group and Focus Lock Functions</i>&#xA;allows you to specify the functions that will obey focus lock and&#xA;track groups.  For example, you may want the <i>Next Loop</i> function&#xA;to obey track groups, but not the <i>Record</i> or <i>Overdub</i>&#xA;functions.</p>
<p>See the section <a href='mobiusdoc.htm#Controlling Tracks'>Controlling Tracks</a> for more information.</p>
</div>
<a name='Release 1.19'>
<div class=div2><h3>2.9 Release 1.19</h3>
</a>
<p>The major new feature in this release is <i>continuous feedback</i>&#xA;where changes to the feedback level are recorded into the next layer&#xA;as it is recorded.  This differs from the previous behavior where feedback&#xA;was only applied once for the entire layer when you reached the end&#xA;of the loop and created a new layer.  By allowing feedback&#xA;to vary continuously, you can "sculpt" the material being copied&#xA;into the next layer.</p>
<p>Note though that a side effect of continuous feedback is that you&#xA;can no longer use the "Save Project Layers" option to save just the&#xA;new material overdubbed in each layer to a file, the layer files will&#xA;contain all of the material copied from the previous layers as well.&#xA;If you prefer the old behavior, you can disable layer flattening by&#xA;checking the new "No Layer Flattening" preset parameter.</p>
<p>See the section <a href='mobiusdoc.htm#Controlling Feedback'>Controlling Feedback</a> for full details.</p>
<p>The interface modes <i>Expert</i>, <i>Stutter</i>, <i>Replace</i>,&#xA;and <i>Flip</i> are now supported.  See the <a href='mobiusdoc.htm#Interface Modes'>Interface Modes</a>&#xA;section for details.</p>
<p>A number of changes to the scripting language have been made.  If you&#xA;have been writing scripts they may not behave as they did in an earlier&#xA;release, especially if you have been using <i>Wait</i> statements.  Please&#xA;read the new scripting manual, or post a message to the Yahoo group&#xA;if you are having a problem using an old script with this release.</p>
</div>
</div>
<a name='Upgrading'>
<div class=div1><h2>3 Upgrading</h2>
</a>
<p>This section is intended for users that already have experience &#xA;with an earlier release of Mobius.  If you are a new user, proceed&#xA;directly to the <a href='mobiusdoc.htm#Getting Started'>Getting Started</a> section.</p>
<p>For most upgrades, you may simply install the new version of Mobius&#xA;into the same directory as the previous version.  All of the&#xA;configuration performed in the previous version will be carried over&#xA;to the new version.</p>
<p>Occasionally, a release may introduce changes to the user interface&#xA;that require modifications to the UI configuration.  Since we will not&#xA;overwrite an existing UI configuration when upgrading, what you see in&#xA;the Mobius UI may not match what is described in the manual if you&#xA;have made changes to the UI configuration.</p>
<p>If you would like to start over with a UI configuration that matches&#xA;what is in the manual, before installing the new version rename the file&#xA;<i>ui.xml</i> in the Mobius installation directory to <i>ui.save</i>.  You&#xA;will lose changes you have made to the button list, display components, &#xA;and color palette.  All other non-UI configuration such as MIDI and&#xA;audio device selection will be preserved.</p>
<p>You may also keep your current UI configuration and manually add&#xA;the new components.  After the install, bring up Mobius and select the&#xA;<i>Display Components</i> item from the <i>Configuration</i> menu.&#xA;There may be new components on the left side of the <i>Components</i>&#xA;selector that may now be displayed.  See the section <a href='mobiusdoc.htm#Configuring the Status Area'>Configuring the Status Area</a> for more information.</p>
<p>Note that when selecting a display component that has never been&#xA;selected before, it will usually be drawn in the upper left corner of&#xA;the Mobius status area.  You will normally want to move this to&#xA;another location by holding down the <i>Shift</i> key, then clicking&#xA;and dragging the left mouse button over the new component.  If you&#xA;already have a component near the upper left corner, the new component&#xA;may be hidden and you will need to move the existing components before&#xA;the new component is visible and can be moved.</p>
<p>Some components, such as <i>Minor Modes</i> and&#xA;<i>Synchronization</i> are not always visible.  The Minor Modes will&#xA;only be visible if the Overdub, Reverse, or Half-Speed modes are&#xA;active.  The Synchronization component (displays the MIDI tempo) will&#xA;only be visible if MIDI clocks are being received.  Before you can&#xA;move these components you will have to make them visible.</p>
<a name='Upgrading to 1.24'>
<div class=div2><h3>3.1 Upgrading to 1.24</h3>
</a>
<p>Release 1.24 made major changes to the way MIDI events are bound to&#xA;functions and controls.  Among the changes are:</p>
<ul>
<li>No more Mobius global channel, Mobius receives on all channels&#xA;and bindings are made to a specific channel.</li>
<li>No more "track channels".</li>
<li>Function and controller bindings may now be made for specific tracks&#xA;and track groups.</li>
<li>The long list of track/group number suffixed controls in the&#xA;<i>MIDI Control</i> dialog has been replaced by a short list&#xA;of unqualified names, and a <i>Scope</i> selector.</li>
<li>MIDI Configuration and Preset definitions must now assign a specific&#xA;MIDI channel as well as a program change number if they are to be&#xA;called up with program changes.</li>
</ul>
<p>Mobius will attempt to upgrade your current MIDI function and&#xA;control bindings to the new format.  There is one case however where&#xA;this may fail.  If you currently have the Mobius global channel set to&#xA;"Omni" Mobius will assume that all of your bindings will use MIDI&#xA;channel 1.  If you have been using Omni, but sending events on a&#xA;channel other than 1, you will have to modify your MIDI bindings after&#xA;the upgrade to set the desired channels.  If all bindings will use the&#xA;same channel, the easiest thing to do run the old version of Mobius&#xA;before you install the new one, and select this channel as the global&#xA;channel in the <i>MIDI Control</i> dialog.  Then after you install the&#xA;upgrade, this should channel should be automatically assigned to all&#xA;of your bindings.  If however you are using events on several&#xA;channels, you will have to manually edit each MIDI binding after the&#xA;upgrade and assign the desired channel.</p>
<p>There will be no upgrade path for the "track channel" feature,&#xA;because I don't think anyone actually used it.  If you do, post a&#xA;message to the Yahoo group or send me private email and we'll discuss&#xA;how to proceed.</p>
<p>The <a href='mobiusdoc.htm#External EDP'>External EDP</a> feature has been changed such that you&#xA;no longer select a MIDI output device.  Instead you must first&#xA;select a general purpose <i>MIDI Through</i> device.  See the &#xA;<a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a> section for details on how to select&#xA;a through device.</p>
</div>
<a name='Upgrading 1.16 (or earlier) to 1.18'>
<div class=div2><h3>3.2 Upgrading 1.16 (or earlier) to 1.18</h3>
</a>
<p>There is a new color in the palette used in the loop meter when the&#xA;track is muted.  Releases prior to 1.16 do not have this color defined&#xA;in the palette and since the UI configuration is not replaced on an&#xA;upgrade, the color will default to bright blue and will not appear&#xA;in the Palette window.  To make this color appear so that it can&#xA;be changed, you will need to edit the <i>ui.xml</i> file contained&#xA;in the installation directory.</p>
<p>Locate the <b>&lt;Palette&gt;</b> element, and add the following line&#xA;somewhere inside it:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;  &lt;PaletteColor name='muteMeter' key='613' rgb='16711680'/&gt;&#xA;</pre>
</div></div>
<p>Mobius must not be running when you make this change.  The&#xA;next time you start, you should see "Mute Meter" appear in the color&#xA;palette.</p>
</div>
</div>
<a name='Getting Started'>
<div class=div1><h2>4 Getting Started</h2>
</a>
<p>After launching Mobius, you should proceed immediately to the&#xA;<i>Configuration</i> menu and select the <i>Audio Devices</i> item.&#xA;Here you must select an input and output device.</p>
<p>You should select an ASIO device if one is available for your&#xA;sound card.  This will provide the lowest possible latency and&#xA;make Mobius feel more responsive.</p>
<p><b>NOTE:</b> The standalone version of Mobius cannot currently&#xA;access all of the channels in a multi-channel audio device, it can&#xA;only use the first two channels.  If you need access to all channels,&#xA;you will have to run Mobius as a VST plugin, and route device channels&#xA;to Mobius tracks in the host application.</p>
<p><b>NOTE:</b> There is an ASIO device on my system named <i>Adobe&#xA;Default Windows Sound</i> that does not appear to work very well.  If&#xA;you have this, I don't recommend that you use it, in my experience the&#xA;device advertises extremely high latency values.</p>
<p>If you do not have ASIO devices, you may select either <i>MME</i>&#xA;or <i>DirectSound</i> devices.  These will both have higher latency&#xA;than ASIO.  Mobius compensates for latency so it is still quite&#xA;usable, though you will occasionally hear "skips" in audio playback&#xA;after certain events.</p>
<p>At the bottom of the dialog you will see a field labeled &#xA;<i>Suggested Latency Milliseconds</i> which will default to 10&#xA;for ASIO devices and 100 for other devices.  This is the latency&#xA;we request when opening the device, though the device may not&#xA;obey it.  You may experiment with lowering this value, but if&#xA;it is too low you may have audible "clicks" &#xA;during playback and have "dropouts" during recording.</p>
<p>The primary factors that determine what the lowest latency can be&#xA;are the operating system, CPU speed, and sound card.  A relatively&#xA;recent machine (4 years or less) running Windows XP or 2000 will&#xA;perform best.  Windows NT is the worst, with Windows 98 somewhere&#xA;in between.  DirectSound devices may allow lower latencies&#xA;than MME devices, though not dramatically so.</p>
<p>The default latencies are average for a modern machine.  If you are&#xA;running NT, you probably need to increase MME/DirectSound suggested&#xA;latency to 200 or more.  ASIO devices are not usually sensitive to the&#xA;operating system, so 10 is a reasonable starting point for all.</p>
<p>Below the suggested latency field are fields labeled <i>Override&#xA;Input Latency Frames</i> and <i>Override Output Latency Frames</i>.&#xA;Leave these alone for now.  If you feel that overdubs aren't being&#xA;aligned properly, you will need to adjust how Mobius performs latency&#xA;compensation by setting these values.  See <a href='mobiusdoc.htm#Latency Calibration'>Latency Calibration</a> &#xA;for more information.  You normally don't have to&#xA;set these values when using ASIO devices.</p>
<p>You should next proceed to the <i>Configuration</i> menu and select&#xA;the <i>MIDI Devices</i> item.  A dialog will appear allowing you to&#xA;select an input and output device.  If you want to control Mobius with&#xA;a MIDI controller such as a foot switch or expression pedal, you will&#xA;need to select an input device.</p>
<p>You only need to select an output device if you want Mobius to&#xA;send synchronization messages.</p>
<p>Once you have devices configured, send an audio signal to your&#xA;sound card.  You should see a narrow horizontal rectangle in the&#xA;center of the screen flickering according to the level of the signal.&#xA;This is the <i>Audio Meter</i>.  If you don't see any movement in the&#xA;audio meter, check your connections or try a different audio&#xA;device.</p>
<p>When Mobius is receiving audio, press the <b>R</b> key to begin&#xA;recording.  Play something, then press <b>R</b> again to stop the&#xA;recording and begin looping.  Mobius is not smart about compressing&#xA;signals to avoid digital overload, so if you notice distortion,&#xA;lower the signal level.</p>
<p><b>NOTE:</b>One common error when setting up a software looper&#xA;is having the audio output of the looper feed back into the input.  &#xA;For example, it is common to have several sound sources connected&#xA;to a mixer, then have the mixer output connected to the input&#xA;of the sound card.  If the output of the sound card is also&#xA;connected to the mixer, you can have feedback.  When Mobius&#xA;is overdubbing, anything that is currently playing may then&#xA;be included in the overdub (with a slight delay).  The loop&#xA;will become increasingly louder and sound "metallic".</p>
<p>If the output of the sound card is connected directly to the&#xA;speakers this should not be a problem.  If you are using a mixer, you&#xA;will have to find a way to exclude the channel containing the sound&#xA;card output from the "bus" being sent to the sound card input.  If you&#xA;have a Mackie, <i>Mute Alt 3-4</i> combined with <i>Control Room&#xA;Source</i> buttons can accomplish this nicely.</p>
<p>If you've created a loop and it plays back without distortion then&#xA;you're ready to proceed.  If not, drop me a note and we'll try to&#xA;figure out what's happening.</p>
<a name='Mobius VST Plugin'>
<div class=div2><h3>4.1 Mobius VST Plugin</h3>
</a>
<p>Mobius may be run either standalone or as a VST plugin.  Plugins&#xA;are physically DLL files, the name of the Mobius plugin DLL is,&#xA;surprisingly, <i>mobius.dll</i> and may be found in the installation&#xA;directory (usually c:\Program Files\Mobius).</p>
<p>If your VST host application supports more than one plugin&#xA;directory (many do not) configure it to include the Mobius&#xA;installation directory.  If the host allows only a single directory,&#xA;you will need to copy Mobius.dll into that directory.  One common&#xA;convention is to use <i>c:\Program Files\VstPlugins</i> as a shared&#xA;plugin directory though that is not always the case.  Look to see&#xA;which directory the VST host is using before copying Mobius.dll.  You&#xA;only need to copy the one Mobius.dll file, leave everything else in&#xA;the Mobius installation directory.  The Mobius installation program&#xA;will automatically copy Mobius.dll to <i>c:\Program Files\VstPlugins</i>&#xA;if it exists, so if that is the directory you normally use for plugins,&#xA;you should not need to do any further copying.</p>
<p>After copying the DLL or adding Mobius to the host's search path,&#xA;you may need to ask the host to "rescan" its plugin directories.&#xA;Some hosts may do an automatic rescan automatically each time they &#xA;are started, others do not.</p>
<p>Note that unlike most VST plugins, Mobius opens two windows.  The&#xA;first is a small window containing a blue oval that is under control&#xA;of the VST host, this is called the <i>VST editor window</i>.  The&#xA;second is the main Mobius window.  I wanted more control over the main&#xA;window, such as the ability to resize it after changing the display&#xA;configuration, and giving it a menu bar.  You cannot resize a VST editor&#xA;window, or give it a menu bar.</p>
<p>The VST editor window will contain UI components that the host&#xA;creates, often there is one to select a "preset".  These components&#xA;are not currently recognized by Mobius.  You must do all of your&#xA;interaction in the main Mobius window.  If you close the main window,&#xA;you can open it again by clicking on the blue oval in the VST editor&#xA;window.</p>
<p>Audio devices selected for Mobius in standalone mode will not&#xA;be opened when running as a VST.  The VST host must open the audio&#xA;devices and route them to Mobius.</p>
<p>Mobius normally receives MIDI events directly from the VST host so&#xA;it is not usually necessary to configure MIDI input or output devices&#xA;if all you use is the VST plugin.  See <a href='mobiusdoc.htm#MIDI Devices'>MIDI Devices</a>&#xA;for information on some special cases where Mobius may need to open&#xA;its own MIDI devices.</p>
<p>The <i>Monitor Audio Input</i> global parameter is usually checked&#xA;when running as a VST.  This allows you to monitor the input signal&#xA;being sent to Mobius which may have passed through other plugins. See&#xA;the <a href='mobiusdoc.htm#Global Parameters'>Global Parameters</a> section for more information.  When&#xA;input monitoring is turned on, you should disable any monitoring you&#xA;may be doing with an external mixer or with the sound card.  If not,&#xA;you may hear a slight "flanging" sound because the signal passing&#xA;through Mobius will be delayed slightly from the signal being sent to&#xA;the sound card.  Because of latency, it is really only practical&#xA;to enable input monitoring if you are using ASIO drivers.</p>
<p>If you are using a VST host that displays more than one input and&#xA;output port for the plugin, you may assign each Mobius track to a&#xA;different port.  Hosts that expose multiple ports include Bidule,&#xA;Audio Mulch, Energy XT, and Live.</p>
<p>Assigning tracks to ports provides several useful performance&#xA;options, such as having some tracks take input from a soft-synth&#xA;rather than live audio.  You may also insert a different effects plugin &#xA;after the output of each track, making each track sound different even&#xA;though they are driven by the same input signal.</p>
<p>The plugin provides 8 stereo input ports and 8 stereo output ports.&#xA;VST ports are assigned as part of a <i>Track Setup</i> see the&#xA;<a href='mobiusdoc.htm#Using Setups'>Using Setups</a> section for details.</p>
</div>
<a name='MIDI Devices'>
<div class=div2><h3>4.2 MIDI Devices</h3>
</a>
<p>Mobius uses MIDI devices in three ways:</p>
<ol>
<li><b>Input</b> devices are used to receive commands&#xA;from a footswitch, keyboard or control surface.</li>
<li><b>Output</b> devices are used to send MIDI clocks&#xA;and other MIDI synchronization messages to a drum machine&#xA;or sequencer.</li>
<li><b>Through</b> devices are used to pass MIDI messages &#xA;received from an Input device to another device.</li>
</ol>
<p>Mobius has two different operating modes: as a standalone&#xA;application, and as a VST plugin.  Each mode has different&#xA;requirements for MIDI devices.</p>
<p>In standalone mode you almost always select at least one input&#xA;device so that Mobius may be controlled, usually by a footswitch.&#xA;You may also select one or more output devices if you&#xA;want to use the external synchronization features to control a drum&#xA;machine.  Selecting a through device is uncommon, but may be used in&#xA;cases where the MIDI input contains commands for Mobius and one or&#xA;more other devices that can receive them from the through device.</p>
<p>In VST mode, you often do not need to open any MIDI devices, &#xA;instead the VST host opens all of the devices.  Mobius receives&#xA;MIDI events from the VST host and does not care which device &#xA;they came from.  If you want to use external synchronization however,&#xA;it will be necessary to have Mobius open one or more output devices&#xA;even when running as a plugin.  This is because most VST hosts do&#xA;not recognize MIDI clocks generated by a plugin.  Selecting a through&#xA;device in a VST plugin is uncommon but provided for advanced &#xA;routing.</p>
<p><b>NOTE:</b> When running as a VST plugin, it is very important that&#xA;you do not let Mobius open any of the same MIDI devices that the VST&#xA;host is opening.  This can cause conflicts since neither Mobius or&#xA;the host knows the other has already opened the devices, which can &#xA;cause the VST host to crash when you open and then close the Mobius &#xA;plugin.  It is usually safe to let Mobius and the host open the&#xA;same <i>MIDI Yoke</i> device, but not a hardware MIDI device.</p>
<p>Because there are different device requirements for standalone&#xA;and VST modes, Mobius allows you to specify two different&#xA;sets of devices.  When you open the <i>MIDI Devices...</i> dialog,&#xA;there will be two columns of device selection panels.  The column &#xA;on the left selects devices for standalone mode, and the column&#xA;on the right for VST mode.</p>
<p>You may select any number of input devices, any number of output&#xA;devices, but only one through device.  If you select a through device,&#xA;all events received on all input devices will be passed immediately&#xA;to the through device.  If you select more than one input device,&#xA;Mobius will receive commands from all devices.   If you select &#xA;more than one output device, MIDI synchronization messages will be &#xA;sent to all of them at exactly the same time.</p>
<p>The through device may be the same as one of the output devices.</p>
</div>
</div>
<a name='Concepts'>
<div class=div1><h2>5 Concepts</h2>
</a>
<p>Before diving into the details, let's review a few fundamental EDP&#xA;concepts and define some extended Mobius concepts.</p>
<dl>
<dt><a name='Function'>Function</a></dt>
<dd>An operation performed by Mobius at the request of the user.&#xA;Examples include Record, Overdub, and Multiply.</dd>
<dt><a name='Event'>Event</a></dt>
<dd>An operation Mobius performs at a certain time in the future.  Events&#xA;are <i>scheduled</i> during the processing of a function.  A function&#xA;may schedule more than one event.</dd>
<dt><a name='Function Trigger'>Function Trigger</a></dt>
<dd>An external stimulus that causes Mobius to perform a function.&#xA;There are three types of function triggers: pressing keyboard keys,&#xA;clicking UI buttons, and sending MIDI messages.</dd>
<dt><a name='Function Binding'>Function Binding</a></dt>
<dd>The association of a function trigger with a function.  For example,&#xA;the "R" key may be bound to the Record function.</dd>
<dt><a name='SUS or Sustain Function'>SUS or Sustain Function</a></dt>
<dd>A function that begins to take effect when the trigger is "down" and&#xA;stops having effect when the trigger goes "up".  For keyboard triggers,&#xA;this is a key going down and up.  For UI button triggers, this is the mouse&#xA;button going down and up.  For MIDI note messages, down is note on and&#xA;up is note off.  For MIDI control change messages, down is indicated&#xA;with a non-zero control value, up with a zero value.</dd>
<dt><a name='Long Press'>Long Press</a></dt>
<dd>Holding down a function trigger for more than a few hundred milliseconds.  &#xA;Some functions change behavior if they are initiated with a long press.</dd>
<dt><a name='Control'>Control</a></dt>
<dd>A named value that may be set by the user to control how audio is recorded&#xA;and played in a track.  Examples include Input Level, Output Level, Feedback,&#xA;and Pan.</dd>
<dt><a name='Control Binding'>Control Binding</a></dt>
<dd>The association of a Control with a MIDI event.  Controls are almost&#xA;always bound to MIDI continuous controllers so the value may be accurately&#xA;and smoothly changed.  It is also possible to bind controllers to MIDI&#xA;notes where the velocity of the note will set the controller value.</dd>
<dt><a name='Parameter'>Parameter</a></dt>
<dd>A named value that may be set by the user to control how&#xA;functions are performed.  Parameters may be changed at any time.&#xA;Examples include Quantize, InsertMode, and AutoRecord.</dd>
<dt><a name='Preset'>Preset</a></dt>
<dd>A named collection of parameter values.  There may be any number&#xA;of presets.  One preset is <i>selected</i>&#xA;which means that its parameter values are being used when functions&#xA;are performed.</dd>
<dt><a name='MIDI Configuration'>MIDI Configuration</a></dt>
<dd>A named collection of parameter values that determine how Mobius&#xA;processes MIDI messages.  A MIDI Configuration is similar to a Preset, but&#xA;only contains parameters related to MIDI.  This separation allows you&#xA;to define many presets without having to duplicate a potentially large&#xA;amount of MIDI parameters in each.</dd>
<dt><a name='Setup'>Setup</a></dt>
<dd>A named collection of track parameters that define the state for each&#xA;track when it is reset.  The track parameters that may be set include&#xA;control values such as input and output levels, as well as assignments&#xA;such as the preset, group, and focus lock.</dd>
<dt><a name='Global Parameters '>Global Parameters </a></dt>
<dd>A single collection of parameter values that control a few&#xA;aspects of Mobius behavior that do not need to be changed dynamically,&#xA;as is the case with Preset Parameters.</dd>
<dt><a name='Sample'>Sample</a></dt>
<dd>The smallest unit of digital audio.</dd>
<dt><a name='Audio Channel'>Audio Channel</a></dt>
<dd>An audio device supports one or more channels depending&#xA;on configuration.  Mono audio has one channel, stereo two channels,&#xA;and 5.1 surround has six channels.</dd>
<dt><a name='Frame'>Frame</a></dt>
<dd>One or more samples corresponding to the number of audio channels.&#xA;A mono frame will have one sample, a stereo frame will have two samples&#xA;etc.  The frame is the smallest unit of audio content that Mobius &#xA;will deal with.  Though not technically correct, you can usually&#xA;think of a frame and a sample as being the same thing.&#xA;Phrases like "sample accurate positioning" really should&#xA;be "frame accurate positioning" because it rarely makes sense&#xA;to talk about individual samples within a frame.</dd>
<dt><a name='Loop'>Loop</a></dt>
<dd>A section of recorded audio content that may be played back continuously&#xA;and modified during playback.</dd>
<dt><a name='Layer'>Layer</a></dt>
<dd>A copy of a loop made before the loop is modified.  A new layer&#xA;is created every time a loop plays from beginning to end, and is modified&#xA;during playback.  Layers are the "history" of the loop, when you &#xA;use the Undo function, the previous layer is restored and begins playing.</dd>
<dt><a name='Track'>Track</a></dt>
<dd>A collection of loops.  Only one loop in the track may be active&#xA;at a time, but more than one track may be playing a loop simultaneously.&#xA;You can think of a track like a virtual instance of an EDP.</dd>
<dt><a name='Mode'>Mode</a></dt>
<dd>A track is always in one of several modes.  Functions may change&#xA;the mode the track is in, and the mode may affect how functions are performed.&#xA;Example modes include Reset, Record, Play, Multiply, and Switch Quantize.</dd>
<dt><a name='Project'>Project</a></dt>
<dd>A collection of layers, loops, tracks, and configuration settings&#xA;stored on the file system.   The current Mobius state, including&#xA;all audio content, may be saved to project files at any time.  A previously&#xA;saved project may be loaded back into Mobius.</dd>
<dt><a name='Script'>Script</a></dt>
<dd>A file containing the description of one or more Mobius functions that&#xA;are to be performed at certain times.</dd>
</dl>
</div>
<a name='User Interface'>
<div class=div1><h2>6 User Interface</h2>
</a>
<p>The Mobius UI is functional though a bit crude.  It is built upon a&#xA;UI toolkit that I'm developing because MFC and ATL make me ill.&#xA;Another goal is that the toolkit be machine independent to assist in&#xA;porting to the Mac though that won't happen for awhile.  Don't worry&#xA;if you don't understand what any of this means, just be aware that the &#xA;Mobius UI will feel a bit different and look rather plain compared to other&#xA;Windows applications.  The UI will continue to improve, I've just been&#xA;focusing more on the looping engine than flashy graphics.</p>
<p>The Mobius window is divided into three areas.  The <i>button area</i>&#xA;at the top is where the configurable function buttons are arranged.  The&#xA;<i>status area</i> in the center contains several components that display&#xA;the status of the loop and the current parameters.  The <i>track area</i>&#xA;at the bottom has controls for each of the tracks.</p>
<a name='Using Buttons'>
<div class=div2><h3>6.1 Using Buttons</h3>
</a>
<p>The button area may contain any number of function buttons.  All of&#xA;the EDP "Direct MIDI" functions, and all of the extended Mobius&#xA;functions may be assigned a button.  To perform a function assigned to&#xA;a button, simply click on the button.  If the function name begins&#xA;with "Sustain" this is a sustained function, the&#xA;function will be active as long as the mouse button is pressed.</p>
<p>To configure buttons, pull down the <i>Configuration</i> menu and&#xA;select the <i>Buttons...</i> item.  A dialog box appears with two&#xA;large panels containing function names.  The panel on the right&#xA;contains the functions that will have buttons in the UI, the panel on&#xA;the left contains the functions without buttons.  In the center is a&#xA;column of buttons that move functions between the panels.  Function buttons&#xA;will be displayed in the order in which they appear in the right&#xA;panel.</p>
<p>To add a button, select a function in the left panel by clicking on it, &#xA;then click on the button labeled <b>&gt;</b>.  To remove a button, select&#xA;a function in the right panel and click on the button labeled <b>&lt;</b>.  The&#xA;button labeled <b>&gt;&gt;</b> will move all of the functions to the right panel,&#xA;and oddly enough the button labeled <b>&lt;&lt;</b> will move them all &#xA;to the left.</p>
<p>I personally don't find the <b>&gt;&gt;</b> button very useful, but hey, you be&#xA;the judge.  Mobius isn't smart about resizing the window if the number&#xA;of buttons starts to crowd the other areas, so if the track area is&#xA;overlaying part of the status area, make the window taller.  Mobius&#xA;will remember the window size in the UI configuration file.  If you&#xA;want to control Mobius exclusively from the keyboard or MIDI, then you&#xA;may remove all the buttons to reduce display clutter.</p>
</div>
<a name='Using The Keyboard'>
<div class=div2><h3>6.2 Using The Keyboard</h3>
</a>
<p>Functions may also be activated by pressing keys on the computer&#xA;keyboard.  To bind buttons to keys, pull down the <i>Configuration</i>&#xA;menu and select the <i>Keyboard Control...</i> item.</p>
<p>The panel on the left contains a list of all of the functions, with&#xA;the current key binding displayed along the right margin.  To change a&#xA;key binding, highlight a function name by clicking on it.  The current&#xA;key binding, if any, will be displayed in a text box to the right of&#xA;the function list.</p>
<p>To change the binding you may type the name of the key in the text&#xA;box, though it is much easier to enable key capture. Enable key&#xA;capture by clicking the checkbox under the test field.  Now, any key&#xA;you press will be entered into the text field and bound to the&#xA;function.</p>
<p>You may also assign functions to keys combined with the Shift, &#xA;Control, and Alt keys.  For example "C" and "Shift-C" may reference&#xA;different functions.  More than one modifier may be used,&#xA;for example "Ctrl-Shift-C", "Ctrl-Shift-Alt-C".  Go nuts.</p>
<p>The "Caps Lock" key is not recognized as a shift modifier and&#xA;cannot be bound.  The "Print Screen" and "Num Lock" keys cannot be&#xA;bound.  The right "Windows" key may be bound, but cannot be used as a&#xA;key modifier.  The left "Windows" key may also be bound but I don't&#xA;recommend it since Windows will popup the start menu whenever this is&#xA;pressed.</p>
<p>The keys in the number pad will have different names depending on&#xA;the state of the "Num Lock" key.  If Num Lock is down, the keys will&#xA;appear as "Num 0", "Num 1", etc.  If Num Lock is up, the keys will be&#xA;duplicates of the arrow and page keys.  Keeping Num Lock down will&#xA;provide you with more unique keys to bind.  The keys in the number pad are&#xA;different than the number keys in the row above the letter keys.  For&#xA;example, "1" and "Num 1" may be bound to different functions.</p>
<p>If the key is bound to a sustained function, the function is active&#xA;for as long as the key is pressed.</p>
<p>A window containing a summary of all the key bindings may be&#xA;displayed by pulling down the <i>Help</i> menu and selecting the&#xA;<i>Key Bindings</i> item.  This is what Windows calls a <i>modeless&#xA;dialog</i> meaning that you can leave it open while you return to the&#xA;main Mobius window.</p>
</div>
<a name='Using Tracks'>
<div class=div2><h3>6.3 Using Tracks</h3>
</a>
<p>A <i>track</i> in Mobius is like stereo EDP.  Each of the tracks&#xA;has independent feedback and output levels and may be set to a&#xA;different preset.  You may build up a loop in one track, then switch&#xA;to another track and build up another loop.  Tracks play simultaneously.</p>
<p>Each track is represented by a column of controls arranged in a row&#xA;at the bottom of the display.  One track is considered the&#xA;<i>active</i> track and will be displayed with a white border.  You&#xA;select a track by clicking on or near the knobs for that track, or by&#xA;using the left and right arrow keys.  The active track has <i>input&#xA;focus</i> meaning that it will respond to functions initiated by&#xA;buttons, the keyboard, or by MIDI.</p>
<p>Most functions will only be performed in the active track.  A few&#xA;functions, known as <i>global</i> functions, will affect all tracks.&#xA;For example, a <i>General Reset</i> performed in one track will not&#xA;affect other tracks, but a <i>Global Reset</i> will perform a&#xA;<i>General Reset</i> in all tracks.</p>
<p>The small round button at the top of each track column is&#xA;the <i>Focus Lock Button</i> which will turn red when clicked.  When&#xA;focus lock is on, it means that the track will respond to button,&#xA;keyboard, or MIDI events even if it is not the active track.   This&#xA;can be used to create or modify several tracks at the same time.&#xA;A more powerful option for controlling multiple tracks is&#xA;described in the <a href='mobiusdoc.htm#Track Groups'>Track Groups</a> section.</p>
<p>Three circular knobs control feedback, output level, and pan&#xA;position.  To change the value of a knob, click and hold the mouse&#xA;inside the knob and drag the mouse up or down or left and right.  I&#xA;recommend configuring two MIDI pedals to control output and feedback&#xA;instead.  If you are among the legion of FCB1010 owners, you will want&#xA;to do this.</p>
<p>The first rectangle at the bottom of each track column displays the&#xA;progress of loop playing in this track.  It is a smaller version of&#xA;the loop meter in the main status area.  The second rectangle is&#xA;the output level meter, it will fill with color according to the&#xA;strength of the audio in this track.</p>
<p>At the bottom of the track strip is some empty space in which&#xA;the <i>track group</i> will be displayed when one is assigned.&#xA;See the section <a href='mobiusdoc.htm#Controlling Tracks'>Controlling Tracks</a> for more information&#xA;on track groups.</p>
<p>See the section <a href='mobiusdoc.htm#Using Presets'>Using Presets</a> for more information on &#xA;selecting presets for each track.</p>
<p>See the section <a href='mobiusdoc.htm#Using Setups'>Using Setups</a> for more information on &#xA;initializing all tracks.</p>
<p><b>NOTE:</b>If you have several loud tracks playing simultaneously, it&#xA;is easy to cause digital clipping, which sounds very nasty.  Mobius is&#xA;not smart about compression.  If you experience this, turn down the&#xA;output level in one or more tracks.</p>
</div>
<a name='The Status Area'>
<div class=div2><h3>6.4 The Status Area</h3>
</a>
<p>The status area contains several components that help you&#xA;understand what is happening in the active track.</p>
<p>On the far left is a column of rectangles called the <i>Loop List</i>&#xA;that represent the number of loops in the track  This is a visual&#xA;representation of the parameter the EDP calls "MoreLoops".  A&#xA;track may have up to 8 loops, but only one of them will be audible.&#xA;The top rectangle represents the first loop, the active loop will&#xA;be highlighted.</p>
<p>Next to the loop rectangles are the <i>Dynamic Parameters</i> which&#xA;display a selection of parameters from the current preset.  You may&#xA;change dynamic parameters while Mobius is running, but these changes&#xA;are not stored in the preset.  They will be lost when you exit Mobius&#xA;or select a different preset.  To make permanent changes to the&#xA;presets see the <a href='mobiusdoc.htm#Using Presets'>Using Presets</a> section.</p>
<p>One of the dynamic parameters is considered the <i>active&#xA;parameter</i> and will have a white rectangle around its value.  Using&#xA;the default key bindings, you can set the active parameter using the 8&#xA;(up) and 2 (down) keys on the number pad.  Be sure that Num Lock is&#xA;on.  To change the active parameter value use the 4 (left) and&#xA;6 (right) keys on the number pad.  Use the 5 key on the number pad&#xA;to restore the original value stored in the preset.</p>
<p>To the right of the dynamic parameters are the <i>Counter</i>,&#xA;<i>Audio Meter</i> and <i>Loop Meter</i>.  The Counter is&#xA;arranged somewhat like the LEDs on the EDP.  The large numbers in the&#xA;center show the loop position in seconds.  The small number on the&#xA;left is the number of the current loop.  The numbers on the right&#xA;indicate the current cycle and the total number of cycles in the&#xA;loop.</p>
<p>When MIDI clock synchronization is being received, the tempo of&#xA;the MIDI clocks will be displayed above the counter.</p>
<p>The Audio Meter fills with color in response to the &#xA;strength of the signal present in the selected audio input device.</p>
<p>The Loop Meter fills with color to show the playback position&#xA;within the loop.  Under the meter, white markers will appear wherever&#xA;a quantized event will be performed.  Above the name of the event will&#xA;be a small white triangle.  If the triangle is pointing up, the event&#xA;will happen in the current loop at that position.  If the triangle is&#xA;pointing to the right (or left if going in reverse), the event will&#xA;happen in a later repetition of the loop.</p>
<p>When a user initiates a function, Mobius schedules one or more&#xA;events to perform the operations required by that function at the&#xA;right time.  Most functions, such as starting a multiply, schedule a&#xA;single event.  Ending a multiply is an example of a complex function,&#xA;it will schedule both a <i>Record End</i> event to stop recording when&#xA;<i>Round Mode</i> is off, and a <i>Multiply End</i> event to finally&#xA;end multiply mode.  There are also many other events that are not&#xA;displayed related to playback transitions and latency adjustments.</p>
<p>To the right of the loop meter is a set of three adjacent circles&#xA;called the <i>Blinkers</i>.  The first circle flashes each time&#xA;playback reaches a sub-cycle boundary, the second circle flashes on&#xA;cycle boundaries, and the third circle flashes on the loop boundary.</p>
<p>To the right of the blinkers is a word indicating the current&#xA;mode.  When the loop is in reset, "Reset" is displayed, during multiply&#xA;mode "Multiply" is displayed etc.</p>
<p>Above the blinkers and the mode may be text that indicates that&#xA;the overdub, reverse, or half speed modes are active.  These&#xA;are referred to as <i>minor modes</i> and will remain active&#xA;even when the major mode changes.</p>
<p>Across the top of the status area is the <i>Layer List</i>, this is&#xA;a horizontal row of yellow rectangles representing the layers in the&#xA;current loop.  A layer is created whenever you make a modification &#xA;to the loop during playback, or whenever a loop plays to the end&#xA;with feedback less than 100%.  You won't see the layer list until&#xA;you complete the first recording.  When you use the <i>Undo</i> function,&#xA;you will be returned to the previous layer, if there are no more layers&#xA;to undo, you will enter Reset mode.</p>
<p>Like the EDP, Mobius will not create a new layer unless there was&#xA;an audible or structural change to the loop.  So if for example you&#xA;leave overdub on, but don't play anything new, no new layer will be&#xA;created.</p>
<a name='Configuring the Status Area'>
<div class=div3><h4>6.4.1 Configuring the Status Area</h4>
</a>
<p>If you don't happen to like the layout of the status area, you can&#xA;remove components you don't want, and change their position in the&#xA;window.</p>
<p>To change the position of a component, move the mouse over it&#xA;then press and hold the Shift key while pressing and holding the &#xA;left mouse button.  You can now drag the component to a new location.&#xA;To assist in moving components, when the shift key is pressed, the components&#xA;will be erased and only their border is drawn.  This is is useful for&#xA;components such as Tempo Display that are normally invisible.</p>
<p>To add or remove components, pull down the <i>Configuration</i>&#xA;menu and select the <i>Display Components</i> item.  A dialog appears&#xA;with four selection controls.  The  controls behave like the controls&#xA;for displaying buttons described in the <a href='mobiusdoc.htm#Using Buttons'>Using Buttons</a>&#xA;section.  Select the items you want displayed in the left panel and&#xA;click the <b>&gt;</b> button, or select the items you want removed in the&#xA;right panel and click the <b>&lt;</b> button.</p>
<p>The first selector labeled <i>Components</i> determines which major&#xA;components will be displayed in the status area.</p>
<p>The second selector labeled <i>Dynamic Parameters</i> determines&#xA;which preset parameters will be displayed.  The parameters will be&#xA;displayed in the order they are selected in the right box, so if you&#xA;want them in a particular order, clear the selection with the&#xA;<b>&lt;&lt;</b> button, and add them one at a time in the desired&#xA;order.  The parameters will only be displayed if you also have&#xA;<i>Parameters</i> selected in the <i>Components</i> selector&#xA;at the top.</p>
<p>The third selector labeled <i>Main Track Controls</i> determines&#xA;which track knobs will be displayed in the common track control strip&#xA;which is normally on the right side of the Mobius window.  This&#xA;will be visible only if <i>Track Controls</i> is selected in&#xA;the <i>Components</i> selector.</p>
<p>The fourth selector labeled <i>Track Strip Controls</i> determines&#xA;which track knobs will be displayed in the track strip at the bottom&#xA;of the Mobius window.  The same sub-components are available for both&#xA;the track strip and the common track strip.  If you like large&#xA;cluttered windows, you can disable the shared <i>Track Controls</i>&#xA;component and duplicate all the track knobs in the bottom track strip.</p>
<p><b>NOTE:</b> There are some display bugs that may cause the &#xA;display to draw incorrectly after the <i>Track Strip Controls</i> &#xA;list is modified.  You should restart Mobius whenever this list is&#xA;changed.</p>
</div>
</div>
<a name='Using Presets'>
<div class=div2><h3>6.5 Using Presets</h3>
</a>
<p>A preset is a named collection of parameter values.  On any given&#xA;track, one preset is <i>active</i> and each track may have a different&#xA;active preset.  You may activate a preset by selecting an item from&#xA;the <a href='mobiusdoc.htm#Presets Menu'>Presets Menu</a>, by selecting a preset within the&#xA;<a href='mobiusdoc.htm#Presets'>Presets</a> configuration dialog, or by sending a MIDI program&#xA;change message.  When you select a preset, the preset name will be&#xA;displayed briefly in a popup window over the main Mobius window.</p>
<p>To define a preset, pull down the <i>Configuration</i> menu and&#xA;select the <i>Presets...</i> item.   At the top of the dialog&#xA;is a row labeled <i>Selected Preset</i>  containing a pull down&#xA;selection list and a pair of buttons.  When you select a preset&#xA;from the list, the values of the other fields in the dialog&#xA;change to reflect the values stored in that preset.  The preset&#xA;is also made the active preset for the active track.</p>
<p>To define a new preset, click the <i>New</i> button.  A copy of the&#xA;currently selected preset will be made and added to the list.  The&#xA;preset will be given an initial name of the form <i>Preset n</i>&#xA;where <i>n</i> is a number.  Unless you like ambiguously named&#xA;presets, you will want to change the generated name.  The second&#xA;row labeled <i>Name</i> has a text field where you may enter a&#xA;name of your own.  Note that this name will not be shown in the pull down&#xA;list until you save the preset.</p>
<p>Under the name field is a row labeled <i>Program Change</i>&#xA;containing a text box where you may enter a number from 1 to 128,&#xA;another pulldown menu labeled <i>Channel</i> where you select a channel&#xA;number from 1 to 16.  When Mobius receives a MIDI program change with&#xA;this channel and number, the preset will be selected.  If the program&#xA;change field is empty, this preset cannot be selected with MIDI.</p>
<p>Under the program change field are a variety of other fields for&#xA;the preset parameters.  These are described in more detail in the&#xA;<a href='mobiusdoc.htm#Parameters'>Parameters</a> section.  When you have made the desired&#xA;changes, click the <i>Save</i> button.  If you wish to discard the&#xA;changes, click the <i>Cancel</i> button.</p>
<p>After having created one or more presets, you may delete a preset&#xA;you no longer want by selecting it and pressing the <i>Delete</i> button.&#xA;The next preset in the list is then automatically selected.</p>
</div>
<a name='Using Setups'>
<div class=div2><h3>6.6 Using Setups</h3>
</a>
<p>A <i>track setup</i> is a named collection of track parameter&#xA;values.  They are used to define an initial state for all tracks&#xA;before recording, and also define the state the track each will return&#xA;to when it is reset.  The following parameters may be specified&#xA;for each track:</p>
<ul>
<li>Preset</li>
<li>Input Level</li>
<li>Output Level</li>
<li>Feedback</li>
<li>Secondary Feedback</li>
<li>Pan</li>
<li>Mono</li>
<li>Group</li>
<li>Focus Lock</li>
<li>VST Input Port</li>
<li>VST Output Port</li>
</ul>
<p>In addition you may designate which track should be the active&#xA;track after a global reset.</p>
<p>You may have several track setups designed for different performances.&#xA;Setups may be selected from the <i>Track Setups...</i> menu or&#xA;with a MIDI program change.</p>
<p>When a setup is selected, all tracks that are currently empty will&#xA;be modified to have the parameters defined in the setup.  Tracks that&#xA;are not empty will not be modified.  When a track is reset with either&#xA;the Reset or GlobalReset functions, it will be modified to have the&#xA;parameters defined in the setup if they have been changed.</p>
<p>If all tracks are empty when a setup is selected, the active&#xA;track is also changed to the one specified in the setup.</p>
<p>A common application of track setups is to configure a mix using&#xA;different Output Level and Pan values for each track.</p>
<p>Once a track has been reset to the state defined in the setup,&#xA;if you use the Reset function again in an individual track to &#xA;toggle between the state defined in the setup and the <i>default track &#xA;state</i>.  In the default track state, most controls are at 100%, &#xA;Secondary Feedback is at 0%, Pan is centered, Focus Lock is off,&#xA;and there is no group assignment.</p>
<p>If the <i>Mono</i> option is checked, the track is configured&#xA;to assume that there is a single channel input signal that is then&#xA;panned between the two output channels.  This is a "true" pan, unlike&#xA;the usual pan that is simply controls the levels of the left and right&#xA;channels.  Note though that there are still 2 input channels for every &#xA;track.  Each channel will be combined before panning.</p>
<p>At the bottom of the dialog is a multi-select field labeled&#xA;<i>Restore After Reset</i>.  The field contians the names of some&#xA;track parameters that are stored in the setup.  When one of these parameters&#xA;is highlighed, its value will be restored to the value set in the setup&#xA;after the <i>Reset</i> function is used.</p>
<p>Some users like to have the track return to an initial state after&#xA;a Reset, others prefer it to be left in its current state.  This&#xA;parameter gives you control over which track parameters will be&#xA;changed.  If no parameters are selected, the track will stay in its&#xA;current state after a reset (though all audio content will be lost).&#xA;Many users prefer to have the track level controls (Input Level,&#xA;Output Level, Feedback, Pan) return to the values defined in the&#xA;setup, but want focus lock and group assignments to stay the same.</p>
<p>The <i>ASIO Input Port</i> and <i>ASIO Output Port</i> selectors&#xA;are used to select which port of the audio interface is to be used as&#xA;the input and output of the track, when Mobius is running standalone.&#xA;The number of ports is determined by your audio interface.  Ports&#xA;correspond to a stereo pair of channels on the audio interface.  If&#xA;for example your audio interface has 8 input jacks, there will be 4&#xA;input ports.  Port selection is only available if you are using&#xA;an ASIO driver for the audio interface.</p>
<p>The <i>VST Input Port</i> and <i>VST Output Port</i> selectors&#xA;are used to select ports when Mobius is running as a VST plugin.&#xA;Each port corresponds to a stereo pair of "pins" on the plugin.  Some&#xA;hosts will display pins visually and allow you to draw&#xA;lines to connect them.  Other hosts may display the port names&#xA;in a menu.  Not all hosts support plugins that have more than one&#xA;pair of input and output pins.</p>
</div>
<a name='MIDI Control'>
<div class=div2><h3>6.7 MIDI Control</h3>
</a>
<p>Previous sections have described ways to bind Mobius functions to&#xA;computer keyboard keys and UI buttons.  Functions may also be bound to&#xA;MIDI program change, note, or control change events.  The behavior of&#xA;the function is always the same, regardless of how it was&#xA;initiated.</p>
<p>Besides functions, Mobius also supports a set of <i>Controls</i>&#xA;which may be given MIDI bindings.  Controls are used for parameters&#xA;whose values vary over a large range, the following table lists&#xA;the available controls.</p>
<dl>
<dt><a name='Input Level'>Input Level</a></dt>
<dd>Determines the amount of audio signal present at the audio inputs that&#xA;will be recorded.  This is normally left at the highest level of 127 but&#xA;may be reduced if you need to "trim" a loud input.</dd>
<dt><a name='Output Level'>Output Level</a></dt>
<dd>Determines the level of the audio signal in a track that is&#xA;sent to the audio outputs.  This is often lowered when mixing the&#xA;output of several tracks.</dd>
<dt><a name='Feedback'>Feedback</a></dt>
<dd>Determines the level of the audio signal from the previous layer that&#xA;is copied into the next layer being recorded.</dd>
<dt><a name='Secondary Feedback'>Secondary Feedback</a></dt>
<dd>A level of feedback that is used instead of the primary feedback during&#xA;some special modes.</dd>
<dt><a name='Pan'>Pan</a></dt>
<dd>Determines the balance between the left and right stereo output.  Note&#xA;that this not a "true" pan in that panning hard left will simply silence&#xA;the right channel, the right channel is not moved to the left.</dd>
</dl>
<p>Controls are almost always bound to MIDI continuous controller&#xA;numbers, though it is also possible to bind them to MIDI notes.  When&#xA;using note bindings, the velocity of the note determines the&#xA;controller value.</p>
<p>In addition to functions and controls, each of the configuration&#xA;objects (Presets, Setups, and MIDI Configurations) may also be given a&#xA;MIDI binding.  The configuration object will be activated when the&#xA;associated MIDI event is received.</p>
<p>To define MIDI bindings, pull down the <i>Configuration</i> menu&#xA;and select the <i>Midi Control</i> item.  Mobius supports the&#xA;definition of several <i>Midi Configurations</i> which contain&#xA;different bindings.</p>
<p>The ability to dynamically select MIDI configurations was developed&#xA;for controllers such as the Ground Control Pro, which have a global&#xA;set of "instant access" buttons plus a row of buttons that send&#xA;program changes.  Since the instant access buttons always send the&#xA;same MIDI events, you can change their behavior by defining several&#xA;different MIDI configurations, and selecting them with the program&#xA;changes.  This might also be useful if you have performance situations&#xA;that require using different controllers.</p>
<p>The <i>Selected Configuration</i>. field has a pull down menu of&#xA;all the current MIDI configurations.  To the right of the pull down&#xA;menu are a pair of buttons.  The <i>New</i> button will add a new&#xA;configuration by making a copy of the current configuration and&#xA;generating a unique name.  The <i>Delete</i> button will remove the&#xA;current configuration from the list.</p>
<p>The <i>Name</i> field has a text box where you may change&#xA;the name of the selected configuration.  Note that the new name will&#xA;not be reflected in the pull down menu until the you save by clicking&#xA;Ok in the window.</p>
<p>Below the <i>Name</i> field are three list boxes labeled&#xA;<i>Function</i>, <i>Control</i>, and <i>Configuration</i>.  When you select a name&#xA;in any of these boxes it will become selected and turn red.  The current binding for&#xA;the selected item will be displayed in the fields below the <i>Control</i> &#xA;selector.  Once a field is seldcted, you may specify a MIDI binding by &#xA;manually changing the <i>Scope</i>, <i>Type</i>, <i>Channel</i>, and <i>Value</i>&#xA;fields.</p>
<p>The most efficient way to assign MIDI bindings is to let Mobius&#xA;automatically assign MIDI events sent from an device.  Any MIDI events&#xA;received by Mobius are displayed in the box at the bottom of the&#xA;window.  If you check the <i>MIDI Capture</i> box, the <i>Type</i>,&#xA;<i>Channel</i>, and <i>Value</i> fields will automatically be set&#xA;according to the MIDI events being received.</p>
<p>A MIDI Binding is defined in one of several <b>scopes</b>, selected with&#xA;the pulldown menu labeled <i>Scope</i>.  The available scopes are:</p>
<ul>
<li>Global</li>
<li>Track 1</li>
<li>Track 2</li>
<li>Track 3</li>
<li>Track 4</li>
<li>Track 5</li>
<li>Track 6</li>
<li>Track 7</li>
<li>Track 8</li>
<li>Group 1</li>
<li>Group 2</li>
<li>Group 3</li>
<li>Group 4</li>
</ul>
<p>Each of these scopes may have a completely different set of MIDI bindings.&#xA;Most bindings are made in the Global scope.  Global bindings affect the&#xA;active track, any track that has focus lock, and any track that is in the &#xA;same group as the active track.  This is where most of the function bindings&#xA;are defined.</p>
<p>If you make a binding in one of the 8 track scopes, it will only&#xA;affect that one track.  If you make a binding in one of the 4 group&#xA;scopes, it will only affect the tracks that are currently a member of&#xA;the group.</p>
<p>Track and group bindings are most useful if you have a MIDI control&#xA;surface or keyboard with lots of programmable knobs and sliders.  One&#xA;common application is to assign a different MIDI continuous controller&#xA;to the Output Level in each track scope, giving you direct control &#xA;over the level of each track, such as you would with a mixing console.</p>
<p>Track scope function bindings are useful for functions like Mute&#xA;and Solo.</p>
<p>Group scope bindings affect only the tracks in the group.  The&#xA;Output Level control in a group scope behaves in a special way by&#xA;maintaining the same <b>relative levels</b> of the tracks in the&#xA;group.  For example if one track is at level 127 (max) and one at&#xA;level 100, decreasing the group level by 10 to will lower the level of&#xA;the first track to 127 and the second track to 90.  This allows you to&#xA;set up a mix of tracks in a group, then fade the entire group in and&#xA;out using a group controller while maintaining the original mix.</p>
<p>Note that unlike Mobius versions before 1.24, we now store the MIDI&#xA;channel with the MIDI binding.  This means that note 24 on channel 2&#xA;and note 24 on channel 6 can do different things.</p>
<p>Also note that it is possible to have the same MIDI event bound to&#xA;different things in different scopes.  For example, "note 42 channel&#xA;3" may be bound to Record in global scope and Reverse in Track 1&#xA;scope.  In this case both functions will be performed when this MIDI&#xA;event is received.</p>
<p>The <i>Max Track Groups</i> field lets you select how may track&#xA;groups to support up to a maximum of four.</p>
</div>
</div>
<a name='Global Parameters'>
<div class=div1><h2>7 Global Parameters</h2>
</a>
<p>There are a few parameters that affect the operation of Mobius&#xA;regardless of which Preset or MIDI Configuration is active.  These are&#xA;called global parameters.  To set global parameters, pull down&#xA;the <i>Configuration</i> menu and select the <i>Global Parameters...</i>&#xA;item.</p>
<dl>
<dt><a name='Quick Save File'>Quick Save File</a></dt>
<dd>The location of the file where the current loop is saved when&#xA;selecting the <a href='mobiusdoc.htm#Save Quick'>Save Quick</a> menu item from &#xA;the <a href='mobiusdoc.htm#File Menu'>File Menu</a>.  This should be an absolute path name&#xA;including a drive letter.  If this is a relative path, it will&#xA;be relative to the Mobius installation directory, which by default is:&#xA;<p></p>
&#xA;c:\Program Files\Mobius&#xA;<p></p>
&#xA;The name must not include&#xA;the <b>.wav</b> extension.  The actual name of the file will be derived from the&#xA;specified name plus a number to make the name unique.  This allows&#xA;you to use the <a href='mobiusdoc.htm#Save Quick'>Save Quick</a> item several times without overwriting&#xA;the file containing the previous loop that was saved.</dd>
<dt><a name='Noise Floor'>Noise Floor</a></dt>
<dd>Determines the minimum signal level that is considered to be&#xA;"interesting" content when overdubbing.  This is used in the&#xA;implementation of what the EDP calls "auto undo".  While overdub is on&#xA;and new content is added to the loop, a new layer is generated at the&#xA;end of each iteration through the loop.  If the new content is below&#xA;the noise floor however, a new layer is not generated.  This allows&#xA;you to leave overdub on and listen to the loop a few times without&#xA;having unnecessary layers generated on each iteration.</dd>
<dt><a name='Fade Frames'>Fade Frames</a></dt>
<dd>Mobius performs a cross fade whenever playback must change&#xA;abruptly such as when performing an unquantized loop switch, replace,&#xA;or unrounded multiply.  This value is the length of the fade in audio&#xA;frames.&#xA;<p></p>
&#xA;This is necessary to prevent "snapping" or "clicking" sounds during&#xA;playback caused by sudden changes in sample level.  Setting the number&#xA;of fade frames to zero will remove all cross fade processing.  This&#xA;can result in audible clicks which are generally undesirable but&#xA;can sometimes be used as a rhythmic effect.  Setting the value&#xA;too high can result in audible "pumping" or "breathing" which is&#xA;also undesirable but might be used as an effect.</dd>
<dt><a name='Drift Resync Frames'>Drift Resync Frames</a></dt>
<dd>The number of frames Mobius will allow a loop to drift out&#xA;of sync with a master clock when using one of the synchronization&#xA;modes.  When the drift is greater than this number of frames, the &#xA;loop is retriggered to bring it back into alignment with the master clock.&#xA;See the <a href='mobiusdoc.htm#Drift Retrigger'>Drift Retrigger</a> section for details.</dd>
<dt><a name='Save Project Layers'>Save Project Layers</a></dt>
<dd>When checked, complete layer histories are saved with a project.&#xA;By default, only the most recent layer is saved.  Saving layer histories&#xA;can be interesting if you want to know more about how Mobius manages&#xA;memory, but is normally undesirable as it requires more disk space.&#xA;<br>&#xA;<b>BUG:</b>There are problems restoring projects saved with layers,&#xA;avoid for now.&#xA;</dd>
<dt><a name='Monitor Audio Input'>Monitor Audio Input</a></dt>
<dd>Causes the audio input for the active track to be sent immediately&#xA;to the audio output device.  This can be used to monitor the signal&#xA;being sent to Mobius if you are not monitoring using an external&#xA;mixer or the sound card.  This is normally done only if you are using&#xA;Mobius as a VST plugin, and only if your sound card supports ASIO drivers.</dd>
<dt><a name='16 Bit Wave Files'>16 Bit Wave Files</a></dt>
<dd>When checked, Mobius will save all audio content as 16-bit integers.&#xA;If not checked, audio is stored as 32-bit floating point numbers.  32-bit&#xA;is generally preferred, but not all audio applications are able to open&#xA;32-bit files.</dd>
<dt><a name='Group and Focus Lock Functions'>Group and Focus Lock Functions</a></dt>
<dd>Specifies which functions and scripts are sensitive to the &#xA;track group and focus lock settings.  If a function or script name does&#xA;not appear in the panel on the right, it will be performed only in the&#xA;selected track.</dd>
<dt><a name='Modes Ignoring Secondary Feedback'>Modes Ignoring Secondary Feedback</a></dt>
<dd>Specifes the loop modes during which&#xA;the Secondary Feedback control will not be active.  This is an advanced&#xA;parameter that is used when the <i>Interface Mode</i> parameter is&#xA;set to <i>Expert</i> or <i>Stutter</i>.  Normally all recording modes&#xA;are subject to Secondary Feedback when using these interface modes.</dd>
</dl>
</div>
<a name='Saving and Loading'>
<div class=div1><h2>8 Saving and Loading</h2>
</a>
<p>Mobius provides several options for saving and loading audio&#xA;content.  You may save or load individual loops as well as&#xA;<i>projects</i> containing all layers in all loops in all tracks.</p>
<a name='Individual Loops'>
<div class=div2><h3>8.1 Individual Loops</h3>
</a>
<p>To load an individual loop, select a track, and use the <i>Next&#xA;Loop</i>, <i>Previous Loop</i> or numbered loop trigger functions&#xA;to select the target loop.  If the AutoRecord option is on, recording&#xA;may begin but it will be canceled during the load.  Once the track is&#xA;selected, pull down the <i>File</i> menu and select the <i>Open&#xA;Loop</i> item.  A standard open file dialog will be displayed, navigate&#xA;to the directory containing the file you want to load and select it.&#xA;Mobius can only load Windows <i>wave</i> files having the <b>.wav</b>&#xA;extension.</p>
<p>The target loop will be reset before the loop is loaded.  After the&#xA;loop is loaded, the track will be in <i>pause mute</i> mode.  The loop&#xA;will begin playing from the beginning as soon as you perform the Mute&#xA;function to bring it out of mute mode.</p>
<p>If you don't have any wave files handy, Mobius includes one you can&#xA;experiment with.  From the Open Loop dialog, navigate to the&#xA;<i>samples</i> subdirectory of the Mobius installation directory&#xA;(normally <b>c:\Program Files\Mobius\samples</b>) and select the file named&#xA;<b>gcloop.wav</b>.  No, this isn't me, I assembled it from a&#xA;commercial loop library.  This one is fun to use with subcycle&#xA;quantized unrounded multiply.  Splice out a bar, then undo back to the&#xA;full loop, splice out a different bar, repeat!</p>
<p>To save an individual loop, select the track and the loop you&#xA;want to save, pull down the <i>File</i> menu, and select the <i>Save Loop</i>&#xA;item.  A standard Save File dialog will appear, navigate to the directory&#xA;where you want to save the loop, and select or enter a file name.  Mobius&#xA;can only save Windows <i>wave</i> files.</p>
</div>
<a name='Quick Save'>
<div class=div2><h3>8.2 Quick Save</h3>
</a>
<p>The quick save feature allows you to save the current loop to a&#xA;file without having to interact with a dialog window.  This is handy&#xA;if you build a loop you would like to remember, but don't want to put&#xA;down your instrument in order to interact with the computer.</p>
<p>A quick save may be performed by pulling down the <i>File</i> menu&#xA;and selecting the <i>Save Quick</i> item.  While you&#xA;don't have to interact with a dialog window, you still have to &#xA;select the menu item. A more interesting way to perform a quick save&#xA;is by binding a button, key, or especially a MIDI event to the <i>Save Loop</i>&#xA;function.  You could for example bind the Save Loop function to a&#xA;button on a MIDI foot controller, whenever you build something&#xA;interesting just pounce on the button and the loop will be saved.</p>
<p>By default, the saved loop files are stored in the Mobius&#xA;installation directory with the base name <b>mobiusloop</b> plus a&#xA;number to make it unique, for example <b>mobiusloop1.wav</b>,&#xA;<b>mobiusloop2.wav</b> etc.  Every time you perform the Save Loop&#xA;function, a new unique file name is generated by adding one to the&#xA;highest numbered quick save file in the directory.</p>
<p>You may change the directory and base file name for quick save&#xA;files by pulling down the <i>Configuration</i> menu and selecting&#xA;the <i>Global Parameters</i> item.  In the dialog, the field&#xA;named <i>Quick Save File</i> may be set to a file system path including&#xA;the base file name.  For example:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;  c:\mystuff\mobius\quicksave&#xA;</pre>
</div></div>
<p>Files will be saved in the <b>c:\mystuff\mobius</b> directory&#xA;with the name <b>quicksave</b> plus a number to make the name&#xA;unique.  For example <b>quicksave1.wav</b> and <b>quicksave2.wav</b>.&#xA;Do not specify a number or the <b>.wav</b> extension in the global parameters&#xA;dialog, these will be added automatically.</p>
<p>If you perform a quick save into a directory that already contains&#xA;quick save files, Mobius will probe the directory to find the highest&#xA;file number it must use in order to generate a unique file name.  This&#xA;ensures that a quick save will not overwrite an existing quick save file&#xA;made during a prior Mobius session.</p>
</div>
<a name='Projects'>
<div class=div2><h3>8.3 Projects</h3>
</a>
<p>A <i>project</i> is a collection of files that contain the complete&#xA;state of Mobius at a moment in time, including the audio content&#xA;of all loops in all tracks.   You can use projects to capture a complex&#xA;collection of loops that have just been improvised, or to define&#xA;a set of background loops for a new performance.</p>
<p>To save a project, pull down the <i>File</i> menu and select the&#xA;<i>Save Project...</i> item.  A dialog appears requesting you to&#xA;select a Mobius project file.  It may take several seconds to save&#xA;the project.  During that time try not to perform any functions, or&#xA;the project may be saved with loop changes you did not intend. </p>
<p>To load a project, pull down the <i>File</i> menu and select the &#xA;<i>Load Project...</i> item.  Again, a dialog appears requesting you to &#xA;select an existing Mobius project file.  When you load a project, &#xA;a <i>Global Reset</i> is performed, meaning that all of the current&#xA;loops and tracks will be lost.</p>
<p>A project actually consists of several files, a single <i>project</i>&#xA;file with the <b>.mob</b> extension, and one or more <b>.wav</b> files containing&#xA;audio content.  If you have a complex collection of loops and tracks,&#xA;there may be many files in a project.  If so you may find it convenient&#xA;to keep each project in a separate directory.</p>
<p>As an example, assume we've saved a project named "myproject" that&#xA;has two tracks, each with two loops.  The project files that would&#xA;be saved are:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;  myproject.mob&#xA;  myproject-1-1-1.wav&#xA;  myproject-1-2-1.wav&#xA;  myproject-2-1-1.wav&#xA;  myproject-2-2-1.wav&#xA;</pre>
</div></div>
<p>The files containing audio are suffixed with three numbers.  The&#xA;first is the number of the track, the second is the number of the loop&#xA;within the track, and the third is the number of the layer within the&#xA;loop.  Depending on how the loop was constructed, the layer number &#xA;will usually be different than 1.</p>
<p>The project .mob file contains the information necessary&#xA;to reconstruct Mobius state from all of the audio files.  See the&#xA;<a href='mobiusdoc.htm#XML Files'>XML Files</a> section for more on the contents&#xA;of this file.</p>
<p>If the global parameter <i>Save Project Layers</i> is set, &#xA;then a loop's layer history is also stored in the project.  See&#xA;the <a href='mobiusdoc.htm#Global Parameters'>Global Parameters</a> section for more information on&#xA;setting this parameter.  When layers are saved, more than one&#xA;<b>.wav</b> file may be saved for each loop, for example:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;  myproject-1-1-3.wav&#xA;  myproject-1-1-2.wav&#xA;  myproject-1-1-1.wav&#xA;</pre>
</div></div>
<p>As mentioned earlier, the third number in the file name is the&#xA;layer number.  These will be random numbers, though the most recent&#xA;layer will usually have a higher number.  Saving layers may be interesting&#xA;if you use undo as a performance technique, and you want to start&#xA;with a complex loop, and undo back to something simpler.  I use this&#xA;during testing, but find it to be of limited practical use since it&#xA;can require a large amount of disk space if the loop length is long&#xA;and you have a lot of layers.</p>
<p>In addition to the audio content, the project will also save&#xA;the selected MIDI configuration, the selected presets in&#xA;each of the tracks, the selected track, and the selected loop&#xA;within each track.</p>
<p><b>NOTE:</b> When you save a project with the same name as an&#xA;existing project, all of the wave files in the existing project will&#xA;be deleted first.  This is necessary to avoid "garbage files" if you&#xA;remove tracks or loops from the project.  This will only occur however&#xA;if the file is contained in the same directory as the project file.&#xA;This is so you can add files to a project from a sample library and&#xA;not have those files be deleted when the project is deleted.</p>
<p>In addition to audio files, the project also includes the current&#xA;settings for each track including the selected preset, feedback, output,&#xA;and pan values.  A <i>project template</i> contains all of these&#xA;track settings, but not any of the audio content.  Creating a project&#xA;template can be useful if you want to have different configurations&#xA;for different performances, but don't want to start with any initial&#xA;audio content.  To save a project template, pull down the <i>File</i>&#xA;menu and select the <i>Save Project Template</i> item.</p>
</div>
</div>
<a name='Functions'>
<div class=div1><h2>9 Functions</h2>
</a>
<p>In this section we will list all of the Mobius functions and&#xA;provide a brief description of how these differ from the&#xA;EDP.  If there is a corresponding EDP function, and the function is&#xA;said to be implemented, then you can assume it will behave like the&#xA;EDP (assuming of course I have interpreted the manual correctly).</p>
<a name='Unimplemented EDP Functions'>
<div class=div2><h3>9.1 Unimplemented EDP Functions</h3>
</a>
<p>Let's start with a list of EDP functions Mobius definitely does not&#xA;implement.</p>
<ul>
<li>Loop Windowing - actually just LongUndo and ShortUndo in a&#xA;specific context</li>
<li>Undo - no support right now for short undo</li>
<li>ShortUndo - direct MIDI function</li>
<li>LongMultiply - GeneralReset if the current loop is in Reset, &#xA;Substitute if the loop is not in Reset.<br>&#xA;But the Multiply still runs for 400ms.<br>&#xA;Some ambiguity on 5-37, suggests Long-Multiply becomes SUSMultiply.</li>
<li>Long presses while in SUSOverdub behave like short presses</li>
<li>LongReverse becomes a SUSReverse</li>
<li>LongParameter returns to Play mode</li>
<li>LongTrigger Resets the triggered loop (unless SamplerStyle=Att)</li>
<li>LongInsert does Replace.  Not compatible with SUSInsert?&#xA;Have to set up an insert for 400ms?</li>
<li>LongMute becomes SUSMute, MuteMode always Continuous</li>
<li>LongOverdub becomes SUSOverdub </li>
<li>LongStartPoint does QuantStartPoint</li>
<li>TempoSelect</li>
<li>StopSync</li>
<li>AutoStartPoint</li>
<li>ParameterButton - remote control by virtually pressing &#xA;the parameter button</li>
<li>Exit Parameters</li>
<li>BeatTriggerSample - just use </li>
<li>MIDIBeatSync</li>
</ul>
<p>I will eventually implement Loop Windowing, TempoSelect, and some of the&#xA;long presses.  Things related to "beat sync" are not really&#xA;relevant for Mobius since everything must be controlled through MIDI.&#xA;MIDI control over parameter values may be useful but I would prefer the&#xA;ability to directly bind MIDI continuous controllers to parameters&#xA;rather than virtually pushing the EDP parameter buttons.</p>
<p>This list contains a collection of things described in the manual&#xA;that are also not implemented, but they're not exactly functions.</p>
<ul>
<li>Event gravity</li>
<li>MIDI Smart Buttons, also known as "Double Clicks"</li>
<li>MIDI Sync Indicators</li>
<li>MIDI Data Wheel</li>
<li>MIDI Pipe - not applicable?</li>
<li>Dump - not applicable</li>
<li>Load - not applicable</li>
<li>SysEx - not applicable</li>
</ul>
<p>Event "gravity" refers to the EDP's behavior of quantizing events&#xA;back to a previous quantization boundary rather than moving to the&#xA;next one if you are within a few milliseconds of the last boundary.&#xA;In my testing, I have not been in many situations where I felt this&#xA;was needed.  I'm interested in hearing from anyone that has come to&#xA;rely on this.  A Mobius feature that may lessen the need for this is&#xA;that you can "stack" more than one quantized event.  For example, if&#xA;you want to go into reverse and half speed at the same time, turn&#xA;quantization on and perform the Reverse and Half Speed functions.  You&#xA;will see them stacked on the same quantized frame.</p>
<p><b>BUG:</b> This doesn't work as intended, the second function will be&#xA;quantized to the next boundary, which is consistent with the way&#xA;quantized SUS functions work.  These may both be useful behaviors, but&#xA;are probably function specific.  It makes sense to stack&#xA;non-destructive functions like Reverse and Speed with one destructive&#xA;function like Insert or Multiply, but it doesn't make sense to stack&#xA;two destructive functions, the first one will have no effect.</p>
</div>
<a name='Supported EDP Functions'>
<div class=div2><h3>9.2 Supported EDP Functions</h3>
</a>
<p>You can assume that the following functions behave in&#xA;the same way as the EDP excepted as noted.  Please let me know if you&#xA;find otherwise.</p>
<dl>
<dt><a name='Reset'>Reset</a></dt>
<dt><a name='GeneralReset'>GeneralReset</a></dt>
<dt><a name='Record'>Record</a></dt>
<dd>Long press Record will perform Reset.  Mobius doesn't&#xA;throw away all of the existing layers if you start recording over a loop&#xA;that already had content.  It just adds new layers, and you can then undo back to the previous layers.  I'm not sure I like this, but you can always use Reset to clear the layer list.</dd>
<dt><a name='Overdub'>Overdub</a></dt>
<dd>Mostly as in EDP.  Overdub is a "sticky" mode that you're supposed&#xA;to return to when you leave another mode.  This seems to work, but there&#xA;are probably some complicated mode transitions that cause overdub to&#xA;be incorrectly turned off.  Mobius supports quantization of overdub&#xA;functions with extended OverdubMode parameter values.</dd>
<dt><a name='Undo, LongUndo'>Undo, LongUndo</a></dt>
<dd>Mobius only supports long undo, so the Undo, ShortUndo, and LongUndo&#xA;functions all do the same thing.  Since Mobius does not yet support&#xA;loop windowing, you can undo an unrounded multiply.  I actually like this a &#xA;lot so when loop windowing is supported Mobius will provide specific&#xA;functions to move the window rather than overloading undo.&#xA;<br><br>&#xA;Unlike the EDP, Mobius undo is not constrained by the application of the &#xA;Reverse function.  You can undo past the point where a reverse was&#xA;performed.&#xA;<br><br>&#xA;Scheduled events are always undone before the layer.  So if you&#xA;have several quantized events stacked, you must press Undo once for each event.&#xA;</dd>
<dt><a name='Multiply'>Multiply</a></dt>
<dd>Mostly as in EDP.  I was unsure about multiply behavior&#xA;so I added a new MultiplyMode parameter with values <i>Traditional</i>&#xA;and <i>Overdub</i>.  In traditional mode, when you end a multiply,&#xA;the multiply will continue until you have reached a cycle boundary&#xA;relative to where the multiply was started.  So if you start a multiply&#xA;in the middle of a loop, then end the multiply AFTER the middle of the&#xA;next new cycle, a third cycle will be added because you've already&#xA;crossed the first cycle boundary and the end has to be &#xA;rounded up to the next cycle boundary.  In <i>Overdub</i> mode, multiply&#xA;always ends in the current cycle which made more sense to me.  But this may&#xA;be a misinterpretation of how the EDP works.&#xA;<br><br>&#xA;Long press multiply doesn't work.  Unrounded multiply during&#xA;rounding (described on 5-36) probably does not work.&#xA;</dd>
<dt><a name='Insert, InsertOnly'>Insert, InsertOnly</a></dt>
<dd>Mostly as in EDP.  Long-press insert does not do Replace.  When in &#xA;a loop with SamplerStyle=Once, Insert is supposed to retrigger the&#xA;current loop but leave the return transition.  In Mobius, Insert&#xA;cancels the return and begins inserting in the current loop.</dd>
<dt><a name='Stutter, SUSStutter'>Stutter, SUSStutter</a></dt>
<dd>During stutter mode, repetitions of the current cycle will be inserted&#xA;whenever the end of the cycle is reached.  Mobius stutters the cycle&#xA;you were in when the function was performed.  The EDP manual suggests&#xA;that the stuttered cycle should be the one AFTER the current cycle.  I have&#xA;a slight preference for the current cycle because you can get to the next&#xA;one just by quantizing.  Let me know if you find this difference upsetting.</dd>
<dt><a name='Mute'>Mute</a></dt>
<dd>Long-press Mute is not being be converted to SUSMute.  Mobius&#xA;adds an additional MuteMode parameter value <i>Pause</i>.  Pause mode&#xA;behaves like pause on a tape recorder, the sound stops and so does&#xA;the clock.  When you unmute after a pause, playback resumes from where it&#xA;was paused.</dd>
<dt><a name='Replace'>Replace</a></dt>
<dt><a name='Substitute'>Substitute</a></dt>
<dd>As in EDP, except that InterfaceMode has no effect.</dd>
<dt><a name='Speed, FullSpeed, HalfSpeed'>Speed, FullSpeed, HalfSpeed</a></dt>
<dt><a name='Reverse, Forward, Backward'>Reverse, Forward, Backward</a></dt>
<dd>As in EDP, but there is no undo restriction after changing direction.&#xA;You can undo past the layer where the direction was changed.</dd>
<dt><a name='NextLoop'>NextLoop</a></dt>
<dd>Mobius allows any function to be "stacked" for application&#xA;after the switch.  The new TimeCopyMode and SoundCopyMode parameters may&#xA;be used to specify which mode you will be in after a timing or sound&#xA;copy into an empty loop.</dd>
<dt><a name='SamplePlay'>SamplePlay</a></dt>
<dt><a name='Retrigger'>Retrigger</a></dt>
<dt><a name='Start Point'>Start Point</a></dt>
<dt><a name='SUSRecord'>SUSRecord</a></dt>
<dt><a name='SUSOverdub'>SUSOverdub</a></dt>
<dd>There may be cases where overdub is lost if you&#xA;keep the SUSOverdub trigger down at the same time as performing&#xA;other functions.</dd>
<dt><a name='SUSMultiply'>SUSMultiply</a></dt>
<dt><a name='SUSUnroundedMultiply'>SUSUnroundedMultiply</a></dt>
<dt><a name='SUSInsert'>SUSInsert</a></dt>
<dt><a name='SUSUnroundedInsert'>SUSUnroundedInsert</a></dt>
<dt><a name='SUSMute'>SUSMute</a></dt>
<dt><a name='SUSReplace'>SUSReplace</a></dt>
<dt><a name='SUSSubstitute'>SUSSubstitute</a></dt>
<dt><a name='SUSReverse'>SUSReverse</a></dt>
<dt><a name='SUSSpeed'>SUSSpeed</a></dt>
<dt><a name='SUSNextLoop'>SUSNextLoop</a></dt>
<dt><a name='SUSMuteRetrigger'>SUSMuteRetrigger</a></dt>
<dt><a name='ReAlign'>ReAlign</a></dt>
<dd>ReAlign doesn't always work correctly if you switch between loops&#xA;and layers that have a different cycle size.  For best results when&#xA;synchronizing, avoid using unrounded multiply and unrounded insert&#xA;unless the <i>Quantize</i> parameter is set to <i>Cycle</i>.</dd>
<dt><a name='MuteReAlign'>MuteReAlign</a></dt>
<dd>See ReAlign</dd>
<dt><a name='QuantMIDIStartSong'>QuantMIDIStartSong</a></dt>
<dt><a name='MuteQuantMIDIStartSong'>MuteQuantMIDIStartSong</a></dt>
<dt><a name='QuantStartPoint'>QuantStartPoint</a></dt>
</dl>
</div>
<a name='Mobius Functions'>
<div class=div2><h3>9.3 Mobius Functions</h3>
</a>
<p>This section describes new Mobius functions that are not found in&#xA;the EDP.</p>
<dl>
<dt><a name='Play'>Play</a></dt>
<dd>End the current mode and return to play mode.  This is like a &#xA;universal mode cancel function.  It will get you out of modes like Insert, &#xA;Multiply, Rehearse, Replace, Substitute, Overdub, and Mute and return you&#xA;to Play.  It does not cancel Reverse or HalfSpeed.  It can also be used&#xA;to cancel a loop switch when confirmation is on, since normally Undo is&#xA;used as a confirming action.</dd>
<dt><a name='Pause'>Pause</a></dt>
<dd>Mute the track and freeze the playback and record positions.  The effect&#xA;is similar to pressing the pause button on a tape deck.  When pause is released,&#xA;the track will continue playing and recording from the same position.  This&#xA;behavior is also available with the <i>Mute</i> function if the&#xA;<i>Mute Mode</i> parameter is set to <i>Pause</i>.</dd>
<dt><a name='Global Pause'>Global Pause</a></dt>
<dd>Perform a <i>Pause</i> function in all tracks.</dd>
<dt><a name='Next Parameter'>Next Parameter</a></dt>
<dd>Move to the next dynamic parameter in the UI.  &#xA;See <a href='mobiusdoc.htm#The Status Area'>The Status Area</a> and <a href='mobiusdoc.htm#Configuring the Status Area'>Configuring the Status Area</a>&#xA;for more information on dynamic parameters.</dd>
<dt><a name='Previous Parameter'>Previous Parameter</a></dt>
<dd>Move to the previous dynamic parameter in the UI.  &#xA;See <a href='mobiusdoc.htm#The Status Area'>The Status Area</a> and <a href='mobiusdoc.htm#Configuring the Status Area'>Configuring the Status Area</a>&#xA;for more information on dynamic parameters.</dd>
<dt><a name='Increment Parameter'>Increment Parameter</a></dt>
<dd>Increment the current dynamic parameter value.</dd>
<dt><a name='Decrement Parameter'>Decrement Parameter</a></dt>
<dd>Decrement the current dynamic parameter value.</dd>
<dt><a name='Global Reset'>Global Reset</a></dt>
<dd>Perform a GeneralReset function for all tracks.</dd>
<dt><a name='Global Mute'>Global Mute</a></dt>
<dd>Mute all tracks that are currently playing, but do not unmute any&#xA;tracks that are currently muted.  After using Global Mute, if you use&#xA;it a second time, it will unmute only those tracks that were muted &#xA;previously.  Note that this is different than simply toggling the&#xA;current mute state in all tracks.</dd>
<dt><a name='Solo'>Solo</a></dt>
<dd>Mute all tracks other than the active track, unmute the active&#xA;track if it is currently muted.  If you immediately use Solo again, it&#xA;will restore the mute state of all tracks to what it was before the&#xA;first Solo.</dd>
<dt><a name='Loop <i>n</i>'>Loop <i>n</i></a></dt>
<dd>Trigger the numbered loop in the current track.  The EDP accomplishes&#xA;this with MIDI note events relative to the <i>LoopTrig</i> parameter.&#xA;Mobius defines a specific function for each loop trigger which may then&#xA;be bound to arbitrary MIDI events.</dd>
<dt><a name='Previous Loop'>Previous Loop</a></dt>
<dd>Trigger the previous loop in the current track.  The same&#xA;as the EDP's NextLoop function, but goes the other direction.</dd>
<dt><a name='Clear'>Clear</a></dt>
<dd>Erase the current contents of the loop, leaving an empty loop&#xA;of the same size as the original.</dd>
<dt><a name='Slip Forward'>Slip Forward</a></dt>
<dd>Instantly move playback position forward.</dd>
<dt><a name='Slip Backward'>Slip Backward</a></dt>
<dd>Instantly move playback position backward.</dd>
<dt><a name='Multiply 2'>Multiply 2</a></dt>
<dd>Performs an immediate 2x multiply of the loop.  This differs&#xA;from the Multiply function in that you do not have to wait for the&#xA;loop to be extended.</dd>
<dt><a name='Multiply 3'>Multiply 3</a></dt>
<dd>Performs an immediate 3x multiply of the loop.</dd>
<dt><a name='Multiply 4'>Multiply 4</a></dt>
<dd>Performs an immediate 4x multiply of the loop.</dd>
<dt><a name='Trim Start'>Trim Start</a></dt>
<dd>Removes the content of the loop from the beginning to the current frame.&#xA;This is the same as doing an unrounded multiply from the beginning but&#xA;requires only one function&gt;</dd>
<dt><a name='Trim End'>Trim End</a></dt>
<dd>Removes the content of the loop from the current frame to the end.&#xA;This is the same as doing an unrounded multiply to the end, but requires&#xA;only one function.</dd>
<dt><a name='Redo'>Redo</a></dt>
<dd>Returns to a layer that had previously been undone.  The number&#xA;of layers that may be redone is controlled by the <i>Max Redo Layers</i>&#xA;preset parameter.</dd>
<dt><a name='Next Track'>Next Track</a></dt>
<dd>Active the next track.  The active track will have <i>input focus</i>&#xA;meaning that it will response to button, key, and MIDI events.  If the&#xA;previously active track was running, it will still be running.</dd>
<dt><a name='Previous Track'>Previous Track</a></dt>
<dd>Active the previous track.</dd>
<dt><a name='Track <i>n</i>'>Track <i>n</i></a></dt>
<dd>Active the numbered track.</dd>
<dt><a name='Next Group'>Next Group</a></dt>
<dd>Assign the track to the next track group, or remove the assignment&#xA;if the track is already in the last group.  A long press will always remove&#xA;the assignment.  By default there are 4 groups, so successive calls of&#xA;the Next Group function would assign group 1, 2, 3, 4, then back to&#xA;no assignment.</dd>
<dt><a name='Track Copy'>Track Copy</a></dt>
<dd>Copies the content of the adjacent track on the left into the current track.</dd>
<dt><a name='Track Copy Timing'>Track Copy Timing</a></dt>
<dd>Copies the timing of the adjacent track on the left into the current track.</dd>
<dt><a name='Rate Up'>Rate Up</a></dt>
<dd>Increase the playback rate to achieve a one semitone rise in pitch.</dd>
<dt><a name='Rate Down'>Rate Down</a></dt>
<dd>Decrease the playback rate to achieve a one semitone fall in pitch.</dd>
<dt><a name='Rate Normal'>Rate Normal</a></dt>
<dd>Return the playback rate to normal.</dd>
<dt><a name='Rate Next'>Rate Next</a></dt>
<dd>Move to the next playback rate in the <i>rate sequence</i>.  If you are&#xA;currently at the end of the sequence, move to the first rate in the sequence.&#xA;See the <i>RateSequence</i> parameter.</dd>
<dt><a name='Rate Previous'>Rate Previous</a></dt>
<dd>Move to the previous playback rate in the <i>rate sequence</i>.  If you&#xA;are currently at the beginning of the sequence, move to the last rate&#xA;in the sequence.</dd>
<dt><a name='Rate Shift'>Rate Shift</a></dt>
<dd>Defines the center note for a <i>rate shift range</i>.  Pressing this&#xA;note will return the rate to normal.  Pressing a note below will lower&#xA;the rate, pressing a note above will raise the rate.</dd>
<dt><a name='Pitch Up'>Pitch Up</a></dt>
<dd>Increase the pitch one semitone.</dd>
<dt><a name='Pitch Down'>Pitch Down</a></dt>
<dd>Decrease the pitch one semitone.</dd>
<dt><a name='Pitch Normal'>Pitch Normal</a></dt>
<dd>Return the pitch to normal.</dd>
<dt><a name='Pitch Next'>Pitch Next</a></dt>
<dd>Move to the next pitch in the <i>pitch sequence</i>.  If you are&#xA;currently at the end of the sequence, move to the first pitch in the sequence.&#xA;See the <i>PitchSequence</i> parameter.</dd>
<dt><a name='Pitch Previous'>Pitch Previous</a></dt>
<dd>Move to the previous pitch in the <i>pitch sequence</i>.  If you&#xA;are currently at the beginning of the sequence, move to the last pitch&#xA;in the sequence.</dd>
<dt><a name='Pitch Shift'>Pitch Shift</a></dt>
<dd>Defines the center note for a <i>pitch shift range</i>.  Pressing this&#xA;note will return the pitch to normal.  Pressing a note below will lower&#xA;the pitch, pressing a note above will raise the pitch.</dd>
<dt><a name='Bounce Record'>Bounce Record</a></dt>
<dd>Start or stop a bounce recording.  The contents of the playing&#xA;tracks may be mixed and copied to an empty track, automatically muting&#xA;the source tracks after the bounce.  See the <a href='mobiusdoc.htm#Bounce Recording'>Bounce Recording</a>&#xA;section for more details.</dd>
<dt><a name='Sample Trigger <i>n</i>'>Sample Trigger <i>n</i></a></dt>
<dd>Begin playback of a configured sample.  See <a href='mobiusdoc.htm#Samples'>Samples</a>&#xA;for more information.</dd>
<dt><a name='Cancel Script'>Cancel Script</a></dt>
<dd>Cancel any script that may be running.</dd>
<dt><a name='Pause Script'>Pause Script</a></dt>
<dd>Pause execution of the script until a ResumeScript function is received.</dd>
<dt><a name='Resume Script'>Resume Script</a></dt>
<dd>Resume a script that is paused after the evaluation PauseScript&#xA;function or a <i>Wait resume</i> statement.</dd>
<dt><a name='Start Script Recorder'>Start Script Recorder</a></dt>
<dd>Begin recording user interaction with Mobius that can be saved&#xA;as a script.</dd>
<dt><a name='Stop Script Recorder'>Stop Script Recorder</a></dt>
<dd>Stop recording user interaction with Mobius.</dd>
<dt><a name='Save Script'>Save Script</a></dt>
<dd>Save the user actions recorded by Start Script Recorder to a script file.&#xA;You will be prompted for the name of the file.</dd>
<dt><a name='StartAudioRecorder'>StartAudioRecorder</a></dt>
<dd>Begin capturing audio being sent to the output device.</dd>
<dt><a name='StopAudioRecorder'>StopAudioRecorder</a></dt>
<dd>Stop capturing audio being sent to the output device.</dd>
<dt><a name='SaveAudio'>SaveAudio</a></dt>
<dd>Save the audio captured by the Start Audio Recorder function to a file.</dd>
<dt><a name='Save Loop'>Save Loop</a></dt>
<dd>Perform a "quick save" of the current loop.  &#xA;See <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a> for details.</dd>
<dt><a name='Debug'>Debug</a></dt>
<dd>Run a debugging function.  I use this to test various things, it &#xA;may or may not do something catastrophic.  Think of it as that big red&#xA;button that you're never supposed to press.</dd>
<dt><a name='Stop Song'>Stop Song</a></dt>
<dd>Sends a MIDI <i>Stop Song</i> event.  This happens during all&#xA;synchronization modes and is not subject to quantization.</dd>
</dl>
<a name='Slip Functions'>
<div class=div3><h4>9.3.1 Slip Functions</h4>
</a>
<p>The <i>Slip Forward</i> and <i>Slip Backward</i> functions allow&#xA;you to instantly move the playback position forward or backward.  The&#xA;effect is similar to a Retrigger, except that you have more control&#xA;over where the new playback position will be.</p>
<p>The amount of slippage is determined by two preset parameters:&#xA;<i>Slip Mode</i> and <i>Slip Time</i>.  The <i>Slip Mode</i>. parameter&#xA;may have one of these values.</p>
<dl>
<dt><a name='Next Subcycle'>Next Subcycle</a></dt>
<dd>Playback jumps to the next subcycle boundary.</dd>
<dt><a name='Next Cycle'>Next Cycle</a></dt>
<dd>Playback jumps to the next cycle boundary.  If there is only&#xA;one cycle in the loop, the effect is identical to Retrigger.</dd>
<dt><a name='Next Loop'>Next Loop</a></dt>
<dd>Playback jumps to the loop boundary.  The effect is&#xA;identical to Retrigger.</dd>
<dt><a name='Relative Subcycle'>Relative Subcycle</a></dt>
<dd>Playback jumps an amount equal to one subcycle, relative to the&#xA;current position.  The ending position may not be on a subcycle&#xA;boundary.</dd>
<dt><a name='Relative Cycle'>Relative Cycle</a></dt>
<dd>Playback jumps an amount equal to one cycle, relative to the&#xA;current position.  The ending position may not be on a cycle boundary.&#xA;If there is only one cycle in the loop, this will have no affect.</dd>
<dt><a name='Milliseconds'>Milliseconds</a></dt>
<dd>Playback jumps a configurable number of milliseconds.</dd>
</dl>
<p>When <i>Slip Mode</i> is set to <i>Milliseconds</i> the amount&#xA;of slippage is determined by the <i>Slip Time</i> parameter.  This&#xA;is set to a positive integer number of milliseconds.  For example,&#xA;slip time value of 1000 would cause the <i>Slip Forward</i> function&#xA;to slip forward 1 second.</p>
</div>
</div>
</div>
<a name='Parameters'>
<div class=div1><h2>10 Parameters</h2>
</a>
<a name='Unimplemented EDP Parameters'>
<div class=div2><h3>10.1 Unimplemented EDP Parameters</h3>
</a>
<p>The following parameters are either not implemented, or not&#xA;relevant for Mobius.</p>
<ul>
<li>Channel</li>
<li>InterfaceMode=Delay</li>
<li>Velocity</li>
<li>LoopTrig - not necessary, triggers have unique function names</li>
<li>Source# - not necessary</li>
<li>ControlSource - not necessary</li>
<li>Overflow - not applicable</li>
<li>Presets - not applicable</li>
</ul>
</div>
<a name='Supported EDP Parameters'>
<div class=div2><h3>10.2 Supported EDP Parameters</h3>
</a>
<p>You can assume that the following parameters behave in  the&#xA;same way as the EDP except as noted.  Please let me know if you&#xA;find otherwise.</p>
<dl>
<dt><a name='Feedback'>Feedback</a></dt>
<dd>See the <a href='mobiusdoc.htm#Controlling Feedback'>Controlling Feedback</a> section for full details&#xA;on how feedback can be used.</dd>
<dt><a name='8thsPerCycle'>8thsPerCycle</a></dt>
<dd>Specifies the number of subcycles per cycle.  There is no limit&#xA;on this value, though large values are practically useless.</dd>
<dt><a name='AutoRecord'>AutoRecord</a></dt>
<dd>Determines whether we begin recording immediately when entering&#xA;an empty loop.</dd>
<dt><a name='FeedBkCont'>FeedBkCont</a></dt>
<dd>The MIDI controller number for adjusting feedback.  Set in the&#xA;MIDI configuration rather than as a preset parameter.</dd>
<dt><a name='InsertMode'>InsertMode</a></dt>
<dd>My interpretation of Rehearse mode seems to be quite different&#xA;than the EDP, but I think I like mine better.  I will revisit this someday&#xA;and add a parameter to let you switch between the two behaviors.</dd>
<dt><a name='LoopCopy'>LoopCopy</a></dt>
<dd>Both sound and timing copies are supported.  Supports&#xA;the extended Mobius parameters TimeCopyMode and SoundCopyMode.</dd>
<dt><a name='MoreLoops'>MoreLoops</a></dt>
<dd>The number of loops in a track.  Mobius just calls this&#xA;"Loop Count"</dd>
<dt><a name='MuteMode'>MuteMode</a></dt>
<dd>Mobius adds the mode <i>Pause</i> option.  Pause behaves like&#xA;pause on a tape recorder, the clock stops as well as muting the sound.</dd>
<dt><a name='Quantize'>Quantize</a></dt>
<dd></dd>
<dt><a name='RecordMode'>RecordMode</a></dt>
<dd></dd>
<dt><a name='RoundMode'>RoundMode</a></dt>
<dd></dd>
<dt><a name='SamplerStyle'>SamplerStyle</a></dt>
<dd><i>Attack</i> is partially supported.  It will set the output level&#xA;according to the velocity of the Note On event, but will not go into mute&#xA;when the Note Off event is received.  <i>Once</i> is buggy, I do not recommend&#xA;using it.</dd>
<dt><a name='SwitchQuant'>SwitchQuant</a></dt>
<dd>Also supports SubCycle and ConfirmSubCycle.</dd>
<dt><a name='Threshold'>Threshold</a></dt>
<dd>Similar to EDP though the levels will probably feel different.&#xA;Mobius seems to be more sensitive.</dd>
<dt><a name='VolumeCont'>VolumeCont</a></dt>
<dd>Specify the MIDI controller number for output level control.&#xA;Set in MIDI configuration rather than as a preset parameter.</dd>
<dt><a name='Sync'>Sync</a></dt>
<dd>See the <a href='mobiusdoc.htm#Synchronization'>Synchronization</a> section for complete details.</dd>
<dt><a name='Loop/Delay (InterfaceMode)'>Loop/Delay (InterfaceMode)</a></dt>
<dd>Partial support for modes <i>In</i>, <i>Out</i>,&#xA;and <i>Stutter</i>.  See the section <a href='mobiusdoc.htm#Interface Modes'>Interface Modes</a>&#xA;for complete details.</dd>
</dl>
</div>
<a name='Mobius Parameters'>
<div class=div2><h3>10.3 Mobius Parameters</h3>
</a>
<p>The following are new Mobius parameters that are not found in the EDP.</p>
<dl>
<dt><a name='MuteCancel'>MuteCancel</a></dt>
<dd>Determines whether Mute mode is canceled when other functions&#xA;are used.  See the <a href='mobiusdoc.htm#Mute Cancel'>Mute Cancel</a> section for more information.</dd>
<dt><a name='NoFeedbackUndo'>NoFeedbackUndo</a></dt>
<dd>A boolean option.   When true, suppresses the retention of layers&#xA;when the only change made to them during the last iteration was&#xA;the application of feedback.</dd>
<dt><a name='MaxUndo'>MaxUndo</a></dt>
<dd>The maximum number of layers will retain for undo.</dd>
<dt><a name='MaxRedo'>MaxRedo</a></dt>
<dd>The maximum number of layers will retain for redo.</dd>
<dt><a name='TimeCopyMode'>TimeCopyMode</a></dt>
<dd>When performing a LoopCopy=Timing, this specifies the mode you&#xA;want to be in after the copy.  By default this is Insert mode, but&#xA;you may also select Play, Overdub, or Multiply modes.</dd>
<dt><a name='SoundCopyMode'>SoundCopyMode</a></dt>
<dd>When performing a LoopCopy=Sound, this specifies the mode you&#xA;want to be in after the copy.  By default this is Multiply mode, but&#xA;you may also select Play, Overdub, or Insert modes.</dd>
<dt><a name='MultiplyMode'>MultiplyMode</a></dt>
<dd>Determines how a multiply is ended.  With a value of <i>Tradition</i>&#xA;multiply ending should be as on the EDP.  With a value of <i>Overdub</i>,&#xA;the multiply will end no later than then end of the current cycle.  That is,&#xA;we will not necessarily add a multiple of full cycles relative&#xA;to the time the multiply was started.  This may reflect my misinterpretation&#xA;of how multiply works on the EDP.</dd>
<dt><a name='OverdubMode'>OverdubMode</a></dt>
<dd>May be set to <i>Quantize</i> or <i>SUSQuantize</i> so that overdub&#xA;may be quantized like other functions.</dd>
<dt><a name='TrackCopy'>TrackCopy</a></dt>
<dd>Determines what happens when you activate a track that has no content.&#xA;If the value is Timing, the timing of the active loop in the last track&#xA;will be copied into a new loop in the new track.  If the value is Sound,&#xA;the content of the active loop in the last track is copied into&#xA;the new track.</dd>
<dt><a name='No Layer Flattening'>No Layer Flattening</a></dt>
<dd>When checked, Mobius will not merge the content fed back from&#xA;the previous layer with new content while the layer is recorded.&#xA;Instead, the content of each layer will be merged dynamically as&#xA;the loop plays.  This can be useful as a technique but requires&#xA;more CPU overhead.  See the <a href='mobiusdoc.htm#Controlling Feedback'>Controlling Feedback</a> section&#xA;for more information.</dd>
<dt><a name='Rate Sequence'>Rate Sequence</a></dt>
<dd>May be set to a space delimited list of numbers which represent positive&#xA;or negative rate changes in semitone increments.  For example a rate of "1"&#xA;is one semitone above normal, a rate of "-7" is 7 semitones below normal&#xA;(or a perfect fifth lower).  Once a rate sequence is defined, the rate&#xA;may be changed using the <i>Rate Next</i> and <i>Rate Previous</i> functions.&#xA;</dd>
<dt><a name='Rate Shift Retrigger'>Rate Shift Retrigger</a></dt>
<dd>When checked, causes the loop to be retriggered whenever the&#xA;rate changes with the RateUp, RateDown, RateNormal, RateNext, RatePrev,&#xA;and RateShift functions.</dd>
<dt><a name='Pitch Sequence'>Pitch Sequence</a></dt>
<dd>Same as <i>Rate Sequence</i> but defines a sequence for the&#xA;itch Shift function that changes pitch without changing tempo.</dd>
<dt><a name='Pitch Shift Retrigger'>Pitch Shift Retrigger</a></dt>
<dd>When checked, causes the loop to be retriggered whenever the&#xA;rate changes with the PitchUp, PitchDown, PitchNormal, PitchNext, PitchPrev,&#xA;and PitchShift functions.</dd>
<dt><a name='Bounce Quantize'>Bounce Quantize</a></dt>
<dd>Selects the quantization level to be used with the &#xA;<a href='mobiusdoc.htm#Bounce Record'>Bounce Record</a> function.</dd>
<dt><a name='Overdub Transfer'>Overdub Transfer</a></dt>
<dd>Controls how overdub mode is carried forward&#xA;when switching loops.  If set to <i>Off</i> overdub mode is always off&#xA;after switching loops.  If set to <i>Follow</i> the overdub mode in the&#xA;current loop is carried forward to the next.  If set to <i>Remember</i>&#xA;the overdub mode of a loop is remembered when leaving the loop, and&#xA;restored when returning to it.</dd>
<dt><a name='Reverse Transfer'>Reverse Transfer</a></dt>
<dd>Controls how reverse mode is carried forward&#xA;when switching loops.  If set to <i>Off</i> the direction is always forward&#xA;after switching loops.  If set to <i>Follow</i> the direction of the&#xA;current loop is carried forward to the next.  If set to <i>Remember</i>&#xA;the direction of a loop is remembered when leaving the loop, and&#xA;restored when returning to it.</dd>
<dt><a name='Rate Transfer'>Rate Transfer</a></dt>
<dd>Controls how both the Half Speed and Rate Shift modes are carried forward&#xA;when switching loops.  If set to <i>Off</i> rate is always returned&#xA;to normal after switching loops.  If set to <i>Follow</i> the current rate&#xA;is carried forward to the next loop.  If set to <i>Remember</i>&#xA;the rate of a loop is remembered when leaving the loop, and&#xA;restored when returning to it.</dd>
<dt><a name='Pitch Transfer'>Pitch Transfer</a></dt>
<dd>Controls how Pitch Shift is carried forward&#xA;when switching loops.  If set to <i>Off</i> pitch is always returned to normal&#xA;after switching loops.  If set to <i>Follow</i> the pitch of the&#xA;current loop is carried forward to the next.  If set to <i>Remember</i>&#xA;the pitch of a loop is remembered when leaving the loop, and&#xA;restored when returning to it.</dd>
</dl>
<a name='Mute Cancel'>
<div class=div3><h4>10.3.1 Mute Cancel</h4>
</a>
<p>The <i>Mute Cancel</i> parameter controls whether mute mode is&#xA;canceled when using other functions.  In order to understand the&#xA;mute cancel options, we must classify functions into one&#xA;of the following groups:</p>
<ul>
<li><b>Mute</b> - A function that takes a loop in or out of mute mode.</li>
<li><b>Modal Edit</b> - A function that modifies the loop, and &#xA;enters a <i>mode</i> that lasts until the mode is canceled.</li>
<li><b>Instant Edit</b> - A function that modifies the loop, but&#xA;does not enter a mode.</li>
<li><b>Trigger</b> - A function that changes the playback and record&#xA;position of the loop.</li>
<li><b>Effect</b> - A function that changes the way the loop &#xA;is played, but does not result in a permanent modification.</li>
<li><b>Global</b> - A global function that does not affect a particular&#xA;track, or performs an operation that may temporarily override mute modes.</li>
</ul>
<p>This table shows the available values for the <i>Mute Cancel</i>&#xA;parameter:</p>
<dl>
<dt><a name='Never'>Never</a></dt>
<dd>Mute mode is not canceled until you use another Mute function.&#xA;Note that mute may still be temporarily canceled with global&#xA;functions such as Solo.</dd>
<dt><a name='Edits'>Edits</a></dt>
<dd>Mute mode is canceled whenever a function that modifies&#xA;the loop is used.  This includes both the <i>Modal Edit</i> and&#xA;<i>Instant Edit</i> functions.</dd>
<dt><a name='Triggers'>Triggers</a></dt>
<dd>Mute mode is canceled by the <i>Modal Edit</i> and <i>Instant Edit</i>&#xA;functions as well as the <i>Trigger</i> functions such as <i>Next Loop</i>,&#xA;<i>Retrigger</i>, etc.</dd>
<dt><a name='Effects'>Effects</a></dt>
<dd>Mute mode is canceled by the <i>Modal Edit</i>, <i>Instant Edit</i>, &#xA;and <i>Trigger</i> functions as well as the <i>Effect</i> functions &#xA;such as <i>Reverse</i>, <i>Halfspeed</i>, etc.</dd>
<dt><a name='Custom'>Custom</a></dt>
<dd>The functions that cancel mute mode may be individually selected.</dd>
</dl>
<p>When <i>Mute Cancel</i> is set to <i>Custom</i> the functions&#xA;that cancel mute mode are defined by the global parameter named&#xA;(surprisingly) <i>Mute Cancel Functions</i>.  This parameter is&#xA;set in the <i>Global Parameters</i> dialog, it cannot have a &#xA;different value in each preset.  To select the functions that&#xA;cancel mute mode, move them from the left panel to the right panel.</p>
<a name='Function Classes'>
<div class=div4><h5>10.3.1.1 Function Classes</h5>
</a>
<p>The <b>Mute</b> functions are:</p>
<ul>
<li>Mute</li>
<li>Mute On</li>
<li>Mute Off</li>
<li>Sustain Mute</li>
<li>Sustain Mute Retrigger</li>
<li>Mute Realign</li>
<li>Mute Start Song</li>
<li>Play</li>
</ul>
<p>The <b>Modal Edit</b> functions are:</p>
<ul>
<li>Reset</li>
<li>General Reset</li>
<li>Global Reset</li>
<li>Record</li>
<li>Sustain Record</li>
<li>Rehearse</li>
<li>Overdub</li>
<li>Sustain Overdub</li>
<li>Multiply</li>
<li>Sustain Multiply</li>
<li>Sustain Unrounded Multiply</li>
<li>Insert</li>
<li>Insert Only</li>
<li>Sustain Insert</li>
<li>Sustain Unrounded Insert</li>
<li>Stutter</li>
<li>Sustain Stutter</li>
<li>Replace</li>
<li>Sustain Replace</li>
<li>Substitute</li>
<li>Sustain Substitute</li>
</ul>
<p>the <b>Instant Edit</b> function are:</p>
<ul>
<li>Instant Multiply <b>X</b></li>
<li>Undo</li>
<li>Redo</li>
<li>Start Point</li>
<li>Trim Start</li>
<li>Trim End</li>
<li>Clear</li>
<li>Slip Forward</li>
<li>Slip Backward</li>
<li>Quant Midi Start Point</li>
</ul>
<p>the <b>Trigger</b> functions are:</p>
<ul>
<li>Next Loop</li>
<li>Previous Loop</li>
<li>Sustain Next Loop</li>
<li>Sustain Previous Loop</li>
<li>Retrigger</li>
<li>Sample Play</li>
<li>Loop Trigger <b>X</b></li>
<li>Realign</li>
</ul>
<p>the <b>Effect</b> functions are:</p>
<ul>
<li>Speed</li>
<li>Fullspeed</li>
<li>Halfspeed</li>
<li>Rate Down</li>
<li>Rate Up</li>
<li>Rate Next</li>
<li>Rate Previous</li>
<li>Rate Shift <b>X</b></li>
<li>Rate Normal</li>
<li>Pitch Down</li>
<li>Pitch Up</li>
<li>Pitch Next</li>
<li>Pitch Previous</li>
<li>Pitch Shift <b>X</b></li>
<li>Pitch Normal</li>
<li>Reverse</li>
<li>Forward</li>
<li>Backward</li>
</ul>
<p>The <b>Global</b> functions are:</p>
<ul>
<li>Track <b>X</b></li>
<li>Focus Lock</li>
<li>Track Group</li>
<li>Checkpoint</li>
<li>Sample <b>X</b></li>
<li>Start Song</li>
<li>Stop Song</li>
<li>Sync Master</li>
<li>Resume Script</li>
<li>Start Script Recording</li>
<li>Save Script Recording</li>
<li>Stop Script Recording</li>
<li>Start Audio Recording</li>
<li>Save Audio Recording</li>
<li>Stop Audio Recording</li>
<li>Save Loop</li>
<li>Bounce</li>
<li>Pause</li>
<li>Sustain Pause</li>
<li>Global Mute</li>
<li>Global Pause</li>
<li>Solo</li>
</ul>
</div>
</div>
</div>
</div>
<a name='Controlling Tracks'>
<div class=div1><h2>11 Controlling Tracks</h2>
</a>
<p>The simplest way to control a track is to make it the&#xA;<i>selected</i> track by clicking on it with the mouse, or using one&#xA;of the track selection functions bound to a UI button, key or MIDI&#xA;event.  The selected track will have a white border around it in the&#xA;track strip.  MIDI events bound to functions or controls in the &#xA;<i>global scope</i> will then be processed in the selected track.</p>
<p>Often it is desirable to control a track when it is not currently&#xA;selected, or to control more than one track at the same time.  There&#xA;are several options available:</p>
<ul>
<li>Focus Lock</li>
<li>Track Groups</li>
<li>Track Binding Scope</li>
<li>Group Binding Scope</li>
</ul>
<a name='Focus Lock'>
<div class=div2><h3>11.1 Focus Lock</h3>
</a>
<p>The <i>focus lock</i> feature was one of the first methods of&#xA;controlling multiple tracks.  It has now been supplemented with the more&#xA;powerful <i>track group</i> feature.  When focus lock is enabled for a&#xA;track, the track will receive function triggers even when it is not&#xA;the selected track.  For example, if focus lock is enabled in tracks&#xA;1, 2, and 3, track 1 is selected, and the <i>Reverse</i> command is&#xA;performed, the Reverse will be performed in tracks 1, 2, and 3.</p>
<p>There are three ways to enable focus lock for a track, by clicking&#xA;on the focus lock button in the track strip, with the <i>FocusLock</i>&#xA;function, and with scripts.  See the scripting manual for more&#xA;information about controlling tracks with scripts.  In the standard&#xA;track strip, the focus lock button is the small circle at the top&#xA;which will fill with red when clicked.  If you do not see a small&#xA;circle you have customized the track strip.  Pull down the&#xA;<i>Configuration</i> menu and select the <i>Display Components</i>&#xA;item.  In the multi-select field labeled <i>Track Strip Controls</i>&#xA;make sure that the item labeled <i>Focus Lock</i> is moved to the&#xA;panel on the right side.</p>
<p>Using the <i>FocusLock</i> function will toggle focus lock on and&#xA;off.</p>
<p>You may not want all functions to obey focus lock.  For example you&#xA;may want NextLoop, Retrigger, and Mute to obey focus lock but not&#xA;Record and Overdub so you can control the recording of tracks&#xA;individually but still mute them at the same time.  A global parameter&#xA;can be used to specify which functions will obey focus lock and track&#xA;groups.  Pull down the <i>Configuration</i> menu and select the&#xA;<i>Global Parameters...</i> item.  Then in the field labeled &#xA;<i>Group and Focus Lock Functions</i>, move the functions you want&#xA;to obey focus lock to the panel on the right side.</p>
</div>
<a name='Track Groups'>
<div class=div2><h3>11.2 Track Groups</h3>
</a>
<p>Track groups are a more powerful alternative to <a href='mobiusdoc.htm#Focus Lock'>Focus Lock</a>.  A track may be assigned to up to 4 track groups,&#xA;functions performed in a track will automatically be performed in all&#xA;other tracks in the same group.  As examples, track groups can be used&#xA;to organize tracks by instrument (piano, bass, drums, lead) or by&#xA;their location in a composition (verse, bridge, chorus).</p>
<p>Tracks are assigned to a group using the <i>Track Group</i>&#xA;function.  You select a specific group by using <i>Track Group</i>&#xA;several times to cycle through the group numbers.  The first time you&#xA;use <i>Track Group</i> the track will be assigned to group 1, the&#xA;second time to group 2, and so on.  If the track is assigned to &#xA;the highest group 4, using <i>Track Group</i> again will remove the group&#xA;assignment and return the track to normal.  The pattern is:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;  none -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; none -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; none&#xA;</pre>
</div></div>
<p>Using MIDI, if you perform a long press of <i>Track Group</i> the&#xA;group assignment will be removed.</p>
<p>In the default track strip, track groups are displayed at the&#xA;bottom of the track strip as "Group 1", "Group 2", etc.  Each group&#xA;name is displayed in a different color.  You can specify the color you&#xA;want for the group names in the <i>Palette...</i> dialog.  If you are&#xA;upgrading from an earlier version and do not see group names, bring up&#xA;the <i>Display Components</i> dialog, and make sure the <i>Group</i>&#xA;item is in the right panel of the selection field labeled <i>Track&#xA;Strip Controls</i>.</p>
<p>Like the focus lock feature, you may not want all functions to obey&#xA;the track group assignment.  You can use the <i>Group and Focus Lock&#xA;Functions</i> global parameter to specify which functions should be&#xA;automatically performed in other tracks in the group.</p>
<p>If you find that 4 track group is more than you need, you can reduce&#xA;the number using the <i>Max Track Groups</i> parameter in the &#xA;MIDI configuration.  Select the <i>MIDI Control</i> configuration dialog,&#xA;and look for the <i>Max Track Groups</i> field.  Use the selector to &#xA;specify how many track groups you want.  This will reduce the&#xA;number of times you have to use the <i>Track Group</i> function to cycle&#xA;through the group assignments.  If you set <i>Max Track Groups</i>&#xA;to 1, groups will behave the same as <a href='mobiusdoc.htm#Focus Lock'>Focus Lock</a>.</p>
<p>If you are using scripts and you want to assign a particular group&#xA;you can use the <i>TrackGroup</i> statement with a numeric argument.&#xA;For example:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;    !name Set Group 3&#xA;    TrackGroup 3&#xA;</pre>
</div></div>
<p>There have also been some extensions to the scripting language to&#xA;make it easier to loop over all the tracks in a group or all tracks&#xA;with a certain quality.  The following symbols may be used after the&#xA;<i>for</i> statement&gt; to loop over tracks in a specific state.</p>
<dl>
<dt><a name='group1'>group1</a></dt>
<dd>Loop over all tracks in group 1</dd>
<dt><a name='group2'>group2</a></dt>
<dd>Loop over all tracks in group 2</dd>
<dt><a name='group3'>group3</a></dt>
<dd>Loop over all tracks in group 3</dd>
<dt><a name='group4'>group4</a></dt>
<dd>Loop over all tracks in group 4</dd>
<dt><a name='focused'>focused</a></dt>
<dd>Loop over all tracks with focus lock on</dd>
<dt><a name='muted'>muted</a></dt>
<dd>Loop over all tracks whose loop is muted</dd>
<dt><a name='playing'>playing</a></dt>
<dd>Loop over all tracks whose loop is playing (not muted)</dd>
</dl>
</div>
<a name='Track Binding Scope'>
<div class=div2><h3>11.3 Track Binding Scope</h3>
</a>
<p>Each track has a <i>binding scope</i>, which means that you can&#xA;bind MIDI events to functions and controls that will operate only&#xA;within that track.  Binding scopes were described earlier in the&#xA;<a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a> section.</p>
<p>To make a track specific binding bring up the <i>MIDI Control</i>&#xA;dialog, locate the pulldown menu labeled <i>Scope</i> and select&#xA;one of the numbered track names.  You may now make MIDI bindings&#xA;to functions and controls as usual.</p>
<p>A common application of track binding is to assign a unique MIDI&#xA;continuous controller number to the Output Level control of each&#xA;track.  This allows you to use a MIDI controller with lots of knobs as&#xA;a "mixer" to balance the levels of each track.</p>
<p>Another useful application is to bind a MIDI event to a function&#xA;that will be performed in only one track.  This can be done for any&#xA;function, but is especially useful with these:</p>
<ul>
<li>Focus Lock</li>
<li>Mute</li>
<li>Solo</li>
<li>Retrigger</li>
<li>Reverse</li>
<li>Speed</li>
</ul>
<p>Forcing a function to run in only one track has been done in &#xA;previous releases of Mobius using scripts and the "for" statement.</p>
<pre>&#xA;   for 4&#xA;      Mute&#xA;   next&#xA;</pre>
<p>For simple track targeting like this you now no longer need to use&#xA;scripts, you can simply make a binding to the Mute function in the&#xA;"Track 4" scope.</p>
</div>
<a name='Group Binding Scope'>
<div class=div2><h3>11.4 Group Binding Scope</h3>
</a>
<p>Like track binding scopes, there is also a binding scope defined&#xA;for each of the track groups.  To make a group specific binding bring&#xA;up the <i>MIDI Control</i> dialog, locate the pulldown menu labeled&#xA;<i>Scope</i> and select one of the numbered group names.  You may now&#xA;make MIDI bindings to functions and controls as usual.</p>
<p>When a function or control in a group scope is triggered, &#xA;it will be performed for all tracks currently in that group.</p>
<p>The group control for <i>Output Level</i> behaves differently than&#xA;other control bindings.  The output level of the tracks in the group&#xA;will be changed relative to their current output level, rather than&#xA;all set to the same value.  This allows you to set up a mix of several&#xA;tracks with different output levels, then adjust the overall output&#xA;level of the group "bus" without changing the mix of track levels.&#xA;For example, assume track 1 and 2 are in the same group and track 1&#xA;has output level 127 and track 2 has output level 64.  If you reduce&#xA;the group output level from 127 to 97, the effective level for track 1&#xA;will be 97 and the effective level for track 2 will be 34.</p>
</div>
</div>
<a name='Controlling Feedback'>
<div class=div1><h2>12 Controlling Feedback</h2>
</a>
<p>Feedback controls the level of the audio content copied from&#xA;one layer into the next.  Feedback can operate in two styles&#xA;which have different uses:</p>
<ol>
<li>Continuous</li>
<li>One Time</li>
</ol>
<p>With <i>Continuous</i> feedback, the feedback level is constantly&#xA;being used to adjust the level of the audio from the current layer&#xA;being copied into the next layer.  This can be used to create &#xA;volume swells or to "sculpt" the layer.  This is how feedback&#xA;on the EDP behaves.</p>
<p>With <i>One Time</i> feedback, the feedback level is only used&#xA;when the loop reaches the end point and a new layer is created.  The&#xA;current feedback level at the end point is applied to the entire layer.&#xA;The only advantage to this mode is that if you bump the feedback&#xA;pedal by accident, you have until the end of the loop is reached&#xA;to move it to the correct position.</p>
<p>Currently, the implementation of these feedback modes is dependent&#xA;to another important mode, the <i>Layer Flattening</i> mode.</p>
<p>Mobius provides two ways to combine the audio content of the layers&#xA;into the loop that you hear being played.</p>
<ol>
<li>Flattening</li>
<li>Dynamic Merging</li>
</ol>
<p>When <i>flattening</i> the full content of a layer is copied&#xA;into the next layer as it is being recorded.  When the recording&#xA;of a layer completes, everything necessary to play the layer is&#xA;contained in one large block of audio.</p>
<p>When <i>dynamic merging</i> the content of a layer is not copied&#xA;into the next layer, instead the next layer references the content&#xA;from the previous layer.  We then continually combine the contents of&#xA;a layer with the layers it references as the layer plays.</p>
<p>The main advantage of dynamic merging is that we may require less&#xA;memory if you tend not to overdub over the entire layer.  For example,&#xA;if you have a loop 10 seconds long, but only overdub 2 seconds worth&#xA;of new material, the new layer will only require memory for 2 seconds.&#xA;With flattening, each new layer requires memory for the full 10 seconds&#xA;whether or not there was any actual new recording during those seconds.</p>
<p>Another interesting consequence of dynamic flattening is that&#xA;when you save a project, you can create audio files containing only&#xA;the new content overdubbed into each layer.  These files can then &#xA;be remixed to create variants of the loop.</p>
<p>There are two big disadvantages of dynamic flattening.  First, &#xA;if you create many layers, the overhead of constantly merging the content &#xA;from all the layers can require too much computer power which can &#xA;result in missed audio interrupts which sound like "clicks".  Second,&#xA;continuous feedback is not available in this mode because we are&#xA;not copying the content from one layer into the next.  Only one&#xA;level of feedback can be applied to all of the content referenced&#xA;in the previous layer.</p>
<p>Choosing between layer flattening and dynamic merging is done&#xA;with the <i>No Layer Flattening</i> preset parameter.  When this&#xA;parameter is checked, we will perform dynamic merging.</p>
<p>Most people will prefer to use layer flattening.  There is however&#xA;one interesting performance technique that is provided by dynamic&#xA;merging.  If you set the <i>MaxUndo</i> parameter to a non-zero value,&#xA;Mobius will operate like a delay line with a fixed number of repeats.&#xA;For example, set MaxUndo to 4, drop feedback slightly and record a&#xA;loop.  With feedback reduced, we will create a new layer on each&#xA;repeat.  But the MaxUndo parameter restricts us to keeping only the&#xA;most recent 4 layers.  Once the first layer plays 4 times, it will&#xA;no longer be heard, it has "fallen off the edge" of the layer list.&#xA;This can also be used to reduce the "wall of sound" effect&#xA;when doing continuous overdubs.  Material in older layers will be&#xA;removed each time a new layer is created, letting the loop evolve&#xA;without waiting for a gradual feedback decay.</p>
</div>
<a name='Rate Shifting'>
<div class=div1><h2>13 Rate Shifting</h2>
</a>
<p>The <i>rate shifting</i> feature allows you to adjust the playback&#xA;and recording rate of the loop so that both the perceived pitch and&#xA;tempo of the loop change.  This is similar to the <i>Half Speed</i>&#xA;function except that you are not limited to a single rate shift of 1&#xA;octave down.</p>
<p>Rate shifting may be controlled in several ways using these&#xA;functions.</p>
<ul>
<li>Rate Up</li>
<li>Rate Down</li>
<li>Rate Next</li>
<li>Rate Prev</li>
<li>Rate Normal</li>
<li>Rate Shift</li>
</ul>
<p>The <i>Rate Up</i> and <i>Rate Down</i> functions move the rate up&#xA;or down by one semitone relative to the current rate.</p>
<p>The <i>Rate Next</i> and <i>Rate Prev</i> functions select rates&#xA;defined in the <i>Rate Sequence</i> preset parameter.  A rate sequence&#xA;is a space delimited list of numbers which represent positive or&#xA;negative rate changes in semitone increments.  For example a rate of&#xA;"1" is one semitone above normal, a rate of "-7" is 7 semitones below&#xA;normal (or a perfect fifth lower).  The rate sequence "wraps" on the&#xA;edges so if you are on the last rate in the sequence, <i>Rate Next</i>&#xA;will move to first rate in the sequence.</p>
<p>The <i>Rate Normal</i> function returns the rate to normal, no&#xA;matter how it was shifted.</p>
<p>Perhaps the most useful function is <i>Rate Shift</i>.  This allows&#xA;you to use a keyboard controller to instantly access a large range of&#xA;rates spread over several octaves.  You normally bind a MIDI note&#xA;event to the <i>Rate Shift</i> function, this becomes the <i>rate&#xA;center note</i>.  When you press the rate center note, the rate&#xA;returns to normal.  Where it gets interesting is that the notes above&#xA;and below the center note are automatically assigned to semitone rate&#xA;shifts relative to the center note.  Notes below the center note lower&#xA;the rate, notes above raise the rate.  This allows you to "play" the&#xA;loop chromatically, similar to using a sampler.</p>
<p>Note that Mobius will attempt to bind rate shift functions in a 4&#xA;octave range on either side of the center note.  For best results, it&#xA;is recommended that the center note use a MIDI channel that is not&#xA;being used for any other functions.  If a rate shift note is already&#xA;assigned to another Mobius function, the previous function will have&#xA;priority.  To avoid these conflicts use a different channel.</p>
<p>When the rate is shifted, the playback of the loop will be affected&#xA;by the setting of the <i>Rate Shift Retrigger</i> preset parameter.&#xA;If this parameter is checked, then the loop will be retriggered&#xA;whenever the rate is shifted.  This makes it behave like a sampler.&#xA;If the parameter is not checked, the rate is simply shifted without&#xA;retriggering.</p>
</div>
<a name='Pitch Shifting'>
<div class=div1><h2>14 Pitch Shifting</h2>
</a>
<p>NOTE: Pitch Shifting is provided in release 1.24 as a "technology&#xA;preview".  There are still bugs in it and I do not consider it ready&#xA;for real use.  Still you may find it interesting to get a sense for&#xA;what will eventually be provided.</p>
<p>Pitch shifting is very similar to <a href='mobiusdoc.htm#Rate Shifting'>Rate Shifting</a> except&#xA;that the pitch is changed without changing the tempo of the loop.  In&#xA;all other respects the functions and parameters used to control pitch&#xA;shifting are identical to those for rate shifting.</p>
<p>Pitch shifting may be controlled in several ways using these&#xA;functions.</p>
<ul>
<li>Pitch Up</li>
<li>Pitch Down</li>
<li>Pitch Next</li>
<li>Pitch Prev</li>
<li>Pitch Normal</li>
<li>Pitch Shift</li>
</ul>
<p>The <i>Pitch Up</i> and <i>Pitch Down</i> functions move the pitch up&#xA;or down by one semitone relative to the current pitch.</p>
<p>The <i>Pitch Next</i> and <i>Pitch Prev</i> functions select pitches&#xA;defined in the <i>Pitch Sequence</i> preset parameter.  The Pitch Sequence&#xA;the same as the Rate Sequence described in <a href='mobiusdoc.htm#Rate Shifting'>Rate Shifting</a>.</p>
<p>The <i>Pitch Normal</i> function returns the rate to normal, no&#xA;matter how it was shifted.</p>
<p>Finally <i>Pitch Shift</i> allows you to use a keyboard controller&#xA;to instantly access a large range of pitches spread over several octaves.&#xA;The Pitch Shift function is bound to a MIDI note in the same way&#xA;as the Rate Shift function.  See <a href='mobiusdoc.htm#Rate Shifting'>Rate Shifting</a> for more information&#xA;on how the notes are selected, and the issues this can cause.</p>
<p>When the pitch is shifted, the playback of the loop will be affected&#xA;by the setting of the <i>Pitch Shift Retrigger</i> preset parameter.&#xA;If this parameter is checked, then the loop will be retriggered&#xA;whenever the pitch is shifted.  If the parameter is not checked, the pitch&#xA;is simply shifted without retriggering.</p>
</div>
<a name='Bounce Recording'>
<div class=div1><h2>15 Bounce Recording</h2>
</a>
<p>The <a href='mobiusdoc.htm#Bounce Record'>Bounce Record</a> function allows you to capture the&#xA;output of several tracks, mix them together, and copy the result into&#xA;an empty track.  This is similar to the <i>bounce down</i> mixing&#xA;technique used with a multi track recorder.</p>
<p>When the Bounce Record function is first called, it begins&#xA;capturing the output of any track that is currently playing.  The&#xA;track output is mixed together "post fader" so the Output Level&#xA;control of each track may be used to control the track mix &#xA;in the recording.</p>
<p>When Bounce Record is called a second time, the captured and mixed&#xA;track output is copied to the first empty track (from the left).  The&#xA;source tracks are then immediately muted, and the new track immediately&#xA;begins playing.  This new track contains a single loop with the&#xA;captured output from the other tracks.  This loop can then be&#xA;manipulated as usual.</p>
<p>Any number of bounce recordings can be made, but you must have at&#xA;least one empty track.  If there are no empty tracks when the&#xA;second Bounce Record is called, the recording is thrown away.</p>
<p>Note that bounce recording is a special kind of "global mode" that&#xA;is not related to any particular track or loop.  While you are bounce&#xA;recording, you can be manipulating tracks and loops in any way,&#xA;including recording new loops, multiplying, overdubbing, triggering,&#xA;and rate shifting.  Mobius is recording the entire process.</p>
<p>Bounce recording can be especially useful with the Retrigger, Rate&#xA;Shift and Pitch Shift functions.  Once a loop is created, you can&#xA;play a chord progression using Rate Shift or Pitch Shift, record the&#xA;result of that performance, and bounce this into a new track to serve&#xA;as a background loop.</p>
<p>The timing of the bouce recording may be controlled with the&#xA;<i>Bounce Quantize</i> parameter.  Bounce quantization is not affected&#xA;by the <i>Quantize</i> parameter that is used with other functions.&#xA;This is because bounce quantization is almost always set to <i>Loop</i>&#xA;or <i>Cycle</i>, but you may not wish to use this same quantization&#xA;for the functions that build the loop.</p>
</div>
<a name='Synchronization'>
<div class=div1><h2>16 Synchronization</h2>
</a>
<p>Mobius supports a number of synchronization options that allow you&#xA;to create loops that stay in sync with drum machines and sequencers.&#xA;There are three styles of synchronization available.</p>
<ul>
<li><b>Master</b> - Mobius is the sync master and sends MIDI clocks&#xA;to other devices</li>
<li><b>Slave</b> - Mobius is a sync slave and receives clocks from&#xA;another device</li>
<li><b>Peer</b> - One Mobius track is the sync master for other&#xA;Mobius tracks (EDP calls this <i>brother sync</i>)</li>
</ul>
<p>The style of synchronization is determined by setting the <i>Sync&#xA;Mode</i> and <i>Track Sync Mode</i> parameters in the preset.  The&#xA;following sync modes are available.</p>
<dl>
<dt><a name='Off'>Off</a></dt>
<dd>No synchronization is performed.</dd>
<dt><a name='Out'>Out</a></dt>
<dd>Mobius is the sync master and sends MIDI clocks.  MIDI Start, Stop, and&#xA;Continue messages are sent automatically.</dd>
<dt><a name='Out User Start'>Out User Start</a></dt>
<dd>Mobius is the sync master and sends MIDI clocks.  MIDI Start &#xA;messages must be sent manually. </dd>
<dt><a name='In'>In</a></dt>
<dd>Mobius is a sync slave and receives MIDI clocks.  The start&#xA;and end of the loop are determined by the <i>Quantize</i> and&#xA;<i>8thsPerCycle</i> parameter.</dd>
<dt><a name='MIDI Beat'>MIDI Beat</a></dt>
<dd>Mobius is a sync slave and receives MIDI clocks.  The start&#xA;and end of the loop are quantized to a MIDI beat.</dd>
<dt><a name='MIDI Bar'>MIDI Bar</a></dt>
<dd>Mobius is a sync slave and receives MIDI clocks.  The start&#xA;and end of the loop are quantized to a MIDI bar as determined&#xA;by the <i>8thsPerCycle</i> parameter.  This is the same as&#xA;<i>In</i> except that the <i>Quantize</i> parameter does not have&#xA;to be set.</dd>
<dt><a name='Host Beat'>Host Beat</a></dt>
<dd>Mobius is a sync slave and receives beats from the VST host.&#xA;The start and end of the loop are quantized to a beat as defined&#xA;by he VST host.</dd>
<dt><a name='Host Bar'>Host Bar</a></dt>
<dd>Mobius is a sync slave and receives beats from the VST host.&#xA;The start and end of the loop are quantized to a bar as defined&#xA;by he VST host.</dd>
</dl>
<p>The <i>Track Sync Mode</i> parameter is valid only when <i>Sync Mode</i>&#xA;is <i>Out</i> or <i>Out User Start</i>.  See <a href='mobiusdoc.htm#Track Synchronization'>Track Synchronization</a>&#xA;for details.</p>
<a name='Drift Retrigger'>
<div class=div2><h3>16.1 Drift Retrigger</h3>
</a>
<p>Like the EDP, Mobius maintains synchronization with an external&#xA;clock by periodically comparing the current playback position with the&#xA;position we are supposed to have according to the clock.  If the&#xA;positions are not the same, a <i>drift</i> has occurred.  When the&#xA;amount of drift exceeds a certain threshold, the loop will be&#xA;automatically retriggered to make the playback position match the&#xA;clock.  This is called <i>drift retrigger</i>.</p>
<p>Depending on the contents of the loop, drift retrigger may produce&#xA;a soft audible "bump" due to the sudden change in playback position.&#xA;Cross fading is performed to make this transition smoother so it will&#xA;not sound like an unpleasant "click".</p>
<p>The global parameter <i>Resync Drift Frames</i> sets the number of&#xA;frames Mobius will allow a loop to drift out of alignment before&#xA;retriggering.  It is common for a slight drift to correct itself&#xA;over time, so this parameter should not be set too low or we will&#xA;retrigger too often.  A value slightly greater than the ASIO buffer &#xA;size is recommended.  The default value is 256.</p>
</div>
<a name='Sync=Out'>
<div class=div2><h3>16.2 Sync=Out</h3>
</a>
<p><i>Out</i> sync behaves like the EDP.  MIDI clocks are sent as&#xA;soon as the loop length is established.  MIDI <i>Start Song</i>&#xA;and <i>Stop Song</i> messages are sent automatically.</p>
<p>The tempo of the MIDI clocks is determined by the length of the&#xA;loop and the value of the <i>8thsPerCycle</i> parameter.  When using&#xA;external synchronization, you should think of the value of&#xA;<i>8thsPerCycle</i> as being the number of "beats" in a bar.  Most of&#xA;the time a beat will correspond to a quarter note.  So if you are&#xA;trying to synchronize with a 4/4 drum pattern that is 4 beats long,&#xA;set <i>8thsPerCycle</i> to 4 (or a multiple of 4).</p>
<p>The tempo is determined by this formula:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;    tempo = beats * (60 / loop seconds)&#xA;</pre>
</div></div>
<p>For example, if you create a loop 2 seconds long, and&#xA;<i>8thsPerCycle</i> is 4, then the tempo will be <b>4 * (60 / 2) = 120</b></p>
<p>The tempo range can be constrained by the <i>Minimum Sync Tempo</i>&#xA;and <i>Maximum Sync Tempo</i> preset parameters.  If the tempo&#xA;produced by this formula is less than the minimum sync tempo, it will&#xA;be doubled until it exceeds the minimum tempo.  Similarly, if the&#xA;tempo is greater than the maximum sync tempo, it will be halved until&#xA;it is less.</p>
<p>A MIDI <i>Start Song</i> message is sent after the following functions:</p>
<ul>
<li>Record End (with Record or any alternate ending)</li>
<li>Unrounded Multiply</li>
<li>Unrounded Insert</li>
<li>Start Point</li>
<li>Unmute when MuteMode=Start (retrigger)</li>
<li>Mute then Undo when MuteMode=Continuous (retrigger)</li>
<li>Loop Switch when SamplerStyle is Start, Once, or Attack</li>
<li>ReAlign (at the local loop start point)</li>
<li>Mute ReAlign</li>
<li>Mute/Multiply (same as ReAlign)</li>
<li>MIDI Start Song (EDP calls this QuantMIDIStartSong)</li>
<li>Mute + MIDI Start Song (EDP calls this MuteQuantMIDIStartSong)</li>
</ul>
<p>A MIDI <i>Stop Song</i> message is sent after the following functions:</p>
<ul>
<li>Reset</li>
<li>General Reset</li>
<li>Global Reset</li>
<li>Record Start</li>
<li>Mute when MuteMode=Start</li>
</ul>
<a name='Speed Sync Adjust'>
<div class=div3><h4>16.2.1 Speed Sync Adjust</h4>
</a>
<p>The new Mobius parameter <i>Speed Sync Adjust</i> controls&#xA;how output MIDI clocks are generated when switching to half speed.</p>
<ul>
<li><b>Tempo</b> - Clock rate is cut in half, like the EDP</li>
<li><b>Resize</b> - Clock rate stays the same, loop pulse count is&#xA;doubled to prevent it from retriggering in the middle</li>
<li><b>Continue</b> - Both clock rate and pulse count stay the same,&#xA;causing the loop to be retriggered at its midpoint</li>
</ul>
</div>
<a name='Unrounded Sync Adjust'>
<div class=div3><h4>16.2.2 Unrounded Sync Adjust</h4>
</a>
<p>The new Mobius parameter <i>Unrounded Sync Adjust</i> controls how&#xA;synchronization is performed after an unrounded operation like&#xA;<i>Insert</i> or <i>Multiply</i> that may change the cycle length.  The&#xA;possible values are:</p>
<dl>
<dt><a name='No Changes'>No Changes</a></dt>
<dd>No change to either the tempo or pulse count.  The loop will &#xA;continue counting sync pulses and retrigger the loop.  If the new&#xA;loop is longer than the previous loop, it will be retriggered before&#xA;it plays to completion.  If the new loop is shorter than the&#xA;previous loop, the loop will play to completion, then play a portion&#xA;of the front of the loop again before retriggering.</dd>
<dt><a name='Change Tempo'>Change Tempo</a></dt>
<dd>The tempo of the outbound MIDI clocks is changed to match the&#xA;number of pulses in the new loop.  This is perhaps the most musically&#xA;useful mode.</dd>
<dt><a name='Change Pulses'>Change Pulses</a></dt>
<dd>The tempo of the outbound MIDI clocks is not changed, but the&#xA;pulse count is adjusted to match the tempo.  The loop will not&#xA;retrigger in the middle as is the case with <i>No Changes</i>, but&#xA;it may not sound in sync with the external device.</dd>
</dl>
</div>
<a name='Controlling Host Tempo'>
<div class=div3><h4>16.2.3 Controlling Host Tempo</h4>
</a>
<p>Some VST hosts may allow Mobius to behave as a sync master,&#xA;defining the tempo based on the length of the recorded loop.  This is&#xA;sometimes referred to as "first loop capability".  For this to work,&#xA;you need two things:</p>
<ol>
<li>A VST host capable of slaving to MIDI clocks</li>
<li>A MIDI loop back device</li>
</ol>
<p>This configuration works reasonably well with <i>Ableton Live</i>.&#xA;I have not had much success with <i>Sonar</i> due to the way their&#xA;"audio engine" turns on and off.  You cannot do this with <i>FL Studio</i>&#xA;because it does not allow slave sync when running&#xA;standalone.  Supposedly <i>FL Studio</i> allows external sync when&#xA;running as a VST plugin but I have not had the opportunity to test&#xA;that.</p>
<p>For a loop back device on the PC, use <i>MIDI Yoke</i> at&#xA;<b>www.midiox.com/myoke.htm</b>.  I do not recommend the older&#xA;<i>Hubi's Loopback Device</i> as it does not run well on Windows XP.&#xA;Select one of the MIDI Yoke output devices in the <i>MIDI&#xA;Devices...</i> dialog.  Then configure the VST host to receive MIDI&#xA;sync from the MIDI Yoke input device with the same name as the Mobius&#xA;output device.</p>
<p>The <i>Plugin Opens MIDI Out</i> global parameter must be set&#xA;when controlling host tempo since the Mobius plugin must be able to&#xA;open the MIDI output device.</p>
</div>
</div>
<a name='Sync=Out User Start'>
<div class=div2><h3>16.3 Sync=Out User Start</h3>
</a>
<p><i>Out User Start</i> mode behaves like the EDP.  MIDI clocks are sent as&#xA;soon as the loop length is established but MIDI <i>Start Song</i>&#xA;and <i>Stop Song</i> messages must be sent manually.  The tempo&#xA;is determined in the same way as <a href='mobiusdoc.htm#Sync=Out'>Sync=Out</a>.</p>
<p>A MIDI <i>Start Song</i> message is sent when the loop reaches&#xA;its start point after the following functions:</p>
<ul>
<li>MIDI Start Song (EDP calls this QuantMidiStartSong)</li>
<li>Mute + MIDI Start Song (EDP calls this MuteQuantMidiStartSong)</li>
<li>ReAlign</li>
<li>Mute ReAlign</li>
<li>Mute/Multiply (same as ReAlign)</li>
</ul>
<p>A MIDI <i>Stop Song</i> message is sent immediately &#xA;after the following functions:</p>
<ul>
<li>Reset</li>
<li>General Reset</li>
<li>Global Reset</li>
<li>Record Start</li>
<li>Mute when MuteMode=Start</li>
</ul>
</div>
<a name='Sync=In'>
<div class=div2><h3>16.4 Sync=In</h3>
</a>
<p>Sync mode <i>In</i> behaves as it does on the EDP.  The length of a&#xA;cycle is predefined by the tempo of the incoming MIDI clocks and the&#xA;8thsPerCycle parameter.  The 8thsPerCycle specifies the number of MIDI&#xA;beats in the cycle, where a MIDI beat is always 24 MIDI&#xA;clocks.  The length of the cycle may be calculated with this&#xA;formula:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;   cycleSeconds =  60 / (tempo / 8thsPerCycle)&#xA;</pre>
</div></div>
<p>For a tempo of 120 and an 8thsPerCycle of 4, the cycle length will&#xA;be 2 seconds.  The end of the initial record will always be rounded&#xA;up to a multiple of this number of seconds.  If you record more than&#xA;the number of cycle seconds, the loop will contain more than one  cycle.</p>
<p>The beginning of the recording is determined by the <i>Quantize</i>&#xA;parameter.  When Quantize=Off, the recording will begin on the next MIDI&#xA;clock.  When Quantize=SubCycle, the recording will begin on the next&#xA;MIDI beat (24 clock boundary).  When Quantize=Cycle or Loop, the  recording&#xA;begins on the next MIDI bar, where a bar contains the number of MIDI&#xA;beats specified by 8thsPerCycle.</p>
<p>This mode is not available when Mobius is running as a VST plugin.&#xA;Use <a href='mobiusdoc.htm#Sync=Host Bar'>Sync=Host Bar</a> or <a href='mobiusdoc.htm#Sync=Host Beat'>Sync=Host Beat</a> instead.</p>
</div>
<a name='Sync=MIDI Bar'>
<div class=div2><h3>16.5 Sync=MIDI Bar</h3>
</a>
<p>This is functionally the same as Sync=In when Quantize=Cycle.  The&#xA;recording is always quantized to the start of a MIDI bar, and ends&#xA;on a MIDI bar.  The length of the bar is determined by 8thsPerCycle&#xA;but Quantize does not have to be set.  This allows you to begin  modifying&#xA;the new loop using whatever Quantize parameter you desire without&#xA;having to change presets.</p>
<p>This mode is not available when Mobius is running as a VST plugin.&#xA;Use <a href='mobiusdoc.htm#Sync=Host Bar'>Sync=Host Bar</a> instead.</p>
</div>
<a name='Sync=MIDI Beat'>
<div class=div2><h3>16.6 Sync=MIDI Beat</h3>
</a>
<p>In this mode the start and end of the recording are simply&#xA;quantized to a MIDI beat boundary and is not affected by&#xA;the tempo, the Quantize parameter, or the 8thsPerCycle parameter.  This&#xA;is similar to what the EDP calls <i>beat sync</i> except that beats&#xA;are defined by MIDI clocks rather than analog pulses.</p>
<p>This mode is not available when Mobius is running as a VST plugin.&#xA;Use <a href='mobiusdoc.htm#Sync=Host Beat'>Sync=Host Beat</a> instead.</p>
</div>
<a name='Sync=Host Beat'>
<div class=div2><h3>16.7 Sync=Host Beat</h3>
</a>
<p>In this mode the start and end of the recording are quantized to a&#xA;beat as defined by the VST host.  This is similar to <i>MIDI Beat</i>&#xA;except that MIDI clocks are not used.</p>
<p>This mode is only available when Mobius is running as a VST plugin.</p>
</div>
<a name='Sync=Host Bar'>
<div class=div2><h3>16.8 Sync=Host Bar</h3>
</a>
<p>In this mode the start and end of the recording are quantized&#xA;to a bar boundary as defined by the VST host.  Unlike <i>MIDI Bar</i>&#xA;the length of the bar is unrelated to the <i>8thsPerCycle</i> parameter.&#xA;The bar length is set in the host and cannot be controlled by Mobius.</p>
<p>This mode is only available when Mobius is running as a VST plugin.</p>
</div>
<a name='Track Synchronization'>
<div class=div2><h3>16.9 Track Synchronization</h3>
</a>
<p>What Mobius calls <i>Track Synchronization</i> is similar to&#xA;what the EDP calls <i>Brother Sync</i>.  It provides a way to &#xA;synchronize the start and end of a new recording with a loop&#xA;playing in another track.  With the EDP, brother sync is enabled&#xA;by connecting cables between two or more devices.  In Mobius,&#xA;track synchronization must be enabled with the <i>Track Sync Mode</i>&#xA;preset parameter.</p>
<p>Track sync is only available when the <i>Sync</i> parameter&#xA;is set to <i>Out</i> or <i>Out User Start</i>.  If you are using&#xA;one of the input sync modes, you must synchronize tracks from&#xA;the same external master clock, or by using the <i>Track Copy</i> &#xA;parameter combined with one of the track selection functions.</p>
<p>When track sync is enabled, the first track that records a loop&#xA;becomes the <i>track sync master</i> and all other tracks will&#xA;synchronize to the master track.  Any track may become the track sync&#xA;master.  If a track that was the sync master is reset, the next track&#xA;to finish recording a new loop becomes the sync master.</p>
<p>Once the track sync master has been selected, all other tracks&#xA;that have track sync enabled will quantize the start and end times&#xA;of the first recording to the master track.  Recording of the slave&#xA;track will not begin until the master track reaches a point determined&#xA;by the <i>Track Sync Mode</i> parameter.  The possible values&#xA;for this parameter are:</p>
<dl>
<dt><a name='Off'>Off</a></dt>
<dd>Track sync is not enabled, the recording will not be quantized.</dd>
<dt><a name='Sub Cycle'>Sub Cycle</a></dt>
<dd>The recording will begin or end at the next subcycle of the master track.</dd>
<dt><a name='Cycle'>Cycle</a></dt>
<dd>The recording will begin or end at the next cycle of the master track.</dd>
<dt><a name='Loop'>Loop</a></dt>
<dd>The recording will begin or end at the next loop start point &#xA;of the master track.  This is what the EDP does.</dd>
</dl>
<p><i>Track Sync Mode</i> will also affect the processing of the <i>ReAlign</i>&#xA;function.  If ReAlign is performed in a track that is a track sync&#xA;slave, the realign will happen when the master track reaches its loop&#xA;start point.  ReAlign always happens at the master loop start point, even&#xA;if <i>Track Sync Mode</i> is <i>Sub Cycle</i> or <i>Cycle</i>.</p>
<p>In track sync modes <i>Cycle</i> and <i>Loop</i> the cycle length&#xA;of the new loop will be the same as the master loop, and the new loop may&#xA;end up with more than one cycle.  As you pass the master loop cycle start&#xA;point during recording you will see the cycle counter incrementing.</p>
<p>Track sync mode <i>Sub Cycle</i> is more complicated.  After ending&#xA;a recording, if the new loop length is an even multiple of the master&#xA;loop cycle length, the cycle lengths will be the same and the new loop&#xA;may contain more than one cycle.  If the new loop length is not an&#xA;even multiple of the master cycle, the new loop will be reorganized&#xA;to have only one cycle.</p>
<p><i>Sub Cycle</i> track sync is a bit like Sync=MIDIBeat or&#xA;Sync=HostBeat.  It can be used to create a loop whose rhythm stays in&#xA;sync with the master track, but by allowing the cycle sizes to differ&#xA;the new loop will continually shift in and out of phase with&#xA;the master loop.</p>
</div>
<a name='Missing Synchronization Features'>
<div class=div2><h3>16.10 Missing Synchronization Features</h3>
</a>
<a name='Auto Start Point'>
<div class=div3><h4>16.10.1 Auto Start Point</h4>
</a>
<p>Mobius does not currently support what the EDP calls <i>Auto Start&#xA;Point</i>. When any form of synchronization is on, Mobius will&#xA;periodically retrigger the loop so that it stays in sync with the MIDI&#xA;clock.  This "drift retriggering" is disabled when <i>Overdub</i> or&#xA;another recording mode is active.  If retriggering were allowed during&#xA;recording, it could cause gaps in the recording which you would hear&#xA;as clicks.</p>
<p>If drift retrigger is disabled and an overdub is left on for several&#xA;iterations of the loop, the loop can go out of alignment with the MIDI clocks.&#xA;What <i>Auto Start Point</i> does is automatically set the start point&#xA;of the loop rather than retriggering it, but only if the feedback level&#xA;is low enough that the old content of the loop will be inaudible.</p>
<p>Currently in Mobius, if you leave overdub on, the loop will gradually&#xA;go out of sync with the external device.  This may be corrected by leaving&#xA;overdub and performing a <i>ReAlign</i>.</p>
</div>
<a name='MIDI Sync Indicators'>
<div class=div3><h4>16.10.2 MIDI Sync Indicators</h4>
</a>
<p>The EDP will send MIDI note messages at various synchronization &#xA;points such as the loop start point, global MIDI start point, cycle&#xA;start point, and sub-cycle start point.  Mobius does not.</p>
</div>
<a name='Stop Sync'>
<div class=div3><h4>16.10.3 Stop Sync</h4>
</a>
<p>On the EDP, pressing overdub when the track is reset and Sync=In&#xA;toggles reception of incoming sync.  It also toggles adherence to the&#xA;tempo specified by TempoSelect.  I'm assuming a side effect of this&#xA;is that you lose the ability to "arm" overdub mode during reset.</p>
<p>Mobius does not yet support this feature, though I don't really&#xA;like losing the ability to control overdub in reset.  Common functions&#xA;like Multiply and Insert don't do anything in reset mode, I would&#xA;rather use those.  I will probably add a preset parameter that lets&#xA;you choose which function will trigger Stop Sync.  The same&#xA;is true for the use of the Undo and Overdub functions to control&#xA;<a href='mobiusdoc.htm#Tempo Select'>Tempo Select</a>.</p>
</div>
<a name='Tempo Select'>
<div class=div3><h4>16.10.4 Tempo Select</h4>
</a>
<p>On the EDP, pressing Undo while in reset mode when Sync=Out&#xA;activates <i>Tempo Select</i> mode.  While in Tempo Select mode, the&#xA;Overdub function changes behavior and cancels Tempo Select rather than&#xA;arming Overdub mode.</p>
<p>Mobius does not support this feature, and like <a href='mobiusdoc.htm#Stop Sync'>Stop Sync</a> it&#xA;seems that functionality is actually taken away which I don't like.  Perhaps&#xA;the same parameter used to select the <a href='mobiusdoc.htm#Stop Sync'>Stop Sync</a> trigger&#xA;function could be used for Tempo Select as well.</p>
</div>
</div>
<a name='Synchronization Bugs'>
<div class=div2><h3>16.11 Synchronization Bugs</h3>
</a>
<p>The primary problem Mobius has with synchronization is in handling&#xA;alignment when switching among loops and layers that have a different&#xA;cycle length.  You can usually get the loop back in sync with the device,&#xA;but it may take an extra use of the ReAlign function or a premature&#xA;drift retrigger may be performed.  If you avoid operations such as&#xA;unrounded multiply that redefine the cycle length, you may not notice&#xA;these bugs.</p>
<p>Some of the known bugs include:</p>
<ul>
<li>The <i>SamplePlay</i> function can cause an unrecoverable&#xA;dealignment in some sync modes.</li>
<li>The <i>Sampler Style</i> parameter values <i>Once</i> &#xA;and <i>Attack</i> can confuse the sync pulse counter resulting in &#xA;incorrect drift retriggers.</li>
<li><i>MIDI Song Position</i> is not recognized when realigning&#xA;to an device while Sync=In.</li>
<li><i>ReAlign</i> after a dealignment from an unrounded operation &#xA;doesn't always work.  Sometimes this causes a premature drift retrigger, &#xA;after which the loop should be in sync.</li>
<li>Switching between loops and layers that have a different cycle length&#xA;can confuse the pulse counter and cause unnecessary drift retriggers.</li>
<li>Leaving mute when <i>Mute Mode</i> is <i>Pause</i> can cause a dealign&#xA;because a MIDI Song Position is not sent to the external device.</li>
</ul>
</div>
</div>
<a name='Interface Modes'>
<div class=div1><h2>17 Interface Modes</h2>
</a>
<p>Mobius provides support for Interface Modes except <i>Delay</i>.&#xA;But note that for modes such as <i>Replace</i> and <i>Flip</i> to work&#xA;as documented, you must have <i>continuous feedback</i> enabled.  &#xA;Continuous feedback is normally enabled, but it may be disabled&#xA;with the <i>No Layer Flattening</i> preset parameter.  If the interface&#xA;modes are not behaving as you expect, make sure this parameter&#xA;is not checked.</p>
<p>One of the things EDP interface modes do is specify what is&#xA;controlled by the feedback knob on the front panel and by an&#xA;expression pedal plugged into a jack on the back panel.  For example,&#xA;in the default <i>Loop</i> mode both the knob and the expression pedal&#xA;control feedback.  But in <i>In</i> mode, feedback is controlled only&#xA;by the knob and the expression pedal controls input level.</p>
<p>Mobius obviously does not have a jack on the back panel, so some of&#xA;the text in the EDP manual will not apply to Mobius.  You can&#xA;accomplish the same things, but in slightly different ways.</p>
<p>Mobius supports a complete set of MIDI continuous controller&#xA;bindings for direct control of these track controls:</p>
<ul>
<li>Input Level</li>
<li>Output Level</li>
<li>Feedback</li>
<li>Secondary Feedback</li>
<li>Pan</li>
</ul>
<p>Binding a MIDI controller to the <i>Feedback</i> control is similar&#xA;to plugging an expression pedal into the back of the EDP.  Binding a MIDI&#xA;controller to <i>Secondary Feedback</i> is similar to turning the feedback&#xA;knob on the front panel of the EDP.  Depending on Interface Mode&#xA;the MIDI controller bound to <i>Feedback</i> may actually be routed&#xA;to a different control such as <i>Input Level</i>.</p>
<p><b>NOTE:</b> The controller mapping described here only applies to&#xA;MIDI continuous controller bindings.  The knobs displayed in the UI&#xA;always perform the function indicated by their label.  In other words&#xA;the knob labeled <i>Feedback</i> <b>always</b> controls feedback,&#xA;regardless of the interface mode.</p>
<p>If you have a MIDI control surface with lots of knobs, or a lot of&#xA;MIDI foot pedals, you may not need some of the controller mapping&#xA;features provided by simple interface modes <i>In</i> and <i>Out</i>.</p>
<p>The following sections will describe each of the interface modes&#xA;in detail.</p>
<a name='InterfaceMode=Loop'>
<div class=div2><h3>17.1 InterfaceMode=Loop</h3>
</a>
<p>This is the same as the EDP except that there is only one way to&#xA;control feedback, with a MIDI continuous controller bound to the&#xA;<i>Feedback</i> track control.  The <i>Secondary Feedback</i>&#xA;control is ignored in this mode.</p>
</div>
<a name='InterfaceMode=In'>
<div class=div2><h3>17.2 InterfaceMode=In</h3>
</a>
<p>The MIDI controller bound to the <i>Feedback</i> control will&#xA;instead control the <i>Input Level</i> control and feedback must be&#xA;controlled with the MIDI controller bound to <i>Secondary&#xA;Feedback</i>.</p>
</div>
<a name='InterfaceMode=Out'>
<div class=div2><h3>17.3 InterfaceMode=Out</h3>
</a>
<p>The MIDI controller bound to the <i>Feedback</i> control will&#xA;instead control the <i>Output Level</i> control and feedback must be&#xA;controlled with the MIDI controller bound to <i>Secondary&#xA;Feedback</i>.</p>
</div>
<a name='InterfaceMode=Stutter'>
<div class=div2><h3>17.4 InterfaceMode=Stutter</h3>
</a>
<p>Essentially the same as <i>Loop</i> mode except that the&#xA;<i>Insert</i> function will perform a <i>Stutter</i> rather than an&#xA;Insert.  Stutter is sometimes referred to as "single cycle multiply".&#xA;While in Stutter mode, repetitions of the next cycle will be&#xA;continually inserted into the loop, and you may overdub new material&#xA;on top of the stuttered cycles.</p>
<p>Mobius also supports <i>Stutter</i> and <i>SUSStutter</i> functions that&#xA;you may use any time without needing to change interface modes.</p>
<p>If SwitchQuant is on during Stutter mode and you trigger a new&#xA;loop followed by an <i>Insert</i>, the EDP will perform a stutter&#xA;into the next loop.  Mobius does not currently support this.</p>
<p>The <i>Secondary Feedback</i> control is supposed to be active&#xA;during <i>Substitute</i> mode allowing you to overdub rather than&#xA;completely replace the previous material.  This is not currently&#xA;supported.</p>
</div>
<a name='InterfaceMode=Expert'>
<div class=div2><h3>17.5 InterfaceMode=Expert</h3>
</a>
<p>This mode requires that the <i>No Layer Flattening</i> preset&#xA;parameter not be checked.</p>
<p>The <i>Feedback</i> track control determines feedback while the&#xA;loop is playing, and the <i>Secondary Feedback</i> control&#xA;determines feedback during <i>Overdub</i>, <i>Multiply</i>, and&#xA;<i>Substitute</i> modes.  There is no mapping of controllers so you&#xA;must either have two MIDI controllers bound to these track controls or use&#xA;the knobs in the UI.</p>
<p>The EDP docs indicate that in <i>Sample Play</i> mode, feedback is&#xA;always 100% and the feedback controller controls output level instead.&#xA;Mobius does not support this.</p>
</div>
<a name='InterfaceMode=Flip'>
<div class=div2><h3>17.6 InterfaceMode=Flip</h3>
</a>
<p>This mode requires that the <i>No Layer Flattening</i> preset&#xA;parameter not be checked.</p>
<p>The MIDI controller bound to <i>Feedback</i> controls both&#xA;<i>Feedback</i> and <i>Input Level</i> at the same time, but the&#xA;feedback range is reversed.  At toe up, feedback is 100% and input&#xA;level is 0%, making it function similar to a "hold" pedal.</p>
<p>During <i>Overdub</i> mode, feedback is determined by the&#xA;<i>Secondary Feedback</i> control.  Unlike the EDP however, the&#xA;feedback range is not reversed.  Since this only controls one thing,&#xA;I didn't see much value in reversing the range but if someone feels&#xA;strongly about this I can change it.</p>
<p>Like <a href='mobiusdoc.htm#InterfaceMode=Stutter'>InterfaceMode=Stutter</a>, the <i>Insert</i> function&#xA;will perform a <i>Stutter</i> rather than an Insert.</p>
<p>I'm not sure if NextLoop+Insert is also supposed to perform a&#xA;stutter, currently it does not.</p>
<p>When in <i>Mute</i> you are supposed to be able to continue recording&#xA;silently.  Mobius does not support this.</p>
</div>
<a name='InterfaceMode=Replace'>
<div class=div2><h3>17.7 InterfaceMode=Replace</h3>
</a>
<p>This mode requires that the <i>No Layer Flattening</i> preset&#xA;parameter not be checked.</p>
<p>The MIDI controller bound to <i>Feedback</i> controls&#xA;both <i>Feedback Level</i> and <i>Output Level</i> at the same time.</p>
</div>
<a name='InterfaceMode=Delay'>
<div class=div2><h3>17.8 InterfaceMode=Delay</h3>
</a>
<p>This is not currently supported.</p>
<p>During <i>Delay</i> mode, the controller bound to the <i>Feedback</i>&#xA;control will control <i>Input Level</i> instead and feedback must&#xA;be controlled with <i>Secondary Feedback</i>.</p>
<p>In this case I don't like the reassignment of the controllers.&#xA;Since Mobius UI knobs are much more difficult to use than hardware&#xA;knobs, most users will want to have another MIDI controller assigned&#xA;to Secondary Feedback.  If you have to have two controllers, then you&#xA;may as well just assign them to Feedback and Input Level and not&#xA;bother with Secondary Feedback.  This can be changed with the&#xA;<i>Pedal Mode</i> parameter set in the <i>MIDI Control...</i> dialog.&#xA;This parameter may have these values:</p>
<ul>
<li><b>Variable</b> - Like the EDP, MIDI controllers may change&#xA;behavior when InterfaceMode=Delay</li>
<li><b>Fixed</b> - MIDI controllers do not change behavior</li>
</ul>
</div>
</div>
<a name='Advanced Features'>
<div class=div1><h2>18 Advanced Features</h2>
</a>
<a name='Latency Calibration'>
<div class=div2><h3>18.1 Latency Calibration</h3>
</a>
<p>This section is mostly irrelevant if you are using ASIO devices,&#xA;though you may find it useful to understand latency issues.</p>
<p>Most of my testing has been done using MME drivers, specifically&#xA;because they introduce high latency.  Systems that synchronize&#xA;recorded audio with what is being played must perform latency&#xA;compensation.  ASIO tends to hide errors in latency compensation, MME&#xA;makes them painfully obvious.</p>
<p>Because looping is to a large degree delayed playback of previously&#xA;recorded material, latency is actually much less of an issue than in&#xA;an application like a virtual instrument.  Latency is noticeable&#xA;whenever an abrupt change in playback occurs, such as ending the&#xA;initial recording, and unquantized functions such as loop switch,&#xA;loop trigger, and unrounded multiply.  If you are quantizing&#xA;functions, you may not often hear the effects of latency&#xA;compensation.</p>
<p>When you make an abrupt change, say a loop switch, Mobius will&#xA;already have buffered a few thousand frames from the current loop.&#xA;We can start buffering frames from the next loop, but they will be&#xA;delayed a few hundred milliseconds while we play the frames that are already&#xA;in the buffer.  What output latency compensation does is begin buffering&#xA;the next loop not from the first frame, but at an offset equal&#xA;to the number of frames from the old loop that are already buffered.&#xA;The bad effect is that a small portion of the front of the next loop&#xA;will be skipped.  The good effect is that when the next loop finally&#xA;becomes audible, it will be at its proper playback position, the&#xA;same position it would be in if there were zero latency.  This is important&#xA;if you are playing rhythmically and want the rhythm to be maintained&#xA;during the switch.  Without this there would be a few milliseconds&#xA;of "extra time" inserted whenever you switch that is likely to &#xA;annoy your drummer.</p>
<p>When you are quantizing, Mobius is usually able to anticipate&#xA;where the change in output buffering needs to occur so that the&#xA;switch occurs seamlessly without loss.  This early buffering&#xA;of the next loop can cause an audible glitch if you cancel the switch&#xA;(or change the target loop) very close to the point where the switch&#xA;is scheduled.  If we have already started buffering the next loop,&#xA;a few milliseconds of it will still be heard before hearing the&#xA;correct loop.  In practice this should be a relatively rare problem as&#xA;most people don't change their mind about which loop to trigger&#xA;100 milliseconds before the trigger is to be performed.</p>
<p>Latency compensation must also be performed to ensure&#xA;that overdubs are aligned properly with the audio that was&#xA;being heard during the overdub.  Without compensation the overdub&#xA;may sound slightly ahead of or slightly behind where it should be.</p>
<p>Mobius uses information returned by the device to estimate the&#xA;amount of latency compensation to be performed.  This can usually be&#xA;calculated with reasonable accuracy by knowing the number and size of&#xA;the buffers used by the audio device driver.  But there are other&#xA;factors besides buffer size that contribute to latency, so sometimes&#xA;the estimate is not correct and requires manual adjustment.</p>
<p>At the bottom of the <i>Audio Devices...</i> dialog, there are two&#xA;fields labeled <i>Override Input Latency Frames</i> and <i>Override&#xA;Output Latency Frames</i>.  After you select a device and reopen the&#xA;dialog, the default latency adjustment values are shown to the right&#xA;of these fields.  If you enter a number into either field, it will&#xA;override the default value.</p>
<p>The easiest way to determine what these values should be is to&#xA;perform a calibration.  Click the <i>Calibrate Latency</i> button and another&#xA;dialog will popup with information about the calibration process.  In&#xA;order to calibrate, you must physically connect the left or right&#xA;output channel of the sound card to the left input channel of the same&#xA;card.  For most cards this can be done with a cable that has mini-plugs&#xA;on both ends.  If the sound card output is being sent to a mixer, you&#xA;probably have a way to connect the output to the input in the mixer.&#xA;This is called a <i>loop back connection</i>.</p>
<p>Once you have made a loop back connection, click the <i>Start</i>&#xA;button on the calibration dialog.  If you are monitoring the sound&#xA;card's output, you will hear a series of clicks.  If the loop back&#xA;connection is not correct, after about 10 seconds a message dialog&#xA;will popup saying that calibration timed out waiting for an input&#xA;signal.  If this happens check your connections and try the&#xA;calibration again.  If the calibration was successful, a&#xA;message dialog will pop up displaying the total measured latency, and&#xA;the recommended values for input and output latency frames.  Click the&#xA;<i>Accept</i> button to copy these values into the latency fields of&#xA;the Audio Devices dialog, or click <i>Cancel</i> to keep the current&#xA;values.</p>
<p>If you want to tweak the latency values manually, start by&#xA;increasing the values for both latencies by 10 until it sounds right.&#xA;You normally shouldn't have to add more than a few hundred frames.  If&#xA;it is still way out of alignment, stop adding to the input latency and&#xA;start making more radical adjustments to the output latency, up or&#xA;down in increments of 500.  If that is required, submit a bug report&#xA;with information about your computer and sound card.</p>
<p>To get a better understanding of what these values mean, you can&#xA;think that at any moment in time Mobius is receiving sound that was&#xA;performed a few milliseconds in the past, and is playing sound that&#xA;will be heard a few milliseconds in the future.  Input latency is the&#xA;number of frames it takes a sound to "get into" Mobius.  If you set&#xA;input latency too low, you will be recording sound that was performed&#xA;<i>before</i> the time you triggered the record function.  If you&#xA;set input latency too high, you will lose some of the sound immediately&#xA;after you triggered the record function.  It is more critical that&#xA;input latency be correct because miscalibration can result in unwanted&#xA;sound or loss of sound at the record start point.  If an overdub sounds&#xA;like it has the right content but isn't aligned properly, then adjust&#xA;output latency not input latency.</p>
<p>If you set output latency too low, overdubs will sound like they&#xA;are playing too late.  If output latency is too high, overdubs will&#xA;sound like they are playing too early.  Deliberately adjusting output&#xA;latency too low can actually be useful to compensate for&#xA;<i>monitoring latency</i>.  If you perform live using monitor speakers&#xA;some distance away, it will take a noticeable amount of time for the&#xA;sound to travel from the speakers to your ears. If you are overdubbing&#xA;to this sound, it may not be aligned properly on playback.  Raising&#xA;output latency can help bring the overdubs back into alignment.</p>
</div>
<a name='Samples'>
<div class=div2><h3>18.2 Samples</h3>
</a>
<p>Samples are a feature I developed to for unit testing.&#xA;These are probably not very useful for performance but who knows.  Let&#xA;me know if you discover a technique!</p>
<p>A sample is just an audio <b>.wav</b> file you can bind to buttons, &#xA;keys, or MIDI events.  The function names are <i>Sample Trigger 1</i>, &#xA;<i>Sample Trigger 2</i> etc.  Up to 8 samples may be loaded.</p>
<p>When triggered, a sample plays from beginning to end without&#xA;interruption and then stops.  If you trigger it again before the last&#xA;sample playback finishes, we will start another overlapping playback&#xA;of the sample.  Sample playback is independent of whatever you are&#xA;doing with tracks, the sample output will be merged with the track&#xA;output.</p>
<p>So far pretty boring, but what makes samples interesting for&#xA;testing is that while the sample is playing, the output is fed into&#xA;the audio INPUT of the tracks.  So if the tracks are recording, they&#xA;will record the samples you are playing, then loop them.  I use&#xA;this so I can get audio content into the loops using just&#xA;the keyboard, without having to stop and reach for an instrument.</p>
<p>To configure samples pull down the <i>Configuration</i> menu and&#xA;select the <i>Samples...</i> item.  To add a new sample, click the Add&#xA;button.  Use the file explorer to select a <b>.wav</b> file.  The sample will&#xA;be added to the list in the center of the dialog.  To delete a sample,&#xA;select it in the list and click the Delete button.  The order the&#xA;samples appear in the list determines which function they are bound&#xA;to, the first sample will be bound to <i>Sample Trigger 1</i> etc.  If&#xA;you want to change the function bindings, you can select a sample and&#xA;use the <i>Move Up</i> and <i>Move Down</i> buttons to reorder the&#xA;list.</p>
</div>
<a name='Scripts'>
<div class=div2><h3>18.3 Scripts</h3>
</a>
<p>Scripts can be used to automate complex sequences of Mobius functions&#xA;or to temporarily override parameter values when performing functions.&#xA;Scripts are a complicated topic described fully in a different document.</p>
<p>Any number of scripts may be loaded.  Scripts are run by binding&#xA;script trigger functions to buttons, keys, or MIDI events.  To&#xA;configure scripts, pull down the <i>Configuration</i> menu and select&#xA;the <i>Scripts...</i> item.  The script dialog appears.</p>
<p>To add a new script, click the Add button.  Use the file explorer&#xA;to select a Mobius script file, normally with the ".mos" extension.&#xA;The script will be added to the script list in the center of the&#xA;dialog.  To delete a script, select it in the list and click the&#xA;Delete button.  After adding a script, its name will appear&#xA;in the function lists for the MIDI Control, Buttons, and Keyboard dialogs.</p>
</div>
<a name='XML Files'>
<div class=div2><h3>18.4 XML Files</h3>
</a>
<p>All configuration data you specify under the <i>Configuration</i>&#xA;menu are stored in XML files.   If you understand how&#xA;the files are structured, you may edit them in any text editor&#xA;as an alternative to using the Mobius configuration dialogs.  Perhaps&#xA;more interesting is that you can copy these files to create&#xA;a backup of the current configuration, or to email your configuration&#xA;to someone else.  There are two configuration files:</p>
<ul>
<li><b>ui.xml</b> - configuration related to the user interface</li>
<li><b>mobius.xml</b> - configuration related to the non-UI&#xA;portions of the looping engine</li>
</ul>
<p>Configuration of the UI and the engine are in separate files so&#xA;that the engine can in theory be embedded in other UIs with different&#xA;configuration mechanisms.  If you are interested in writing a "skin"&#xA;for Mobius, contact me and I'll provide information on the Mobius&#xA;engine API.</p>
<p>I'm not going to provide exhaustive documentation on the XML files&#xA;right now, but if you're comfortable with HTML you should be able to&#xA;figure them out.  The element and attribute names generally&#xA;match those you would see in the UI dialog boxes, though spaces are&#xA;removed and a capitalization style known as "camel case" is used.</p>
<p>A project file is also an XML file.  I'll provide a little more &#xA;information on these, because I find it useful to be able to define&#xA;the contents of a project in a text editor rather than loading loops&#xA;one at a time into Mobius, then saving the project.  This example&#xA;shows the basic structure of a project file:</p>
<div class='exampleOuter'>
<div class='exampleInner'>
<pre>&#xA;&lt;Project&gt;&#xA;  &lt;Track preset='Basic Looping' active='true' outputLevel='100'&gt;&#xA;    &lt;Loop&gt;&#xA;      &lt;Layer cycles='1' audio='test.wav'/&gt;&#xA;    &lt;/Loop&gt;&#xA;    &lt;Loop active='true'&gt;&#xA;      &lt;Layer cycles='2' audio='samples/gcloop.wav' protected='true'/&gt;&#xA;    &lt;/Loop&gt;&#xA;  &lt;/Track&gt;&#xA;&lt;/Project&gt;    &#xA;</pre>
</div></div>
<p>There is a single root element named <b>Project</b> that contains&#xA;one or more <b>Track</b> elements.  tracks are loaded into&#xA;Mobius from left to right. Each Track element may contain&#xA;one or more <b>Loop</b> elements.  You can have any number &#xA;of Loop elements, but if you have more than the value&#xA;of the <i>Loop Count</i> parameter in the current preset, the extra&#xA;loop elements will be ignored.</p>
<p>A Loop element may have zero or more <b>Layer</b> elements.  The&#xA;first layer element is the layer, which is what you will hear when the&#xA;loop is played for the first time.  Other layers represent the history&#xA;of the loop, these will be played only if you use the <i>Undo</i>&#xA;function to step backward through the layer history.  A Loop with&#xA;no layer elements represents a loop in Reset mode.</p>
<p>The <b>Track</b> element may have the following attributes:</p>
<dl>
<dt><a name='preset'>preset</a></dt>
<dd>Defines the selected preset for this track.  Each track may have a&#xA;different preset, if no preset is selected the default preset specified in the&#xA;<b>mobius.xml</b> configuration file will be used.</dd>
<dt><a name='active'>active</a></dt>
<dd>Set to <b>true</b> to indicate that this is the active track.  &#xA;There should be only one track marked active, if no tracks are marked&#xA;active Mobius will automatically activate the first one.</dd>
<dt><a name='outputLevel'>outputLevel</a></dt>
<dd>Determines the initial value for the output level knob in each track.  &#xA;If not specified, the output level will default to 127 (the highest).</dd>
<dt><a name='feedbackLevel'>feedbackLevel</a></dt>
<dd>Determines the initial value for the feedback knob in each track.  &#xA;If not specified, feedback will default to 127 (the highest).</dd>
</dl>
<p>The <b>Loop</b> element may have the following attributes:</p>
<dl>
<dt><a name='active'>active</a></dt>
<dd>Set to <b>true</b> to indicate that this is the active track.  &#xA;There should be only one track marked active, if no tracks are marked&#xA;active Mobius will automatically activate the first one.</dd>
<dt><a name='frame'>frame</a></dt>
<dd>The playback position.  If not specified playback starts&#xA;from frame 0 (the beginning of the loop).</dd>
</dl>
<p>The <b>Layer</b> element may have the following attributes:</p>
<dl>
<dt><a name='cycles'>cycles</a></dt>
<dd>The number of cycles in the layer.  Although the entire&#xA;layer content is stored in one wave file, it can be logically&#xA;broken up into more than one cycle.</dd>
<dt><a name='audio'>audio</a></dt>
<dd>Specifies a file system path to a wave file.</dd>
<dt><a name='protected'>protected</a></dt>
<dd>Marks the wave file as being protected.  Protected files will&#xA;not be overwritten or deleted when you save the project.</dd>
<dt><a name='id'>id</a></dt>
<dd>A unique numeric identifier for this layer.  You will see these&#xA;in projects saved by Mobius, but you don't need to specify them&#xA;when writing a project by hand.  They are used with <i>Segment</i>&#xA;elements to build complex layers that reference content from other&#xA;layers.</dd>
</dl>
<p>In projects saved by Mobius with the <i>Save Layers</i> option, you&#xA;may also see <b>Segment</b> elements. Segments are used to reference a&#xA;portion of the audio in a layer without actually copying the audio.  When&#xA;you use multiply for example, the layer will contain one segment&#xA;for each multiplied cycle, that references the same backing layer.  This&#xA;then is combined with any new content overdubbed during the multiply&#xA;in real time.  You don't really need to understand any of this, though&#xA;it does provide some insight into how Mobius manages memory.  Basically,&#xA;we always try to avoid copying previously recorded audio because&#xA;audio buffers are large and take time to copy.  Instead, audio buffers&#xA;are referenced through a hierarchy of segments that are "flattened"&#xA;in real time to produce the audio you actually hear.</p>
</div>
<a name='External EDP Control'>
<div class=div2><h3>18.5 External EDP Control</h3>
</a>
<p>It is possible to use Mobius to send MIDI messages to an EDP&#xA;hardware device.  Any function performed with a key, button, or MIDI&#xA;message can be redirected to the EDP instead of Mobius, or sent to&#xA;both Mobius and the EDP at the same time.  This is something I use&#xA;during testing to compare how Mobius and the EDP respond to functions.&#xA;This probably has limited practical use, but I would be curious to&#xA;know if you find one.</p>
<p>To use this feature you must first select a <i>MIDI Through</i>&#xA;device.  This must be a MIDI device to which the EDP is connected.&#xA;See the <a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a> section for more on seleting a through &#xA;device.</p>
<p>Next, pull down the <i>Configuration</i> menu and select the&#xA;<i>External EDP</i> item.  A dialog appears with the following&#xA;parameters.</p>
<dl>
<dt><a name='MIDI Control'>MIDI Control</a></dt>
<dd>Controls which device will be responsive to functions initiated&#xA;by buttons, keys, or MIDI events.  A value of <i>Mobius</i>&#xA;means that only the Mobius program will receive functions, <i>EDP</i>&#xA;means that only the external EDP will receive functions, and &#xA;a value of <i>Both</i> means, astonishingly, that both devices will&#xA;receive functions.</dd>
<dt><a name='Channel'>Channel</a></dt>
<dd>The channel on which the EDP receives MIDI messages.</dd>
<dt><a name='Base Note'>Base Note</a></dt>
<dd>The first note or controller to which the EDP will respond.&#xA;This is what the EDP calls the <i>Source#</i> parameter.&#xA;</dd>
<dt><a name='Controllers'>Controllers</a></dt>
<dd>When checked, the EDP responds to MIDI continuous controller&#xA;events, otherwise the EDP responds to MIDI key events.  This&#xA;is what the EDP calls the <i>ControlSource</i> parameter.</dd>
</dl>
<p>When triggering functions with MIDI messages, Mobius will&#xA;automatically translate the trigger message into the&#xA;message the EDP needs according to the <i>Base Note</i> and &#xA;<i>Controllers</i> parameters.  That means you don't have to &#xA;program a foot controller or control surface to send&#xA;contiguous note or controller messages that the EDP requires.&#xA;Mobius will convert random messages into contiguous note&#xA;or controller messages for you.</p>
</div>
<a name='Trace'>
<div class=div2><h3>18.6 Trace</h3>
</a>
<p>If you really want to gain a deep understanding of what Mobius is&#xA;doing, you can enable trace messages.  This is not for the faint of&#xA;heart, but I encourage anyone comfortable with the DOS shell to enable&#xA;trace and run Mobius from the command line.  When Mobius recovers from&#xA;an unusual situation, it prints a trace message to the&#xA;shell window.  Knowing these messages really helps me diagnose and fix bugs.&#xA;Trace is lost if you launch Mobius from the start menu or a desktop&#xA;icon, you can only see trace if you launch Mobius from a DOS&#xA;shell.</p>
<p>To launch Mobius from the shell, <b>cd</b> to the installation&#xA;directory which is usually <b>c:\Program Files\Mobius</b>, then&#xA;type <b>mobius</b>.  The Mobius window will be displayed and the shell&#xA;window will remain suspended until the Mobius window is closed.  Trace&#xA;messages will be printed to the shell window as Mobius runs.</p>
<p>There are three levels of tracing that may be enabled:</p>
<ol>
<li>Errors</li>
<li>Major operations</li>
<li>Minor operations</li>
</ol>
<p>Level 1 messages are the most interesting because they are only&#xA;displayed when something unexpected happens.  A level 1 message&#xA;will be displayed with the prefix "ERROR:".  If you see any of these&#xA;please try to capture them and send them to me in an email describing&#xA;approximately what you were doing.</p>
<p>Level 2 messages are displayed during normal operation and provide&#xA;insight on what is happening in the looping engine. These aren't&#xA;errors, so I don't need to know about them unless they can provide&#xA;context around a level 1 error message.</p>
<p>Level 3 messages are also not errors, but they are printed during&#xA;every audio interrupt.  This means that there will be <b>thousands</b>&#xA;of them and they will slow down operations, causing audible glitches.&#xA;There is rarely any need to enable this level of trace.</p>
<p>To enable trace you will need to edit the <b>mobius.xml</b> file in&#xA;a text editor.  Notepad will suffice, though if you're at this level&#xA;you probably have something better.  Look at the first <b>MobiusConfig</b>&#xA;element and locate the attribute <b>tracePrintLevel</b>.  The default level&#xA;should already be 1, so you need to change this only if you want to &#xA;see level 2 messages.  To set the level, change the number in quotes&#xA;after the <b>=</b>, for example <b>tracePrintLevel='2'</b>.</p>
<p>You may also notice the <b>traceDebugLevel</b> attribute.  This&#xA;controls the level of trace sent to what Windows calls the "debug&#xA;output stream".  If you know what this is, and have a debug output&#xA;stream viewer such as <b>dbwin32</b> you can use this instead of&#xA;sending trace to the shell window.  Using the debug output stream incurs&#xA;a little less overhead and you do not have to launch Mobius from&#xA;the shell in order to see the trace messages.</p>
</div>
</div>
<a name='Menu Reference'>
<div class=div1><h2>19 Menu Reference</h2>
</a>
<a name='File Menu'>
<div class=div2><h3>19.1 File Menu</h3>
</a>
<a name='Open Project'>
<div class=div3><h4>19.1.1 Open Project</h4>
</a>
<p>Loads a project from the file system.  See the <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a>&#xA;section for more details.</p>
</div>
<a name='Open Loop'>
<div class=div3><h4>19.1.2 Open Loop</h4>
</a>
<p>Loads a single loop from the file system.  The current loop will&#xA;be reset before loading.  After the loop has been read, Mobius will&#xA;enter <i>Mute</i> mode. See <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a>.</p>
</div>
<a name='Save Project'>
<div class=div3><h4>19.1.3 Save Project</h4>
</a>
<p>Saves a project to the file system.  See the <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a>&#xA;section for more details.</p>
</div>
<a name='Save Project Template'>
<div class=div3><h4>19.1.4 Save Project Template</h4>
</a>
<p>Saves the current track configuration to a project without saving any&#xA;of the audio content.  See the <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a>&#xA;section for more details.</p>
</div>
<a name='Save Loop'>
<div class=div3><h4>19.1.5 Save Loop</h4>
</a>
<p>Saves the current loop to the file system.  A dialog will be&#xA;displayed allowing you to specify the location of the file.  The loop&#xA;is stored in a standard <b>.wav</b> file.  &#xA;See the <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a> section.</p>
</div>
<a name='Save Quick'>
<div class=div3><h4>19.1.6 Save Quick</h4>
</a>
<p>Saves the current loop to the file system without prompting you for&#xA;a location.  The location will be determined by the global parameter&#xA;<i>Quick Save File</i>, specified in the <a href='mobiusdoc.htm#Global Parameters'>Global Parameters</a>&#xA;dialog.</p>
<p>The actual name of the file will be the name specified in &#xA;the global parameter, plus an integer to make the name unique.  See&#xA;the <a href='mobiusdoc.htm#Saving and Loading'>Saving and Loading</a> section.</p>
</div>
<a name='Exit'>
<div class=div3><h4>19.1.7 Exit</h4>
</a>
<p>Halts Mobius and closes the window.  All track content will be lost.</p>
</div>
</div>
<a name='Presets Menu'>
<div class=div2><h3>19.2 Presets Menu</h3>
</a>
<p>A dynamic menu whose items will have the same names as the currently&#xA;configured presets.  Selecting a menu item will activate that preset.&#xA;See the <a href='mobiusdoc.htm#Using Presets'>Using Presets</a> section for more information on presets.</p>
</div>
<a name='Configuration Menu'>
<div class=div2><h3>19.3 Configuration Menu</h3>
</a>
<a name='Presets'>
<div class=div3><h4>19.3.1 Presets</h4>
</a>
<p>Displays a dialog for editing presets.  See the <a href='mobiusdoc.htm#Using Presets'>Using Presets</a>&#xA;section for more information.</p>
</div>
<a name='Track Setups'>
<div class=div3><h4>19.3.2 Track Setups</h4>
</a>
<p>Displays a dialog for changing the initial settings for&#xA;all tracks.</p>
</div>
<a name='MIDI Control'>
<div class=div3><h4>19.3.3 MIDI Control</h4>
</a>
<p>Displays a dialog to specify how Mobius responds to MIDI&#xA;events.  See the <a href='mobiusdoc.htm#MIDI Control'>MIDI Control</a> section for more information.</p>
</div>
<a name='Keyboard Control'>
<div class=div3><h4>19.3.4 Keyboard Control</h4>
</a>
<p>Displays a dialog to specify how Mobius responds&#xA;to the computer keyboard.  See the <a href='mobiusdoc.htm#Using The Keyboard'>Using The Keyboard</a>&#xA;section for more information.</p>
</div>
<a name='Buttons'>
<div class=div3><h4>19.3.5 Buttons</h4>
</a>
<p>Displays a dialog to specify which function buttons&#xA;are displayed at the top of the window. See the <a href='mobiusdoc.htm#Using Buttons'>Using Buttons</a>&#xA;section for more information.</p>
</div>
<a name='Scripts'>
<div class=div3><h4>19.3.6 Scripts</h4>
</a>
<p>Displays a dialog to specify the names of files&#xA;containing Mobius scripts to be bound to buttons, keys, or MIDI events.&#xA;See the <a href='mobiusdoc.htm#Scripts'>Scripts</a> section for more information.</p>
</div>
<a name='Samples'>
<div class=div3><h4>19.3.7 Samples</h4>
</a>
<p>Displays a dialog to specify the names of files&#xA;containing audio samples be bound to buttons, keys, or MIDI events.&#xA;See the <a href='mobiusdoc.htm#Samples'>Samples</a> section for more information.</p>
</div>
<a name='MIDI Devices'>
<div class=div3><h4>19.3.8 MIDI Devices</h4>
</a>
<p>Displays a dialog to specify the MIDI input and output devices.&#xA;There are two sets of devices, one used when Mobius runs as a&#xA;standalone application, and one when it runs as a VST plugin.</p>
</div>
<a name='Audio Devices'>
<div class=div3><h4>19.3.9 Audio Devices</h4>
</a>
<p>Displays a dialog to specify the audio input and output devices.&#xA;See the <a href='mobiusdoc.htm#Getting Started'>Getting Started</a> section for more information.</p>
</div>
<a name='Global Parameters '>
<div class=div3><h4>19.3.10 Global Parameters </h4>
</a>
<p>Displays a dialog to specify miscellaneous parameters that affect&#xA;the operation of Mobius. See the <a href='mobiusdoc.htm#Global Parameters'>Global Parameters</a> section&#xA;for more information.</p>
</div>
<a name='Display Components'>
<div class=div3><h4>19.3.11 Display Components</h4>
</a>
<p>Displays a dialog to specify which loop status components are&#xA;displayed in the UI.  See the <a href='mobiusdoc.htm#Configuring the Status Area'>Configuring the Status Area</a>&#xA;for more information.</p>
</div>
<a name='Palette'>
<div class=div3><h4>19.3.12 Palette</h4>
</a>
<p>Displays a dialog to specify the colors used in the Mobius window.&#xA;To change a color, click on the colored box.  A standard color&#xA;selection dialog will appear, select a color and click Ok.  When&#xA;you are finished selecting colors for the various display components&#xA;click Ok on the palette dialog and the color selections will be applied.</p>
</div>
<a name='External EDP'>
<div class=div3><h4>19.3.13 External EDP</h4>
</a>
<p>Displays a dialog to specify parameters necessary to control an EDP&#xA;hardware device.  See <a href='mobiusdoc.htm#External EDP Control'>External EDP Control</a> for more information.</p>
</div>
</div>
<a name='Help Menu'>
<div class=div2><h3>19.4 Help Menu</h3>
</a>
<a name='Key Bindings'>
<div class=div3><h4>19.4.1 Key Bindings</h4>
</a>
<p>Displays a dialog that summarizes the functions that are bound&#xA;to computer keyboard keys.  This is a <i>non modal</i> dialog, meaning&#xA;that you can leave it open and still interact with the &#xA;main Mobius window.</p>
</div>
<a name='MIDI Bindings'>
<div class=div3><h4>19.4.2 MIDI Bindings</h4>
</a>
<p>Displays a dialog that summarizes the functions that are bound&#xA;to MIDI events.  This is a <i>non modal</i> dialog, meaning&#xA;that you can leave it open and still interact with the &#xA;main Mobius window.</p>
</div>
<a name='About'>
<div class=div3><h4>19.4.3 About</h4>
</a>
<p>The ubiquitous about dialog.  Nothing really interesting here&#xA;besides the version number which you should include when&#xA;reporting problems.</p>
</div>
</div>
</div>
<a name='The Future'>
<div class=div1><h2>20 The Future</h2>
</a>
<p>Mobius is still under active development and I welcome any feature&#xA;requests.  Apart from bug fixes, the expected order of development will &#xA;probably be:</p>
<ul>
<li>Pitch Shifting, Time Stretching, and Variable Playback Rate</li>
<li>Loop Windowing</li>
<li>Script enhancements</li>
<li>MAC Port</li>
</ul>
</div>
<a name='Acknowledgments'>
<div class=div1><h2>21 Acknowledgments</h2>
</a>
<p><i>Echoplex Digital Pro</i> and <i>EDP</i> are trademarks&#xA;of the Gibson Guitar Corporation.</p>
<p><i>Loop IV</i> is a trademark of Aurisis Research, LLC</p>
<p><i>Live</i> is a trademark of Ableton.</p>
<p><i>Bidule</i> is a trademark of Plogue Art et Technologie Inc.&#xA;and is available at www.plogue.com</p>
<p><i>Chainer</i> is available at www.xlutop.com</p>
<p><i>Audio Mulch</i> is available at www.audiomulch.com</p>
<p><i>EnergyXT</i> is available at www.xt-hq.com</p>
</div>
</body>
</html>
